<OptimizationInstance struct="OptimizationInstance" ttype="STRUCT"><id ttype="STRING">Constraint=1_2122402542</id><supplyChain struct="SupplyChain" ttype="STRUCT"><id ttype="STRING">Network</id><name ttype="STRING">supplyChainName12345</name><steps ttype="MAP"><item><key ttype="STRING">16660__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16660__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</id><narrativeDescription ttype="STRING">16660__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">16660__HOLD_REQUIREMENT</item><item ttype="STRING">1073750323__END_REQUIREMENT</item><item ttype="STRING">16661__END_REQUIREMENT</item><item ttype="STRING">16660__END_REQUIREMENT</item><item ttype="STRING">1073750324__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_SC</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"lps","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122388654"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">16660__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073750324__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373856"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6241__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">16662__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16662__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</id><narrativeDescription ttype="STRING">16662__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">16662__HOLD_REQUIREMENT</item><item ttype="STRING">1073750323__END_REQUIREMENT</item><item ttype="STRING">16661__END_REQUIREMENT</item><item ttype="STRING">16660__END_REQUIREMENT</item><item ttype="STRING">1073750324__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_SC</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"lps","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122388654"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">16662__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073750324__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">16661__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16661__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 16661 L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_16661_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item><item ttype="STRING">1073744925__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373848"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073744925__HOLD_REQUIREMENT</item><item ttype="STRING">6244__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":1.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373829"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6240__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">16659__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16659__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 16659__L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_16659_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373857"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6247__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">6243__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6243__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 6243</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">6243__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_6243_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373878"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6236__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">16665__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16665__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 16665__25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">16665__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_16665_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">6237__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6237__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 6237 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16660__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16660__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</id><narrativeDescription ttype="STRING">16660__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">16660__HOLD_REQUIREMENT</item><item ttype="STRING">1073750323__END_REQUIREMENT</item><item ttype="STRING">16661__END_REQUIREMENT</item><item ttype="STRING">16660__END_REQUIREMENT</item><item ttype="STRING">1073750324__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_SC</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"lps","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122388654"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">16660__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073750323__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">16665__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16665__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 16665 25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">6245__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6245__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 6245__L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1001565__1000710__2122381360__S__D__D__TRANSPORT_REQUIREMENT__37105</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_6245_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">37105_9_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16659__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16659__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 16659</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">16659__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_16659_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373874"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6242__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373839"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6243__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073744925__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073744925__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073744925__25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073744925__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073744925_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373863"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6247__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">6236__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6236__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 6236 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16659__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16659__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</id><narrativeDescription ttype="STRING">16659__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">16659__HOLD_REQUIREMENT</item><item ttype="STRING">1073750323__END_REQUIREMENT</item><item ttype="STRING">16661__END_REQUIREMENT</item><item ttype="STRING">16660__END_REQUIREMENT</item><item ttype="STRING">1073750324__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_SC</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"lps","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122388654"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">16659__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073750324__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">6245__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6245__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 6245 L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">6245__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16660__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16660__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 16660 L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">16660__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16662__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16659__16661__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16660__END_REQUIREMENT</item><item ttype="STRING">16660__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16659__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16659__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16662__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073746926__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746926__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073746926 25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073750324__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750324__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 1073750324 </narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073750324_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">16660__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16660__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 16660__L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">16660__HOLD_REQUIREMENT</item><item ttype="STRING">16660__END_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_16660_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073746926__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746926__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073746926__25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073746926__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073746926_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">6242__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6242__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 6242</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">6242__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_6242_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073746924__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746924__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073746924 25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1073746924__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073744925__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073744925__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073744925__25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073744925_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16659__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16659__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 16659__L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">16659__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_16659_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">37105_9_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16659__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16659__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 16659 L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">16660__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16659__16661__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16659__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">16660__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16659__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16659__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16662__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373850"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6241__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">6240__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6240__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 6240 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1001565__1000710__2122381360__S__D__D__TRANSPORT_REQUIREMENT__37105</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001565__1000710__2122381360__S__D__D__TRANSPORT_REQUIREMENT__37105</id><narrativeDescription ttype="STRING">Transport from 1001565__1000710__2122381360__S__D__D__TRANSPORT_REQUIREMENT__37105__22GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">16659__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">37105_9_S</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":1500.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[],"rateId":"2122381360"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2592000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1325318400</rateValidityStart><rateValidityEnd ttype="I64">2429856000</rateValidityEnd></value></item><item><key ttype="STRING">6247__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6247__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 6247 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16662__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16662__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 16662 L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">16662__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16662__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">16659__16661__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16660__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16659__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16659__1073750324__2122388654__SC______MULTI_STOP__1003__FLAT</item><item ttype="STRING">16662__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16662__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16662__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 16662</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">16662__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_16662_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073744925__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373820"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6240__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073744925__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073744925__HOLD_REQUIREMENT</item><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373842"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073744925__HOLD_REQUIREMENT</item><item ttype="STRING">6244__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">6236__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6236__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 6236</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">6236__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_6236_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">6244__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6244__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 6244 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073744925__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073744925__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073744925 25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1073744925__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">6242__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6242__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 6242 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16660__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16660__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 16660 L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_16660_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073746924__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746924__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073746924__25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073746924_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16662__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16662__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 16662__L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_16662_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073746925__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746925__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073746925__25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073746925_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">16659__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16659__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</id><narrativeDescription ttype="STRING">16659__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">16659__HOLD_REQUIREMENT</item><item ttype="STRING">1073750323__END_REQUIREMENT</item><item ttype="STRING">16661__END_REQUIREMENT</item><item ttype="STRING">16660__END_REQUIREMENT</item><item ttype="STRING">1073750324__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_SC</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"lps","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122388654"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">16659__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073750323__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">6247__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6247__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 6247</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">6247__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_6247_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373869"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item><item ttype="STRING">6237__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">16662__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16662__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT</id><narrativeDescription ttype="STRING">16662__1073750323__2122388654__SC______MULTI_STOP__1003__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">16662__HOLD_REQUIREMENT</item><item ttype="STRING">1073750323__END_REQUIREMENT</item><item ttype="STRING">16661__END_REQUIREMENT</item><item ttype="STRING">16660__END_REQUIREMENT</item><item ttype="STRING">1073750324__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_SC</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"lps","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122388654"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">16662__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073750323__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">6240__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6240__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 6240</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">6240__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_6240_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373823"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6240__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073746924__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746924__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073746924</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073746924_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">16659__16661__2122388654__SC______MULTI_STOP__1003__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16659__16661__2122388654__SC______MULTI_STOP__1003__FLAT</id><narrativeDescription ttype="STRING">16659__16661__2122388654__SC______MULTI_STOP__1003__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">16659__HOLD_REQUIREMENT</item><item ttype="STRING">1073750323__END_REQUIREMENT</item><item ttype="STRING">16661__END_REQUIREMENT</item><item ttype="STRING">16660__END_REQUIREMENT</item><item ttype="STRING">1073750324__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_SC</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"lps","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122388654"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">16659__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">16661__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">6245__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6245__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 6245__L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_6245_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073746924__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746924__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073746924__25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073746924_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">6243__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6243__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 6243 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073744925__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373830"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6243__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073744925__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">6241__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6241__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 6241 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">6244__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6244__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 6244</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">6244__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_6244_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073746925__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746925__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073746925</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073746925__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073746925_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">6237__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6237__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 6237</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">6237__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_6237_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</id><narrativeDescription ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item><item ttype="STRING">36280_9_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"stopBands":[{"stop":3,"start":1,"costPerStop":1.0},{"stop":6,"start":4,"costPerStop":2.0},{"stop":2147483647,"start":7,"costPerStop":3.0}],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122373833"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">6243__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073746924__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1316156400</rateValidityStart><rateValidityEnd ttype="I64">2546924400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"36280_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073746925__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746925__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073746925 25RT,22GP,42GP,L5GP,00A0,45RN,25RN</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">96908__1001565__2122373856__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001565__2122373839__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__96020__2122373823__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__1001565__2122373863__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__1001565__2122373848__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001552__2122373820__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001539__1001565__2122373829__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1001552__96020__2122373842__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__1001552__2122373830__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">98699__96020__2122373857__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">97207__96020__2122373833__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">95826__1001565__2122373878__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">1073746925__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">96908__96020__2122373850__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96020__1001565__2122373869__SC______MULTI_STOP__36280__FLAT</item><item ttype="STRING">96943__1001565__2122373874__SC______MULTI_STOP__36280__FLAT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">6245__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6245__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 6245</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">6245__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_6245_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073750323__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750323__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 1073750323 </narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073750323_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">6241__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">6241__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 6241</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">6241__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_6241_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">16662__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">16662__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 16662__L5GP,25RT,45RN,25RN,00A0,22GP,42GP</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">16662__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_16662_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item></steps><operatingTimes ttype="MAP"><item><key ttype="STRING">RECEIVING_1073750323_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073750323_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_6240_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_6240_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_16659_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_16659_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_6243_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_6243_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_6245_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_6245_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073744925_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073744925_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_6245_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_6245_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073746924_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073746924_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_16665_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_16665_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_16661_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_16661_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073746925_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073746925_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_6242_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_6242_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_16660_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_16660_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_6244_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_6244_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_6236_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_6236_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_16659_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_16659_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_6247_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_6247_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073750324_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073750324_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_16662_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_16662_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_16662_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_16662_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073744925_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073744925_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073746925_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073746925_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_6237_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_6237_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_6241_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_6241_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073746926_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073746926_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073746924_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073746924_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_16660_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_16660_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item></openTimeRange></value></item></operatingTimes><unitDimensions ttype="MAP"><item><key ttype="STRING">LINEARMETER</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">LINEARMETER</id><dimension ttype="I32">10</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/LNM</id><name ttype="STRING">544</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">WEIGHT</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">WEIGHT</id><dimension ttype="I32">5</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">wtInKG</id><name ttype="STRING">33</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">PACKAGE</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">PACKAGE</id><dimension ttype="I32">12</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/package</id><name ttype="STRING">155</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CUSTOM</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CUSTOM</id><dimension ttype="I32">6</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">NumberOfTOS</id><name ttype="STRING">100001</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">VOLUME</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">VOLUME</id><dimension ttype="I32">4</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">volInCBM</id><name ttype="STRING">81</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CURRENCY</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CURRENCY</id><dimension ttype="I32">0</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">Dollar</id><name ttype="STRING">840</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">PALLET</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">PALLET</id><dimension ttype="I32">7</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/pallet</id><name ttype="STRING">169</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CARTON</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CARTON</id><dimension ttype="I32">8</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/carton</id><name ttype="STRING">159</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">SQUAREMETER</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">SQUAREMETER</id><dimension ttype="I32">11</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/SQM</id><name ttype="STRING">181</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">UNIT</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">UNIT</id><dimension ttype="I32">9</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/unit</id><name ttype="STRING">152</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item></unitDimensions><resources ttype="MAP"><item><key ttype="STRING">36280_9_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">36280_9_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"36280_9_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">_9</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_9</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_9"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1004_10_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1004_10_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1004_10_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1008_9_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1008_9_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1008_9_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">_11</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_11</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_11"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">_10</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_10</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_10"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">32314_9_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">32314_9_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"32314_9_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1006_11_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1006_11_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1006_11_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1003_9_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_9_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_9_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">37105_9_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">37105_9_S</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"37105_9_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item></resources><globalScript ttype="STRING">distanceMatrix = {"6236":{"6236":0.01,"6237":77.56,"6238":107.43,"6239":27.14,"6240":319.86,"6241":175.47,"6242":61.63,"6243":317.75,"6244":266.76,"6245":76.69,"6246":49.73,"6247":111.03,"16663":4055.89,"16664":4042.36,"16665":4068.43,"16666":3934.59,"16667":3934.22,"16668":3924.91,"1073744924":257.98,"1073744925":260.21,"1073746924":76.61,"1073746925":353.27,"1073746926":1097.58},"660361":{"660332":1660.6,"660333":1680.4,"16181":2575.6,"16182":2575.6,"16183":2575.6},"1073744925":{"1073744924":227.16,"6236":260.21,"6237":184.47,"6238":364.72,"6239":286.48,"6240":171.92,"6241":89.69,"6242":200.37,"6243":140.06,"6244":0.01,"6245":341.66,"6246":310.78,"6247":154.74,"16663":935.31,"16664":949.12,"16665":936.58,"16666":1100.45,"16667":1111.94,"16668":1116.8,"1073744925":0.01,"1073746924":184.47,"1073746925":171.92,"1073746926":1095.22},"660333":{"660361":1680.2,"16181":1235.1,"16182":1235.1,"16183":1235.1,"660332":288.973268478},"660332":{"660361":1660.8,"16181":1278.2,"16182":1278.2,"16183":1278.2,"660333":288.973268478},"16659":{"1073750323":50.0,"1073750324":746.45,"16661":484.57},"6241":{"6236":175.47,"6237":97.91,"6238":282.79,"6239":201.96,"6240":147.25,"6241":0.01,"6242":113.91,"6243":144.0,"6244":91.38,"6245":251.82,"6246":224.06,"6247":64.81,"16663":3986.42,"16664":3973.03,"16665":4001.84,"16666":3874.04,"16667":3875.23,"16668":3865.41,"1073744924":217.3,"1073744925":89.69,"1073746924":95.65,"1073746925":206.24,"1073746926":1075.63},"16264":{"16263":67.27,"16262":50.23,"16264":0.01},"1073750323":{"1073750324":277.83,"16659":510.05,"16661":63.0,"16660":0.01,"16662":63.92,"1073750323":0.01},"16660":{"1073750323":0.01,"1073750324":277.83},"6240":{"6236":319.86,"6237":242.96,"6238":425.97,"6239":345.41,"6240":0.01,"6241":147.25,"6242":259.21,"6243":9.15,"6244":67.07,"6245":396.55,"6246":366.75,"6247":209.27,"16663":3897.02,"16664":3883.77,"16665":3914.56,"16666":3791.45,"16667":3793.8,"16668":3783.62,"1073744924":398.0,"1073744925":171.92,"1073746924":282.7,"1073746925":0.01,"1073746926":940.79},"16263":{"16264":67.27,"16262":25.41,"16263":0.01},"6243":{"6236":317.75,"6237":240.56,"6238":424.24,"6239":343.54,"6240":9.15,"6241":144.0,"6242":256.79,"6243":0.01,"6244":60.58,"6245":394.43,"6246":365.05,"6247":206.88,"16663":3905.89,"16664":3892.64,"16665":3923.47,"16666":3800.43,"16667":3802.8,"16668":3792.61,"1073744924":366.88,"1073744925":140.06,"1073746924":264.4,"1073746925":33.18,"1073746926":973.07},"16262":{"16264":50.23,"16263":25.41,"16262":0.01},"6242":{"6236":61.63,"6237":16.25,"6238":169.05,"6239":88.41,"6240":259.21,"6241":113.91,"6242":0.01,"6243":256.79,"6244":205.15,"6245":137.93,"6246":110.79,"6247":49.94,"16663":4033.23,"16664":4019.75,"16665":4046.79,"16666":3915.06,"16667":3915.24,"16668":3905.75,"1073744924":220.91,"1073744925":200.37,"1073746924":22.29,"1073746925":304.62,"1073746926":1097.45},"1073750324":{"1073750323":277.83,"16659":746.45,"16661":336.43,"16660":277.83,"16662":339.48,"1073750324":0.01},"6245":{"6236":76.69,"6237":154.04,"6238":34.46,"6239":52.02,"6240":396.55,"6241":251.82,"6242":137.93,"6243":394.43,"6244":342.94,"6245":0.01,"6246":34.7,"6247":187.63,"16663":4095.18,"16664":4081.6,"16665":4106.53,"16666":3970.33,"16667":3969.33,"16668":3960.23,"1073744924":276.94,"1073744925":341.66,"1073746924":166.66,"1073746925":447.98,"1073746926":1165.98},"16664":{"16663":13.82,"16665":63.33,"16666":206.99,"16667":234.47,"16668":229.72,"6236":4042.36,"6237":4010.64,"6238":4080.99,"6239":4047.34,"6240":3883.77,"6241":3973.03,"6242":4019.75,"6243":3892.64,"6244":3943.2,"6245":4081.6,"6246":4051.27,"6247":3993.02,"1073744924":1159.99,"1073744925":949.12},"6244":{"6236":266.76,"6237":189.24,"6238":374.13,"6239":293.33,"6240":67.07,"6241":91.38,"6242":205.15,"6243":60.58,"6244":0.01,"6245":342.94,"6246":315.44,"6247":156.17,"16663":3956.49,"16664":3943.2,"16665":3973.46,"16666":3849.04,"16667":3851.05,"16668":3840.97,"1073744924":227.16,"1073744925":0.01,"1073746924":184.47,"1073746925":171.92,"1073746926":1095.22},"16663":{"16664":13.82,"16665":61.86,"16666":216.79,"16667":243.59,"16668":239.41,"6236":4055.89,"6237":4024.11,"6238":4094.6,"6239":4060.9,"6240":3897.02,"6241":3986.42,"6242":4033.23,"6243":3905.89,"6244":3956.49,"6245":4095.18,"6246":4064.84,"6247":4006.46,"1073744924":1146.24,"1073744925":935.31},"6247":{"6236":111.03,"6237":33.69,"6238":218.14,"6239":137.29,"6240":209.27,"6241":64.81,"6242":49.94,"6243":206.88,"6244":156.17,"6245":187.63,"6246":159.3,"6247":0.01,"16663":4006.46,"16664":3993.02,"16665":4020.79,"16666":3890.64,"16667":3891.23,"16668":3881.6,"1073744924":242.33,"1073744925":154.74,"1073746924":41.11,"1073746925":241.65,"1073746926":1055.37},"16662":{"1073750323":63.92,"1073750324":339.48},"6246":{"6236":49.73,"6237":126.34,"6238":59.24,"6239":22.59,"6240":366.75,"6241":224.06,"6242":110.79,"6243":365.05,"6244":315.44,"6245":34.7,"6246":0.01,"6247":159.3,"16663":4064.84,"16664":4051.27,"16665":4076.49,"16666":3940.92,"16667":3940.09,"16668":3930.93,"1073744924":332.73,"1073744925":310.78,"1073746924":130.77,"1073746925":372.53,"1073746926":1044.98},"16661":{"1073750323":63.0,"1073750324":60.0,"16659":484.57},"16183":{"660332":1279.7,"660333":1236.7,"660361":2574.2,"16181":62.12,"16182":36.93},"1073746925":{"1073746924":620.0,"1073746926":620.0,"6236":353.27,"6237":282.7,"6238":439.24,"6239":362.82,"6240":0.01,"6241":206.24,"6242":304.62,"6243":33.18,"6244":171.92,"6245":447.98,"6246":372.53,"6247":241.65,"1073744924":398.0,"1073744925":171.92},"16182":{"660332":1279.7,"660333":1236.7,"660361":2574.2,"16181":93.4,"16183":36.93},"1073746926":{"1073746924":620.0,"1073746925":620.0,"6236":1097.58,"6237":1080.99,"6238":1090.94,"6239":1070.36,"6240":940.79,"6241":1075.63,"6242":1097.45,"6243":973.07,"6244":1095.22,"6245":1165.98,"6246":1044.98,"6247":1055.37,"1073744924":1292.25,"1073744925":1095.22},"16181":{"660332":1279.7,"660333":1236.7,"660361":2574.2,"16183":62.12,"16182":93.4},"1073744924":{"6236":257.98,"6237":228.53,"6238":347.68,"6239":297.46,"6240":398.0,"6241":217.3,"6242":220.91,"6243":366.88,"6244":227.16,"6245":276.94,"6246":332.73,"6247":242.33,"16663":1146.24,"16664":1159.99,"16665":1142.03,"16666":1298.16,"16667":1306.8,"16668":1312.91,"1073744924":0.01,"1073744925":227.16,"1073746924":228.53,"1073746925":398.0,"1073746926":1292.25},"1073746924":{"1073746925":620.0,"1073746926":620.0,"6236":76.61,"6237":0.01,"6238":180.29,"6239":102.8,"6240":282.7,"6241":95.65,"6242":22.29,"6243":264.4,"6244":184.47,"6245":166.66,"6246":130.77,"6247":41.11,"1073744924":228.53,"1073744925":184.47},"6238":{"6236":107.43,"6237":184.89,"6238":0.01,"6239":80.85,"6240":425.97,"6241":282.79,"6242":169.05,"6243":424.24,"6244":374.13,"6245":34.46,"6246":59.24,"6247":218.14,"16663":4094.6,"16664":4080.99,"16665":4105.34,"16666":3967.95,"16667":3966.62,"16668":3957.64,"1073744924":347.68,"1073744925":364.72,"1073746924":180.29,"1073746925":439.24,"1073746926":1090.94},"16668":{"16663":239.41,"16664":229.72,"16665":200.94,"16666":22.82,"16667":13.94,"6236":3924.91,"6237":3897.46,"6238":3957.64,"6239":3928.32,"6240":3783.62,"6241":3865.41,"6242":3905.75,"6243":3792.61,"6244":3840.97,"6245":3960.23,"6246":3930.93,"6247":3881.6,"1073744924":1312.91,"1073744925":1116.8},"6237":{"6236":77.56,"6237":0.01,"6238":184.89,"6239":104.11,"6240":242.96,"6241":97.91,"6242":16.25,"6243":240.56,"6244":189.24,"6245":154.04,"6246":126.34,"6247":33.69,"16663":4024.11,"16664":4010.64,"16665":4037.92,"16666":3906.69,"16667":3907.0,"16668":3897.46,"1073744924":228.53,"1073744925":184.47,"1073746924":0.01,"1073746925":282.7,"1073746926":1080.99},"16667":{"16663":243.59,"16664":234.47,"16665":202.2,"16666":31.06,"16668":13.94,"6236":3934.22,"6237":3907.0,"6238":3966.62,"6239":3937.54,"6240":3793.8,"6241":3875.23,"6242":3915.24,"6243":3802.8,"6244":3851.05,"6245":3969.33,"6246":3940.09,"6247":3891.23,"1073744924":1306.8,"1073744925":1111.94},"16666":{"16663":216.79,"16664":206.99,"16665":179.66,"16667":31.06,"16668":22.82,"6236":3934.59,"6237":3906.69,"6238":3967.95,"6239":3938.17,"6240":3791.45,"6241":3874.04,"6242":3915.06,"6243":3800.43,"6244":3849.04,"6245":3970.33,"6246":3940.92,"6247":3890.64,"1073744924":1298.16,"1073744925":1100.45},"6239":{"6236":27.14,"6237":104.11,"6238":80.85,"6239":0.01,"6240":345.41,"6241":201.96,"6242":88.41,"6243":343.54,"6244":293.33,"6245":52.02,"6246":22.59,"6247":137.29,"16663":4060.9,"16664":4047.34,"16665":4072.95,"16666":3938.17,"16667":3937.54,"16668":3928.32,"1073744924":297.46,"1073744925":286.48,"1073746924":102.8,"1073746925":362.82,"1073746926":1070.36},"16665":{"16663":61.86,"16664":63.33,"16666":179.66,"16667":202.2,"16668":200.94,"6236":4068.43,"6237":4037.92,"6238":4105.34,"6239":4072.95,"6240":3914.56,"6241":4001.84,"6242":4046.79,"6243":3923.47,"6244":3973.46,"6245":4106.53,"6246":4076.49,"6247":4020.79,"1073744924":1142.03,"1073744925":936.58}}
transitTimeMatrix = {"6236":{"6236":60,"6237":5580,"6238":7680,"6239":1920,"6240":22980,"6241":12600,"6242":4380,"6243":22860,"6244":19200,"6245":5520,"6246":3540,"6247":7980,"16663":292020,"16664":291000,"16665":292920,"16666":283260,"16667":283260,"16668":282540,"1073744924":18540,"1073744925":18720,"1073746924":5460,"1073746925":25380,"1073746926":79020},"660361":{"660332":97800,"660333":98220,"16181":141240,"16182":141240,"16183":141240},"1073744925":{"1073744924":16320,"6236":18720,"6237":13260,"6238":26220,"6239":20580,"6240":12360,"6241":6420,"6242":14400,"6243":10080,"6244":60,"6245":24540,"6246":22320,"6247":11100,"16663":67320,"16664":68280,"16665":67380,"16666":79200,"16667":80040,"16668":80400,"1073744925":60,"1073746924":13260,"1073746925":12360,"1073746926":78840},"660333":{"660361":98160,"16181":69060,"16182":69060,"16183":69060,"660332":20760},"660332":{"660361":97800,"16181":72420,"16182":72420,"16183":72420,"660333":20760},"16659":{"1073750323":7200,"1073750324":53700,"16661":34860},"6241":{"6236":12600,"6237":7020,"6238":20340,"6239":14520,"6240":10560,"6241":60,"6242":8160,"6243":10320,"6244":6540,"6245":18120,"6246":16080,"6247":4620,"16663":286980,"16664":286020,"16665":288120,"16666":278880,"16667":279000,"16668":278280,"1073744924":15600,"1073744925":6420,"1073746924":6840,"1073746925":14820,"1073746926":77400},"16264":{"16263":4800,"16262":3600,"16264":60},"1073750323":{"1073750324":19980,"16659":36720,"16661":4500,"16660":60,"16662":4560,"1073750323":60},"16660":{"1073750323":60,"1073750324":19980},"6240":{"6236":22980,"6237":17460,"6238":30660,"6239":24840,"6240":60,"6241":10560,"6242":18660,"6243":600,"6244":4800,"6245":28500,"6246":26400,"6247":15060,"16663":280560,"16664":279600,"16665":281820,"16666":272940,"16667":273120,"16668":272400,"1073744924":28620,"1073744925":12360,"1073746924":20340,"1073746925":60,"1073746926":67680},"16263":{"16264":4800,"16262":1800,"16263":60},"6243":{"6236":22860,"6237":17280,"6238":30540,"6239":24720,"6240":600,"6241":10320,"6242":18480,"6243":60,"6244":4320,"6245":28380,"6246":26280,"6247":14880,"16663":281220,"16664":280260,"16665":282480,"16666":273600,"16667":273780,"16668":273060,"1073744924":26400,"1073744925":10080,"1073746924":19020,"1073746925":2340,"1073746926":70020},"16262":{"16264":3600,"16263":1800,"16262":60},"6242":{"6236":4380,"6237":1140,"6238":12120,"6239":6360,"6240":18660,"6241":8160,"6242":60,"6243":18480,"6244":14760,"6245":9900,"6246":7920,"6247":3540,"16663":290340,"16664":289380,"16665":291360,"16666":281880,"16667":281880,"16668":281160,"1073744924":15900,"1073744925":14400,"1073746924":1560,"1073746925":21900,"1073746926":78960},"1073750324":{"1073750323":19980,"16659":53700,"16661":24180,"16660":19980,"16662":24420,"1073750324":60},"6245":{"6236":5520,"6237":11040,"6238":2460,"6239":3720,"6240":28500,"6241":18120,"6242":9900,"6243":28380,"6244":24660,"6245":60,"6246":2460,"6247":13500,"16663":294840,"16664":293820,"16665":295620,"16666":285840,"16667":285780,"16668":285120,"1073744924":19920,"1073744925":24540,"1073746924":11940,"1073746925":32220,"1073746926":83940},"16664":{"16663":960,"16665":4500,"16666":14880,"16667":16860,"16668":16500,"6236":291000,"6237":288720,"6238":293820,"6239":291360,"6240":279600,"6241":286020,"6242":289380,"6243":280260,"6244":283860,"6245":293820,"6246":291660,"6247":287460,"1073744924":83460,"1073744925":68280},"6244":{"6236":19200,"6237":13620,"6238":26880,"6239":21060,"6240":4800,"6241":6540,"6242":14760,"6243":4320,"6244":60,"6245":24660,"6246":22680,"6247":11220,"16663":284820,"16664":283860,"16665":286080,"16666":277080,"16667":277260,"16668":276540,"1073744924":16320,"1073744925":60,"1073746924":13260,"1073746925":12360,"1073746926":78840},"16663":{"16664":960,"16665":4440,"16666":15600,"16667":17520,"16668":17220,"6236":292020,"6237":289680,"6238":294780,"6239":292380,"6240":280560,"6241":286980,"6242":290340,"6243":281220,"6244":284820,"6245":294840,"6246":292620,"6247":288420,"1073744924":82500,"1073744925":67320},"6247":{"6236":7980,"6237":2400,"6238":15660,"6239":9840,"6240":15060,"6241":4620,"6242":3540,"6243":14880,"6244":11220,"6245":13500,"6246":11460,"6247":60,"16663":288420,"16664":287460,"16665":289440,"16666":280080,"16667":280140,"16668":279420,"1073744924":17400,"1073744925":11100,"1073746924":2940,"1073746925":17340,"1073746926":75960},"16662":{"1073750323":4560,"1073750324":24420},"6246":{"6236":3540,"6237":9060,"6238":4260,"6239":1620,"6240":26400,"6241":16080,"6242":7920,"6243":26280,"6244":22680,"6245":2460,"6246":60,"6247":11460,"16663":292620,"16664":291660,"16665":293460,"16666":283740,"16667":283680,"16668":283020,"1073744924":23940,"1073744925":22320,"1073746924":9360,"1073746925":26820,"1073746926":75180},"16661":{"1073750323":4500,"1073750324":8400,"16659":34860},"16183":{"660332":72420,"660333":69060,"660361":141120,"16181":4440,"16182":2640},"1073746925":{"1073746924":30000,"1073746926":30000,"6236":25380,"6237":20340,"6238":31620,"6239":26100,"6240":60,"6241":14820,"6242":21900,"6243":2340,"6244":12360,"6245":32220,"6246":26820,"6247":17340,"1073744924":28620,"1073744925":12360},"16182":{"660332":72420,"660333":69060,"660361":141120,"16181":6720,"16183":2640},"1073746926":{"1073746924":30000,"1073746925":30000,"6236":79020,"6237":77820,"6238":78540,"6239":77040,"6240":67680,"6241":77400,"6242":78960,"6243":70020,"6244":78840,"6245":83940,"6246":75180,"6247":75960,"1073744924":93000,"1073744925":78840},"16181":{"660332":72420,"660333":69060,"660361":141120,"16183":4440,"16182":6720},"1073744924":{"6236":18540,"6237":16440,"6238":25020,"6239":21360,"6240":28620,"6241":15600,"6242":15900,"6243":26400,"6244":16320,"6245":19920,"6246":23940,"6247":17400,"16663":82500,"16664":83460,"16665":82200,"16666":93420,"16667":94080,"16668":94500,"1073744924":60,"1073744925":16320,"1073746924":16440,"1073746925":28620,"1073746926":93000},"1073746924":{"1073746925":30000,"1073746926":30000,"6236":5460,"6237":60,"6238":12960,"6239":7380,"6240":20340,"6241":6840,"6242":1560,"6243":19020,"6244":13260,"6245":11940,"6246":9360,"6247":2940,"1073744924":16440,"1073744925":13260},"6238":{"6236":7680,"6237":13260,"6238":60,"6239":5820,"6240":30660,"6241":20340,"6242":12120,"6243":30540,"6244":26880,"6245":2460,"6246":4260,"6247":15660,"16663":294780,"16664":293820,"16665":295560,"16666":285660,"16667":285540,"16668":284940,"1073744924":25020,"1073744925":26220,"1073746924":12960,"1073746925":31620,"1073746926":78540},"16668":{"16663":17220,"16664":16500,"16665":14460,"16666":1620,"16667":960,"6236":282540,"6237":280560,"6238":284940,"6239":282780,"6240":272400,"6241":278280,"6242":281160,"6243":273060,"6244":276540,"6245":285120,"6246":283020,"6247":279420,"1073744924":94500,"1073744925":80400},"6237":{"6236":5580,"6237":60,"6238":13260,"6239":7440,"6240":17460,"6241":7020,"6242":1140,"6243":17280,"6244":13620,"6245":11040,"6246":9060,"6247":2400,"16663":289680,"16664":288720,"16665":290700,"16666":281280,"16667":281280,"16668":280560,"1073744924":16440,"1073744925":13260,"1073746924":60,"1073746925":20340,"1073746926":77820},"16667":{"16663":17520,"16664":16860,"16665":14520,"16666":2220,"16668":960,"6236":283260,"6237":281280,"6238":285540,"6239":283500,"6240":273120,"6241":279000,"6242":281880,"6243":273780,"6244":277260,"6245":285780,"6246":283680,"6247":280140,"1073744924":94080,"1073744925":80040},"16666":{"16663":15600,"16664":14880,"16665":12900,"16667":2220,"16668":1620,"6236":283260,"6237":281280,"6238":285660,"6239":283500,"6240":272940,"6241":278880,"6242":281880,"6243":273600,"6244":277080,"6245":285840,"6246":283740,"6247":280080,"1073744924":93420,"1073744925":79200},"6239":{"6236":1920,"6237":7440,"6238":5820,"6239":60,"6240":24840,"6241":14520,"6242":6360,"6243":24720,"6244":21060,"6245":3720,"6246":1620,"6247":9840,"16663":292380,"16664":291360,"16665":293220,"16666":283500,"16667":283500,"16668":282780,"1073744924":21360,"1073744925":20580,"1073746924":7380,"1073746925":26100,"1073746926":77040},"16665":{"16663":4440,"16664":4500,"16666":12900,"16667":14520,"16668":14460,"6236":292920,"6237":290700,"6238":295560,"6239":293220,"6240":281820,"6241":288120,"6242":291360,"6243":282480,"6244":286080,"6245":295620,"6246":293460,"6247":289440,"1073744924":82200,"1073744925":67380}}
var rate = function(rateInputObj) {&#13;
&#13;
	this.evaluateByObj = function(dimObj) {&#13;
		result = this.evaluate(dimObj);&#13;
		if (!result || result.total &lt;= 0 || !rateInputObj.baseRate.total&#13;
				|| rateInputObj.baseRate.total &lt;= 0) {&#13;
			// warn(rateInputObj.rateId+':FinalTotalAmt='+result.total);&#13;
			// warn(rateInputObj.rateId+':Dimensions: '+JSON.stringify(dimObj));&#13;
			return 9999999;&#13;
		}&#13;
		return parseFloat(result.total);&#13;
	};&#13;
&#13;
	this.evaluate = function(dimObj) {&#13;
		this.evaluateBaseRate(dimObj);&#13;
		this.evaluateAccessorials(dimObj);&#13;
		this.evaluateStopOff(dimObj.stopOffs);&#13;
		this.getDistanceSplit(dimObj);&#13;
		this.evaluateTransitTime(dimObj);&#13;
		totalAmt = 0;&#13;
		baseRateBasis = rateInputObj.baseRate.basis;&#13;
		supportedBasis = rateInputObj.baseRate.supportedBasis;&#13;
		if (rateInputObj.baseRate.total) {&#13;
			totalAmt = rateInputObj.baseRate.total;&#13;
		}&#13;
		if (rateInputObj.accessorials) {&#13;
			for (i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				if (rateInputObj.accessorials[i]&#13;
						&amp;&amp; rateInputObj.accessorials[i].total&#13;
						&amp;&amp; (baseRateBasis || rateInputObj.accessorials[i].supportedBasis)) {&#13;
					totalAmt = totalAmt + rateInputObj.accessorials[i].total;&#13;
				}&#13;
			}&#13;
		}&#13;
		if (rateInputObj.stopBands &amp;&amp; rateInputObj.stopOffTotal) {&#13;
			totalAmt = totalAmt + rateInputObj.stopOffTotal;&#13;
		}&#13;
		rateInputObj.total = parseFloat(totalAmt);&#13;
		return rateInputObj;&#13;
	};&#13;
	&#13;
	this.evaluateSMCRate = function(dimObj) {&#13;
		lbConvRate = rateInputObj.baseRate.lbConvRate;&#13;
		smcWeight = dimObj.dims.wtInKG * lbConvRate;&#13;
		smcRate = 0.0;&#13;
		smcDiscount = 0.0;&#13;
		smcFinalPrice = 0.0;&#13;
		&#13;
		if (inputObj.isdeficitpricing &amp;&amp; inputObj.isdeficitpricing === 'yes') {&#13;
			if (rateInputObj.rateBands&#13;
					&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
				for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
					if ((smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
							|| (smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; smcWeight &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
						if (rateInputObj.rateBands[i].upperbreak == 999999999) {&#13;
							smcRate = rateInputObj.rateBands[i].amount;&#13;
							smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
						} else {&#13;
							smcNextBandAmt = rateInputObj.rateBands[i + 1].amount;&#13;
							smcNextBandRate = smcNextBandAmt * dimObj.dims.wtInKG * 0.01;&#13;
							smcBandRate = rateInputObj.rateBands[i].amount * dimObj.dims.wtInKG * 0.01;&#13;
									&#13;
							if (smcNextBandRate &gt; smcBandRate) {&#13;
								smcRate = rateInputObj.rateBands[i+1].amount;&#13;
								smcDiscount = rateInputObj.rateBands[i+1].discountpercentage;&#13;
							} else {&#13;
								smcRate = rateInputObj.rateBands[i].amount;&#13;
								smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
							}&#13;
						}&#13;
						break;&#13;
					}&#13;
				}&#13;
			}&#13;
		} else {&#13;
			if (rateInputObj.rateBands &amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
				for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
					if ((smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
						|| (smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; smcWeight &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
							smcRate = rateInputObj.rateBands[i].amount;&#13;
							smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
							break;&#13;
					}&#13;
				}&#13;
			}		&#13;
		}		&#13;
		&#13;
		if (smcRate &gt; 0.0) {&#13;
			noOfCwts = dimObj.dims.wtInKG * 0.01;&#13;
			grossCharge = noOfCwts * smcRate;&#13;
			discountedCharge = 0.0;&#13;
			&#13;
			if (smcDiscount &gt; 0.0) {&#13;
				discountCharge = (grossCharge * smcDiscount) / 100;&#13;
				discountedCharge = grossCharge - discountCharge;				&#13;
			} else {&#13;
				discountedCharge = grossCharge;&#13;
			}&#13;
			&#13;
			minimumcharge = rateInputObj.baseRate.minimumcharge;&#13;
			minimumchargediscount = rateInputObj.baseRate.minimumchargediscount;&#13;
			discountedMinimumCharge = 0.0;&#13;
			&#13;
			if (minimumchargediscount &gt; 0.0) {&#13;
				minimumdiscountCharge = (minimumcharge * minimumchargediscount) / 100;&#13;
				discountedMinimumCharge = minimumcharge - minimumdiscountCharge;				&#13;
			} else {&#13;
				discountedMinimumCharge = minimumcharge;&#13;
			}&#13;
			&#13;
			smcTotalPrice = (discountedCharge &gt; discountedMinimumCharge) ? discountedCharge : discountedMinimumCharge;&#13;
			&#13;
			ltlsurchargepercentage = rateInputObj.baseRate.ltlsurchargepercentage;&#13;
			ltlsurchargeamount = (smcTotalPrice * ltlsurchargepercentage) / 100;&#13;
			&#13;
			smcCalculatedPrice = smcTotalPrice + ltlsurchargeamount;&#13;
			&#13;
			minimumfloorcharge = rateInputObj.baseRate.minimumfloorcharge;&#13;
			&#13;
			smcFinalPrice = (minimumfloorcharge &gt; smcCalculatedPrice) ? minimumfloorcharge : smcCalculatedPrice;			&#13;
		} &#13;
		&#13;
		rateInputObj.baseRate.supportedBasis = true;&#13;
		rateInputObj.baseRate.total = parseFloat(smcFinalPrice);&#13;
	};&#13;
&#13;
	this.evaluateBaseRate = function(dimObj) {&#13;
		inputObj = rateInputObj.baseRate;&#13;
		calculateCW = rateInputObj.calculateCW;&#13;
		supportedBasis = false;&#13;
		totalAmt = 0;&#13;
		quantity = 0;&#13;
		&#13;
		if (inputObj.isSMC) {&#13;
			this.evaluateSMCRate(dimObj);&#13;
			return;				&#13;
		}&#13;
		&#13;
		if (inputObj.basis === '/container') {&#13;
			supportedBasis = true;&#13;
			if (inputObj.equipmentType &amp;&amp; dimObj.dims[inputObj.equipmentType]) {&#13;
				totalAmt = inputObj.amount&#13;
						* dimObj.dims[inputObj.equipmentType];&#13;
				quantity = dimObj.dims[inputObj.equipmentType];&#13;
			} else {&#13;
				return;&#13;
			}&#13;
		}&#13;
&#13;
		if (inputObj.basis === '/package' || inputObj.basis === '/pallet'&#13;
				|| inputObj.basis === '/unit' || inputObj.basis === '/carton'&#13;
				|| inputObj.basis === '/LNM' || inputObj.basis === '/SQM'&#13;
				|| inputObj.basis === '/MBF' || inputObj.basis === '/MSF'&#13;
				|| inputObj.basis === '/LDM') {&#13;
			supportedBasis = true;&#13;
&#13;
			if (dimObj.dims.genericQty &amp;&amp; dimObj.dims.genericQtyUnit&#13;
					&amp;&amp; (dimObj.dims.genericQtyUnit === inputObj.basis)) {&#13;
				genericqty = dimObj.dims.genericQty;&#13;
				if (inputObj.minimumqty) {&#13;
					rateInputObj.baseRate.appliedMinQty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty : 0;&#13;
					genericqty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty&#13;
							: dimObj.dims.genericQty;							&#13;
				}&#13;
				totalAmt = inputObj.amount * genericqty;&#13;
				quantity = genericqty;&#13;
			} else if (dimObj.dims[inputObj.basis]) {&#13;
				genericqty = dimObj.dims[inputObj.basis];&#13;
				if (inputObj.minimumqty) {&#13;
					rateInputObj.baseRate.appliedMinQty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty : 0;&#13;
					genericqty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty&#13;
							: dimObj.dims.genericQty;&#13;
				}&#13;
				totalAmt = inputObj.amount * genericqty;&#13;
				quantity = genericqty;&#13;
			}&#13;
		}&#13;
&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == '/FLAT') {&#13;
			supportedBasis = true;&#13;
			totalAmt = inputObj.amount;&#13;
			quantity = 1;&#13;
		}&#13;
		&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == 'lps') {&#13;
			supportedBasis = true;&#13;
			totalAmt = inputObj.amount;&#13;
			quantity = 1;&#13;
	    }&#13;
	    &#13;
		if (dimObj.dims.wtInKG &amp;&amp; inputObj.wtConvRate) {&#13;
			supportedBasis = true;&#13;
			weight = dimObj.dims.wtInKG;&#13;
&#13;
			// GTN-25018 : Chargeable Weight scenario.&#13;
			volume = dimObj.dims.volInCBM;&#13;
			dimFactor = rateInputObj.dimFactor;&#13;
			dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
			volumetricWeight = 0.0;&#13;
			if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
				if (dimFactorConv === 'cm/kg') {&#13;
					volumetricWeight = (volume * 1000000) / dimFactor;&#13;
				} else if (dimFactorConv === 'in/lb') {&#13;
					volumetricWeight = (volume * 61024) / dimFactor;&#13;
					volumetricWeight = volumetricWeight * 0.45359237;&#13;
			    }&#13;
			}&#13;
			&#13;
			weight = (weight * inputObj.wtConvRate) &gt; (volumetricWeight  * inputObj.wtConvRate) ? weight&#13;
					: volumetricWeight;&#13;
&#13;
			if (inputObj.minWeight) {&#13;
				inputObj.appliedMinWeight = weight &lt; inputObj.minWeight ? inputObj.minWeight : 0;&#13;
				weight = weight &lt; inputObj.minWeight ? inputObj.minWeight&#13;
						: weight;&#13;
				inputObj.wtConvRate = 1;&#13;
			}&#13;
			quantity = weight * inputObj.wtConvRate;&#13;
			totalAmt = this.evaluateRateBands(weight, inputObj.amount,&#13;
					inputObj.wtConvRate);&#13;
		}&#13;
&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == '/WM') {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			volume = dimObj.dims.volInCBM;&#13;
			wmUnit = 0;&#13;
			supportedBasis = true;&#13;
			if (weight) {&#13;
				wmUnit = weight * inputObj.wtConvRate;&#13;
			}&#13;
			if (volume) {&#13;
				wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
			}&#13;
			if (inputObj.minWeight) {&#13;
				rateInputObj.baseRate.appliedMinWeight = wmUnit &lt; inputObj.minWeight ? inputObj.minWeight : 0;&#13;
				wmUnit = wmUnit &lt; inputObj.minWeight ? inputObj.minWeight&#13;
						: wmUnit;&#13;
				inputObj.wtConvRate = 1;&#13;
			}&#13;
			totalAmt = inputObj.amount * wmUnit;&#13;
			quantity = wmUnit;&#13;
		}&#13;
&#13;
		if (dimObj.dims.volInCBM &amp;&amp; inputObj.volConvRate) {&#13;
			supportedBasis = true;&#13;
			volume = dimObj.dims.volInCBM;&#13;
&#13;
			if (inputObj.minimumqty) {&#13;
				rateInputObj.baseRate.appliedMinQty = volume &lt; inputObj.minimumqty ? inputObj.minimumqty : 0;				&#13;
				volume = volume &lt; inputObj.minimumqty ? inputObj.minimumqty&#13;
						: volume;&#13;
				inputObj.volConvRate = 1;&#13;
			}&#13;
			tempAmt = this.evaluateRateBands(volume, inputObj.amount,&#13;
					inputObj.volConvRate);&#13;
			totalAmt = totalAmt &gt; tempAmt ? totalAmt : tempAmt;						&#13;
			quantity = volume * inputObj.volConvRate;&#13;
			&#13;
		} else if ((dimObj.dims.dstInMile&#13;
				|| (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) || rateInputObj.distance)&#13;
				&amp;&amp; inputObj.dstConvRate) {&#13;
			supportedBasis = true;&#13;
			distance = 0.0;&#13;
			if (dimObj.dims.dstInMile) {&#13;
				distance = dimObj.dims.dstInMile;&#13;
			} else if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {&#13;
				distance = this.getEffectiveDistance(dimObj);&#13;
			} else {&#13;
				distance = rateInputObj.distance;&#13;
			}&#13;
			quantity = distance * inputObj.dstConvRate;&#13;
			totalAmt = this.evaluateRateBands(distance, inputObj.amount,&#13;
					inputObj.dstConvRate);&#13;
		}&#13;
&#13;
		if (inputObj.basis === 'pricingbands') {&#13;
			supportedBasis = true;&#13;
			bandAmt = 0.0;&#13;
			mUnit = 0.0;&#13;
			convRate = 0.0;&#13;
			amount = 0.0;&#13;
			&#13;
			if (inputObj.isdeficitpricing) {&#13;
				if (inputObj.wtConvRate) {&#13;
					mUnit = dimObj.dims.wtInKG;&#13;
					convRate = inputObj.wtConvRate;&#13;
					&#13;
					// GTN-27410 : Chargeable Weight scenario for TL and LTL.&#13;
					volume = dimObj.dims.volInCBM;&#13;
					dimFactor = rateInputObj.dimFactor;&#13;
					dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
					volumetricWeight = 0.0;&#13;
					if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
						if (dimFactorConv === 'cm/kg') {&#13;
							volumetricWeight = (volume * 1000000) / dimFactor;&#13;
						} else if (dimFactorConv === 'in/lb') {&#13;
							volumetricWeight = (volume * 61024) / dimFactor;&#13;
							volumetricWeight = volumetricWeight * 0.45359237;&#13;
						}&#13;
					}&#13;
&#13;
					mUnit = (mUnit * inputObj.wtConvRate) &gt; (volumetricWeight * convRate) ? mUnit&#13;
							: volumetricWeight;&#13;
&#13;
					if (inputObj.minWeight) {&#13;
						mUnit = mUnit &lt; inputObj.minWeight ? inputObj.minWeight&#13;
								: mUnit;&#13;
						inputObj.wtConvRate = 1;&#13;
						convRate = 1;&#13;
					}&#13;
				} else if (inputObj.volConvRate) {&#13;
					mUnit = dimObj.dims.volInCBM;&#13;
					convRate = inputObj.volConvRate;&#13;
				} else if (inputObj.dstConvRate) {&#13;
					mUnit = dimObj.dims.dstInMile;&#13;
					convRate = inputObj.dstConvRate;&#13;
				} else {&#13;
					if (inputObj.weightbreakbasis&#13;
							&amp;&amp; (inputObj.weightbreakbasis === '/package'&#13;
									|| inputObj.weightbreakbasis === '/pallet'&#13;
									|| inputObj.weightbreakbasis === '/unit'&#13;
									|| inputObj.weightbreakbasis === '/carton'&#13;
									|| inputObj.weightbreakbasis === '/LNM'&#13;
									|| inputObj.weightbreakbasis === '/SQM'&#13;
									|| inputObj.weightbreakbasis === '/MBF'&#13;
									|| inputObj.weightbreakbasis === '/MSF' &#13;
									|| inputObj.weightbreakbasis === '/LDM')) {&#13;
						if (dimObj.dims.genericQty&#13;
								&amp;&amp; dimObj.dims.genericQtyUnit&#13;
								&amp;&amp; (dimObj.dims.genericQtyUnit === inputObj.weightbreakbasis)) {&#13;
							mUnit = dimObj.dims.genericQty;&#13;
							convRate = 1;&#13;
						} else if (dimObj.dims[inputObj.weightbreakbasis]) {&#13;
							mUnit = dimObj.dims[inputObj.weightbreakbasis];&#13;
							convRate = 1;&#13;
						}&#13;
					}&#13;
				}&#13;
&#13;
				if (inputObj.isdeficitpricing === 'yes') {&#13;
					if (rateInputObj.rateBands&#13;
							&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
						for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
							if (((mUnit * convRate) &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
									|| ((mUnit * convRate) &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; (mUnit * convRate) &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
								if (rateInputObj.rateBands[i].upperbreak == 999999999) {&#13;
								    if (inputObj.weightbreakbasis == 'lps') {&#13;
										bandAmt = rateInputObj.rateBands[i].amount;&#13;
									} else {&#13;
										bandAmt = rateInputObj.rateBands[i].amount&#13;
											* mUnit * convRate;																&#13;
									}&#13;
									quantity = mUnit * convRate;										&#13;
									amount = rateInputObj.rateBands[i].actualCost;&#13;
								} else {&#13;
									if (inputObj.weightbreakbasis == 'lps') {&#13;
										bandAmt = rateInputObj.rateBands[i + 1].amount;&#13;
									} else {&#13;
										bandAmt = rateInputObj.rateBands[i + 1].amount&#13;
												* rateInputObj.rateBands[i + 1].lowerbreak&#13;
												* convRate;							&#13;
									}&#13;
									actualPrice = 0.0;&#13;
									if (inputObj.weightbreakbasis == 'lps') {&#13;
										actualPrice = rateInputObj.rateBands[i].amount;&#13;
									} else {&#13;
										actualPrice = rateInputObj.rateBands[i].amount&#13;
												* mUnit * convRate;						&#13;
									}&#13;
									&#13;
									if (bandAmt &gt; actualPrice) {&#13;
										bandAmt = actualPrice;&#13;
										amount = rateInputObj.rateBands[i].actualCost;&#13;
									} else {&#13;
										amount = rateInputObj.rateBands[i + 1].actualCost;&#13;
									}&#13;
									quantity = mUnit * convRate;		&#13;
								}&#13;
								break;&#13;
							}&#13;
						}&#13;
					}&#13;
				} else {&#13;
					if (rateInputObj.rateBands&#13;
							&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
						for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
							if (((mUnit * convRate) &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
									|| ((mUnit * convRate) &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; (mUnit * convRate) &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
								if (inputObj.weightbreakbasis == 'lps') {&#13;
									bandAmt = rateInputObj.rateBands[i].amount;&#13;
								} else {&#13;
									bandAmt = rateInputObj.rateBands[i].amount&#13;
										* mUnit * convRate;								&#13;
								}&#13;
								quantity = mUnit * convRate;&#13;
								amount = rateInputObj.rateBands[i].actualCost;&#13;
								break;&#13;
							}&#13;
						}&#13;
					}&#13;
				}&#13;
			}		&#13;
			&#13;
			rateInputObj.baseRate.actualCost = parseFloat(amount);&#13;
			totalAmt = bandAmt;&#13;
		}&#13;
&#13;
		if (!supportedBasis) {&#13;
			switch (inputObj.basis) {&#13;
			case '/container':&#13;
			case '/CBM':&#13;
			case '/WM':&#13;
			case '/kg':&#13;
			case '/lb':&#13;
			case '/ton':&#13;
			case '/MI':&#13;
			case '/KM':&#13;
				rateInputObj.baseRate.supportedBasis = true;&#13;
				supportedBasis = true;&#13;
			}&#13;
		}&#13;
&#13;
		if (!supportedBasis) {&#13;
			totalAmt = inputObj.amount;&#13;
			rateInputObj.baseRate.quantity = 1;&#13;
		}&#13;
		&#13;
		if (quantity) {&#13;
			rateInputObj.baseRate.quantity = quantity;&#13;
		}		&#13;
&#13;
		if (inputObj.minAmount) {&#13;
			rateInputObj.baseRate.appliedMin = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount : 0;&#13;
			totalAmt = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount&#13;
					: totalAmt;&#13;
		}&#13;
		&#13;
		if (inputObj.maxAmount) {&#13;
			rateInputObj.baseRate.appliedMax = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount : 0;&#13;
			totalAmt = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount&#13;
					: totalAmt;&#13;
		}&#13;
	&#13;
		rateInputObj.baseRate.supportedBasis = supportedBasis;&#13;
		rateInputObj.baseRate.total = parseFloat(totalAmt);&#13;
	};&#13;
&#13;
	this.getEffectiveDistance = function(dimObj) {&#13;
		distance = 0.0;&#13;
		var jsonBaseRate = rateInputObj.baseRate;&#13;
		for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
			origStop = dimObj.stopOffs[i].stop;&#13;
			if (origStop.indexOf('__') &gt; 0) {&#13;
				origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
			}&#13;
			destStop = dimObj.stopOffs[i + 1].stop;&#13;
			if (destStop.indexOf('__') &gt; 0) {&#13;
				destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
			}&#13;
			if (origStop == destStop) {&#13;
				distance = distance + 0.01;&#13;
				continue;&#13;
			}&#13;
			if (!distanceMatrix[origStop]&#13;
					|| !distanceMatrix[origStop][destStop]) {&#13;
				if (rateInputObj.distance) {&#13;
					return rateInputObj.distance;&#13;
				} else {&#13;
					return 9999999;&#13;
				}&#13;
			}&#13;
			distval = distanceMatrix[origStop][destStop];&#13;
			distance = distance + distanceMatrix[origStop][destStop];&#13;
		}&#13;
		return distance;&#13;
	};&#13;
&#13;
	this.evaluateRateBands = function(totalDim, rateAmount, ConvRate) {&#13;
		totalBandAmt = 0.0;&#13;
		if (rateInputObj.rateBands &amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
			actualCost = 0.0;&#13;
			for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
				if ((totalDim &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
						|| (totalDim &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; totalDim &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
					totalBandAmt = (rateInputObj.baseRate.basis === '/FLAT') ? rateInputObj.rateBands[i].amount&#13;
							: (rateInputObj.rateBands[i].amount * totalDim * ConvRate);&#13;
					actualCost = rateInputObj.rateBands[i].actualCost;&#13;
					break;&#13;
				}&#13;
			}&#13;
			if (totalBandAmt == 0 &amp;&amp; rateInputObj.baseRate) {&#13;
				totalBandAmt = rateInputObj.baseRate.basis === '/kg' ? (rateInputObj.baseRate.amount&#13;
						* totalDim * ConvRate)&#13;
						: rateInputObj.baseRate.amount;&#13;
				actualCost = rateInputObj.baseRate.amount;&#13;
			}&#13;
			rateInputObj.baseRate.actualCost = actualCost;&#13;
		} else {&#13;
			totalBandAmt = (rateInputObj.baseRate.basis === '/FLAT') ? rateAmount&#13;
					: rateAmount * totalDim * ConvRate;&#13;
		}&#13;
		return parseFloat(totalBandAmt);&#13;
	};&#13;
&#13;
	this.evaluateAccessorials = function(dimObj) {&#13;
		if (rateInputObj.accessorials) {&#13;
			for (var i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				if (rateInputObj.accessorials[i]) {&#13;
					accObj = rateInputObj.accessorials[i];&#13;
					quantity = 0;&#13;
					totalAmt = 0;&#13;
					if (accObj.basis === '/container') {&#13;
						if (rateInputObj.baseRate.equipmentType&#13;
								&amp;&amp; dimObj.dims[rateInputObj.baseRate.equipmentType]) {&#13;
							totalAmt = accObj.amount&#13;
									* dimObj.dims[rateInputObj.baseRate.equipmentType];&#13;
							quantity =  dimObj.dims[rateInputObj.baseRate.equipmentType];&#13;
						} else {&#13;
							rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
							continue;&#13;
						}&#13;
					}&#13;
&#13;
					if (accObj.basis === '%') {&#13;
						netfreightcostelems = rateInputObj.netfreightcostelems;&#13;
						if (netfreightcostelems&#13;
								&amp;&amp; netfreightcostelems.length &gt; 0) {&#13;
							totalSurchargeAmount = 0;&#13;
							for (var j = 0; j &lt; netfreightcostelems.length; j++) {&#13;
								netFreightSurcharge = netfreightcostelems[j];&#13;
								surchargeAmount = this.getSurchargeAmount(&#13;
										dimObj, netFreightSurcharge);&#13;
								totalSurchargeAmount = totalSurchargeAmount&#13;
										+ surchargeAmount;&#13;
							}&#13;
&#13;
							baseRate = rateInputObj.baseRate.total;&#13;
							totalAmt = ((baseRate + totalSurchargeAmount) * accObj.amount) / 100;&#13;
						} else {&#13;
							baseRate = rateInputObj.baseRate.total;&#13;
							totalAmt = (baseRate * accObj.amount) / 100;&#13;
						}&#13;
					}&#13;
&#13;
					if (accObj.basis === '/delivery'&#13;
							|| accObj.basis === '/entry'&#13;
							|| accObj.basis === '/shipment') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
&#13;
					if (accObj.basis === '/package'&#13;
							|| accObj.basis === '/pallet'&#13;
							|| accObj.basis === '/unit'&#13;
							|| accObj.basis === '/carton'&#13;
							|| accObj.basis === '/LNM'&#13;
							|| accObj.basis === '/SQM'&#13;
							|| accObj.basis === '/MSF'&#13;
							|| accObj.basis === '/MBF'&#13;
							|| accObj.basis === '/LDM') {&#13;
						if (dimObj.dims.genericQty&#13;
								&amp;&amp; dimObj.dims.genericQtyUnit&#13;
								&amp;&amp; (dimObj.dims.genericQtyUnit === accObj.basis)) {&#13;
							totalAmt = accObj.amount * dimObj.dims.genericQty;&#13;
							quantity = dimObj.dims.genericQty;&#13;
						} else if (dimObj.dims[accObj.basis]) {&#13;
							totalAmt = accObj.amount&#13;
									* dimObj.dims[accObj.basis];&#13;
						}&#13;
					}&#13;
&#13;
					if (dimObj.dims.wtInKG &amp;&amp; accObj.wtConvRate) {&#13;
						weight = dimObj.dims.wtInKG;&#13;
&#13;
						// GTN-25018 : Chargeable Weight scenario.&#13;
						if (accObj.calculatedWeightBasis&#13;
								&amp;&amp; accObj.calculatedWeightBasis === 'Chargeable Weight') {&#13;
							dimFactor = rateInputObj.dimFactor;&#13;
							dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
							volumetricWeight = 0.0;&#13;
							if (dimFactor &gt; 0 &amp;&amp; dimFactorConv&#13;
									&amp;&amp; dimObj.dims.volInCBM) {&#13;
								if (dimFactorConv === 'cm/kg') {&#13;
									volumetricWeight = (dimObj.dims.volInCBM * 1000000)&#13;
											/ dimFactor;&#13;
								} else if (dimFactorConv === 'in/lb') {&#13;
									volumetricWeight = (dimObj.dims.volInCBM * 61024)&#13;
											/ dimFactor;&#13;
									volumetricWeight = volumetricWeight * 0.45359237;&#13;
								}&#13;
							}&#13;
							weight = (weight * accObj.wtConvRate) &gt; (volumetricWeight * accObj.wtConvRate) ? weight&#13;
									: volumetricWeight;&#13;
						}&#13;
&#13;
						if (accObj.minWeight) {&#13;
							weight = weight &lt; accObj.minWeight ? accObj.minWeight&#13;
									: weight;&#13;
						}&#13;
						totalAmt = accObj.amount * weight * accObj.wtConvRate;&#13;
						quantity = weight * accObj.wtConvRate;&#13;
					}&#13;
					if (dimObj.dims.volInCBM &amp;&amp; accObj.volConvRate) {&#13;
						volume = dimObj.dims.volInCBM;&#13;
						if (accObj.minVolume) {&#13;
							volume = volume &lt; accObj.minVolume ? accObj.minVolume&#13;
									: volume;&#13;
						}&#13;
						totalAmt = accObj.amount * volume * accObj.volConvRate;&#13;
						quantity = volume * accObj.volConvRate;&#13;
					}&#13;
&#13;
					if ((dimObj.dims.dstInMile || (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1))&#13;
							&amp;&amp; accObj.dstConvRate) {&#13;
						distance = 0.0;&#13;
						if (dimObj.dims.dstInMile) {&#13;
							distance = dimObj.dims.dstInMile;&#13;
						} else {&#13;
							distance = this.getEffectiveDistance(dimObj);&#13;
						}&#13;
						totalAmt = accObj.amount * distance&#13;
								* accObj.dstConvRate;&#13;
						quantity = distance * accObj.dstConvRate;&#13;
					}&#13;
&#13;
					if (accObj.basis == '/FLAT') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
					if (accObj.amount &amp;&amp; accObj.basis == '/WM') {&#13;
						weight = dimObj.dims.wtInKG;&#13;
						volume = dimObj.dims.volInCBM;&#13;
						wmUnit = 0;&#13;
						if (weight) {&#13;
							wmUnit = weight * accObj.wtConvRate;&#13;
						}&#13;
						if (volume) {&#13;
							wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
						}&#13;
						totalAmt = accObj.amount * wmUnit;&#13;
						quantity = wmUnit;&#13;
					}&#13;
&#13;
					if (rateInputObj.baseRate.basis == accObj.basis&#13;
							&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
						totalAmt = accObj.amount;&#13;
						accObj.supportedBasis = true;&#13;
					} else if (rateInputObj.baseRate.basis != accObj.basis&#13;
							&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
						totalAmt = 0;&#13;
					}&#13;
&#13;
					if (accObj.minAmount) {&#13;
						rateInputObj.accessorials[i].appliedMin = totalAmt &lt; accObj.minAmount ? accObj.minAmount : 0;&#13;
						totalAmt = totalAmt &lt; accObj.minAmount ? accObj.minAmount&#13;
								: totalAmt;&#13;
					}&#13;
					if (accObj.maxAmount) {&#13;
						rateInputObj.accessorials[i].appliedMax = totalAmt &gt; accObj.maxAmount ? accObj.maxAmount : 0;&#13;
						totalAmt = totalAmt &gt; accObj.maxAmount ? accObj.maxAmount&#13;
								: totalAmt;&#13;
					}&#13;
&#13;
					if (!dimObj.dims.isHazMat &amp;&amp; accObj.isHazMat) {&#13;
						totalAmt = 0;&#13;
					}&#13;
&#13;
					rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
					if (accObj.basis == '/stop') {&#13;
						rateInputObj.stopOffTotal = parseFloat(totalAmt);&#13;
						if(totalAmt &amp;&amp; totalAmt &gt;0) {&#13;
							rateInputObj.accessorials[i].quantity = 1;&#13;
						}&#13;
					} else{&#13;
						rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
						if(totalAmt &amp;&amp; totalAmt &gt;0) {&#13;
							rateInputObj.accessorials[i].quantity = quantity;&#13;
						}&#13;
					}&#13;
				}&#13;
			}&#13;
		}&#13;
	};&#13;
&#13;
	this.getSurchargeAmount = function(dimObj, surcharge) {&#13;
		surchargeAmount = 0;&#13;
		inputObj = rateInputObj.baseRate;&#13;
		quantity = 0;&#13;
		if (surcharge.basis === '/container') {&#13;
			if (inputObj.equipmentType &amp;&amp; dimObj.dims[inputObj.equipmentType]) {&#13;
				surchargeAmount = surcharge.amount&#13;
						* dimObj.dims[inputObj.equipmentType];&#13;
				quantity = dimObj.dims[inputObj.equipmentType];&#13;
			} else {&#13;
				quantity = 1;&#13;
				return surchargeAmount;&#13;
			}&#13;
		}&#13;
&#13;
		if (surcharge.basis === '/delivery' || surcharge.basis === '/entry'&#13;
				|| surcharge.basis === '/shipment') {&#13;
			surchargeAmount = surcharge.amount;&#13;
			quantity = 1;&#13;
		}&#13;
&#13;
		if (surcharge.basis === '/package' || surcharge.basis === '/pallet'&#13;
				|| surcharge.basis === '/unit' || surcharge.basis === '/carton'&#13;
				|| surcharge.basis === '/LNM' || surcharge.basis === '/SQM'&#13;
				|| surcharge.basis === '/MSF' || surcharge.basis === '/MBF'&#13;
				|| accObj.basis === '/LDM') {&#13;
			if (dimObj.dims.genericQty &amp;&amp; dimObj.dims.genericQtyUnit&#13;
					&amp;&amp; (dimObj.dims.genericQtyUnit === surcharge.basis)) {&#13;
				surchargeAmount = surcharge.amount * dimObj.dims.genericQty;&#13;
				quantity = dimObj.dims.genericQty;&#13;
			} else if (dimObj.dims[surcharge.basis]) {&#13;
				surchargeAmount = surcharge.amount&#13;
						* dimObj.dims[surcharge.basis];&#13;
				quantity = dimObj.dims[surcharge.basis];&#13;
			}&#13;
		}&#13;
&#13;
		if (surcharge.amount &amp;&amp; surcharge.basis == '/FLAT') {&#13;
			surchargeAmount = surcharge.amount;&#13;
			quantity = 1;&#13;
		}&#13;
&#13;
		if (dimObj.dims.wtInKG &amp;&amp; surcharge.wtConvRate) {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			// GTN-25018 : Chargeable Weight scenario.&#13;
			if (surcharge.calculatedWeightBasis&#13;
					&amp;&amp; surcharge.calculatedWeightBasis === 'Chargeable Weight') {&#13;
				dimFactor = rateInputObj.dimFactor;&#13;
				dimFactorConv = rateInputObj.dimFactorConv;&#13;
				volumetricWeight = 0.0;&#13;
				if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
					if (dimFactorConv === 'cm/kg') {&#13;
						volumetricWeight = (dimObj.dims.volInCBM * 1000000)&#13;
								/ dimFactor;&#13;
					} else if (dimFactorConv === 'in/lb') {&#13;
						volumetricWeight = (dimObj.dims.volInCBM * 61024)&#13;
								/ dimFactor;&#13;
						volumetricWeight = volumetricWeight * 0.45359237;&#13;
					}&#13;
				}&#13;
				weight = (weight * surcharge.wtConvRate) &gt; (volumetricWeight * surcharge.wtConvRate) ? weight&#13;
						: volumetricWeight;&#13;
			}&#13;
			if (surcharge.minWeight) {&#13;
				surcharge.appliedWeight = weight &lt; surcharge.minWeight ? surcharge.minWeight : weight;&#13;
				weight = weight &lt; surcharge.minWeight ? surcharge.minWeight&#13;
						: weight;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * weight * surcharge.wtConvRate;&#13;
			quantity = weight * surcharge.wtConvRate;&#13;
		}&#13;
&#13;
		if (dimObj.dims.volInCBM &amp;&amp; surcharge.volConvRate) {&#13;
			volume = dimObj.dims.volInCBM;&#13;
			if (surcharge.minVolume) {&#13;
				surcharge.appliedVolume = volume &lt; surcharge.minVolume ? surcharge.minVolume : volume;&#13;
				volume = volume &lt; surcharge.minVolume ? surcharge.minVolume&#13;
						: volume;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * volume * surcharge.volConvRate;&#13;
			quantity = volume * surcharge.volConvRate;&#13;
		}&#13;
&#13;
		if (surcharge.amount &amp;&amp; surcharge.basis == '/WM') {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			volume = dimObj.dims.volInCBM;&#13;
			wmUnit = 0;&#13;
			if (weight) {&#13;
				wmUnit = weight * surcharge.wtConvRate;&#13;
			}&#13;
			if (volume) {&#13;
				wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
			}&#13;
			if (surcharge.minWeight) {&#13;
				surcharge.appliedWeight = wmUnit &lt; surcharge.minWeight ? surcharge.minWeight : wmUnit;&#13;
				wmUnit = wmUnit &lt; surcharge.minWeight ? surcharge.minWeight&#13;
						: wmUnit;&#13;
				surcharge.wtConvRate = 1;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * wmUnit;&#13;
			quantity = wmUnit;&#13;
		}&#13;
&#13;
		if ((dimObj.dims.dstInMile || (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1))&#13;
				&amp;&amp; surcharge.dstConvRate) {&#13;
			if (surcharge.basis == '/stop') {&#13;
				surchargeAmount = surcharge.amount * dimObj.stopOffs.length&#13;
					* surcharge.dstConvRate;&#13;
				quantity = dimObj.stopOffs.length * surcharge.dstConvRate;&#13;
			} else {&#13;
				distance = 0.0;&#13;
				if (dimObj.dims.dstInMile) {&#13;
					distance = dimObj.dims.dstInMile;&#13;
				} else {&#13;
					distance = this.getEffectiveDistance(dimObj);&#13;
				}&#13;
				surchargeAmount = surcharge.amount * distance&#13;
						* surcharge.dstConvRate;&#13;
				quantity = distance * surcharge.dstConvRate;&#13;
			}&#13;
		}&#13;
&#13;
		if (rateInputObj.baseRate.basis == inputObj.basis&#13;
				&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
			surchargeAmount = surcharge.amount;&#13;
			surcharge.supportedBasis = true;&#13;
			rateInputObj.accessorials[i].quantity = quantity;&#13;
		} else if (rateInputObj.baseRate.basis != surcharge.basis&#13;
				&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
			surchargeAmount = 0;&#13;
		}&#13;
&#13;
		if (surcharge.minAmount) {&#13;
			surcharge.appliedMin = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount : 0;			&#13;
			surchargeAmount = surchargeAmount &lt; surcharge.minAmount ? surcharge.minAmount&#13;
					: surchargeAmount;&#13;
		}&#13;
		if (surcharge.maxAmount) {&#13;
			surcharge.appliedMax = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount : 0;&#13;
			surchargeAmount = surchargeAmount &gt; surcharge.maxAmount ? surcharge.maxAmount&#13;
					: surchargeAmount;&#13;
		}&#13;
		return surchargeAmount;&#13;
	}&#13;
&#13;
	this.evaluateStopOff = function(stopOffs) {&#13;
		stopOffAmt = 0.0;&#13;
		if (rateInputObj.stopBands &amp;&amp; stopOffs &amp;&amp; stopOffs.length &gt; 2) {&#13;
			numOfStopOffs = stopOffs.length - 2;&#13;
			remainingStopOffs = numOfStopOffs;&#13;
			previousEnd = 0;&#13;
&#13;
			for (i = 0; i &lt; rateInputObj.stopBands.length; i++) {&#13;
				start = rateInputObj.stopBands[i].start;&#13;
				end = rateInputObj.stopBands[i].stop;&#13;
				if (numOfStopOffs &gt; end) {&#13;
					stopOffAmt = stopOffAmt&#13;
							+ (rateInputObj.stopBands[i].costPerStop * (end - previousEnd));&#13;
					remainingStopOffs -= (end - previousEnd);&#13;
					previousEnd = end;&#13;
&#13;
				} else if (numOfStopOffs &gt;= start &amp;&amp; numOfStopOffs &lt;= end) {&#13;
					stopOffAmt = stopOffAmt&#13;
							+ (rateInputObj.stopBands[i].costPerStop * remainingStopOffs);&#13;
					break;&#13;
				}&#13;
			}&#13;
			rateInputObj.stopOffTotal = parseFloat(stopOffAmt);&#13;
		}&#13;
&#13;
	};&#13;
	&#13;
	this.getDistanceSplit = function(dimObj) {&#13;
		distance = 0.0;&#13;
		var distObj = [];&#13;
		var distArr = [];&#13;
		var jsonBaseRate = rateInputObj.baseRate;&#13;
		if(dimObj.stopOffs) {&#13;
			for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
				origStop = dimObj.stopOffs[i].stop;&#13;
				if (origStop.indexOf('__') &gt; 0) {&#13;
					origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
				}&#13;
				destStop = dimObj.stopOffs[i + 1].stop;&#13;
				if (destStop.indexOf('__') &gt; 0) {&#13;
					destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
				}&#13;
				if (origStop == destStop) {&#13;
					distance = distance + 0.01;&#13;
					distObj = {Distance:distance, OrigStop:origStop, DestStop:destStop};&#13;
					distArr.push(distObj);&#13;
					continue;&#13;
				}&#13;
				if (!distanceMatrix[origStop]&#13;
						|| !distanceMatrix[origStop][destStop]) {&#13;
					if (rateInputObj.distance) {&#13;
						return rateInputObj.distance;&#13;
					} else {&#13;
						return 9999999;&#13;
					}&#13;
				}&#13;
				distval = distanceMatrix[origStop][destStop];&#13;
				distObj = {Distance:distval, OrigStop:origStop, DestStop:destStop};&#13;
				distArr.push(distObj);&#13;
				distance = distance + distanceMatrix[origStop][destStop];&#13;
			}&#13;
		}&#13;
			jsonBaseRate["distArr"] = distArr;&#13;
		return jsonBaseRate;&#13;
	};&#13;
	&#13;
	this.evaluateTransitTime = function(dimObj) {&#13;
		transittime = 0.0;&#13;
		if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {		&#13;
			if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {&#13;
				for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
					origStop = dimObj.stopOffs[i].stop;&#13;
					if (origStop.indexOf('__') &gt; 0) {&#13;
						origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
					}&#13;
					destStop = dimObj.stopOffs[i + 1].stop;&#13;
					if (destStop.indexOf('__') &gt; 0) {&#13;
						destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
					}&#13;
					if (origStop == destStop) {&#13;
						transittime = transittime + 0.01;&#13;
						continue;&#13;
					}&#13;
					if (!transitTimeMatrix[origStop]&#13;
							|| !transitTimeMatrix[origStop][destStop]) {&#13;
							transittime = parseFloat(9999999);&#13;
							break;&#13;
					}&#13;
					transittime = transittime + transitTimeMatrix[origStop][destStop];&#13;
				}&#13;
			} &#13;
		}	&#13;
		rateInputObj.baseRate.transittime = parseFloat(transittime);		&#13;
	};&#13;
};var constraints = {/*##*/resources:{"9":{"max_qty":1.0,"max_weight":28250.0,"max_cube":28.0},"10":{"max_weight":28800.0,"max_cube":56.0,"max_qty":2.0},"11":{"max_weight":27700.0,"max_cube":75.0,"max_qty":2.532},"33":{"max_qty":1.0},"73":{"max_qty":1.0},"74":{"max_cube":63.0,"max_qty":2.25,"max_weight":29700.0}},/*##*/locations:{6236:{},1073750323:{},6237:{},6240:{},6242:{},1073750324:{},6244:{},6243:{},6247:{},6241:{},16659:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},16661:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},6245:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073746926:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073744925:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073746924:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},16660:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},16662:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},16665:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073746925:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}}}}; evaluateConstraints = function evaluateConstraints(dimObj) {
	var resourceData = this.id.split("_");
	var resource = resourceData[1];
	if ((resource in constraints.resources)) {
		if ("max_weight" in constraints.resources[resource]
				&amp;&amp; dimObj.dims.wtInKG &gt; constraints.resources[resource].max_weight)
			return false;
		if ("max_cube" in constraints.resources[resource]
				&amp;&amp; dimObj.dims.volInCBM &gt; constraints.resources[resource].max_cube)
			return false;
	}
	return true;
};


var carrier = function(resourceInputObj){
	this.evaluateCarrierConstraint = function (dimObj){
	resource = resourceInputObj.id;
    if (!(resource in constraints.resources))
		return true;
	
	if ("maxstops" in constraints.resources[resource]
			&amp;&amp; dimObj.stopOffs.length  &gt; constraints.resources[resource].maxstops ){
		return false;
		}
	if ("max_distance" in constraints.resources[resource]
			&amp;&amp; isMaxDistanceCrossed(dimObj, resource)) {
		return false;
	}
	if ("maximum_single_hours" in constraints.resources[resource]
			&amp;&amp; isMaxDriveTimeCrossed(dimObj, resource)) {
		return false;
	}
	if ("maximum_out_of_route_miles" in constraints.resources[resource]
			&amp;&amp; isMaxOutOfRouteMile(dimObj, resource)) {
		return false;
	}
		return true;
	}
};



isMaxOutOfRouteMile = function isMaxOutOfRouteMile(dimObj, resourceid) {
	var totalDistance = 0;
	var maxOutOfRouteMile = 0;
	try {
		totalDistance = distanceMatrix[sliceStopOffData(dimObj.stopOffs[0].stop)][sliceStopOffData(dimObj.stopOffs[dimObj.stopOffs.length - 1].stop)];
	} catch (err) {
		warn('error distanceMatrix  does not exist in  isMaxOutOfRouteMile');
	}
	;

	try {
		maxOutOfRouteMile = constraints.resources[resourceid].maximum_out_of_route_miles;

	} catch (err) {
		warn('maxOutOfRouteMile  does not exist in  for resource' + resourceid);
		maxOutOfRouteMile = 0;
	}
	;

	var totalDriveDistance = getTotalDriveDistance(dimObj);
	
	if (constraints.resources[resourceid].maxoutofroutemilesunit == "%") {
		maxOutOfRouteMile = ((maxOutOfRouteMile / 100) * totalDistance)
				+ totalDistance;
	} else {
		maxOutOfRouteMile = maxOutOfRouteMile + totalDistance;
		
		if (!isNaN(maxOutOfRouteMile)) {
			// warn('maxOutOfRouteMile==' + maxOutOfRouteMile);
			// warn('totalDriveDistance=' + totalDriveDistance+' for
			// resourceid'+ resourceid);

		}
	}
	if (totalDriveDistance &gt; maxOutOfRouteMile) {
		// warn('totalDriveDistance =='+totalDriveDistance
		// +'-'+maxOutOfRouteMile);
		return true;
	}
	// warn('in else totalDriveDistance =='+totalDriveDistance
	// +'-'+maxOutOfRouteMile);
	return false;
};

isMaxDistanceCrossed = function isMaxDistanceCrossed(dimObj, resourceid) {
	var totalDriveDistance = getTotalDriveDistance(dimObj);
	if (totalDriveDistance &gt; constraints.resources[resourceid].max_distance) {
		return true;
	}
	return false;
};

isMaxDriveTimeCrossed = function isMaxDriveTimeCrossed(dimObj, resourceid) {
	var totalDriveTime = getTotalDriveTime(dimObj);
	if (totalDriveTime &gt; constraints.resources[resourceid].maximum_single_hours) {
		return true;
	}
	return false;
};

getTotalDriveDistance = function getTotalDriveDistance(dimObj) {
	var totalDriveDistance = 0;
	try {
		for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);
			var distance = distanceMatrix[stop1][stop2]
			if (!isNaN(distance)) {
				totalDriveDistance = totalDriveDistance + (distance);
			} else {
				warn('can give wrong data,since');
				warn(' no dtm between ' + stop1 + '-' + stop2);
			}
		}
	} catch (err) {
		warn('distanceMatrix  does not exist for ' + stop1 + '-' + stop2);
	}
	;
	return totalDriveDistance;
};

getTotalDriveTime = function getTotalDriveTime(dimObj) {
	var totalDriveTime = 0;
	try {
		for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);
			totalDriveTime = totalDriveTime + (transitTimeMatrix[stop1][stop2]);
		}
	} catch (err) {
		warn('transitTimeMatrix  does not exist for ' + stop1 + '-' + stop2);
	}
	;
	return totalDriveTime;
};

sliceStopOffData = function sliceStopOffData(stopOffData) {
	var stop = stopOffData;
	try {

		if (stopOffData.indexOf('__') &gt; 0) {
			stop = stopOffData.slice(0, stopOffData.indexOf('__'));
		}
	} catch (err) {
		warn('stopOffData incorrect for ' + stopOffData);
	}
	return JSON.parse(stop);
};

getProcessingTime = function getProcessingTime(dimObj) {

	if (typeof dimObj.stopOffs[1] == 'undefined') {
		return 1000000;
	}
	trasitTime = 0;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop
					.indexOf('TRANSPORT') &gt; -1))) {
		return 99999;
	}
	var finalloadthroughput = 0;
	finalloadthroughput = getFinalLoadThroughput(dimObj);
	if (isNaN(finalloadthroughput)) {
		finalloadthroughput = 0;
	}

	var finalunloadthroughput = 0;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);
	if (isNaN(finalunloadthroughput)) {
		finalunloadthroughput = 0;
	}

	try {
		trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]
				+ finalunloadthroughput;
		if (isNaN(trasitTime)) {
			warn('errcause no transittime for ' + stop1 + '-- ' + stop2);
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getOceanAirProcessingTime = function getOceanAirProcessingTime(dimObj) {
	return this.transitTime;
	};

getFinalThroughput = function getFinalThroughput(dimObj) {
	var finalTroughputResult = '';

	for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length); stopIndex++) {
		var stop = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
		if (dimObj.dims.wtInKG != 0) {
			if ((stop in constraints.locations)
					&amp;&amp; ("Throughput" in constraints.locations[stop])) {
				finalTroughputResult = finalTroughputResult + stop + '--'
						+ ((constraints.locations[stop].Throughput)) + '--';
			}
		}
	}
	return finalTroughputResult;
};

getDistanceBetweenStops = function getDistanceBetweenStops(dimObj) {
	var distancebetweenstops = "";
	for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
		try {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);

			distancebetweenstops = distancebetweenstops + "#" + stop1 + "_"
					+ stop2;
			distancebetweenstops = distancebetweenstops + "#"
					+ distanceMatrix[stop1][stop2];
		} catch (err) {
			warn('err cause no distancebetweenstops ' + stop1 + ' -- ' + stop2);
		}
	}
	return distancebetweenstops;
};

getFinalLoadThroughput = function getFinalLoadThroughput(dimObj) {
	var varloadthroughput = 0;
	stop1 = sliceStopOffData(dimObj.stopOffs[0].stop);
	try {
		if (stop1 in constraints.locations
				&amp;&amp; ("LOADING" in constraints.locations[stop1])) {

			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop1].LOADING["weight_time"].division_factor)
						* constraints.locations[stop1].LOADING["weight_time"].time_factor;
				varloadthroughput = varweightthrouput;
			}

			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop1].LOADING["volume_time"].division_factor)
						* constraints.locations[stop1].LOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varloadthroughput) {
					varloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop1].max_variable_time != 0) {
			if (constraints.locations[stop1].max_variable_time &lt; varloadthroughput) {
				varloadthroughput = constraints.locations[stop1].max_variable_time;
			}
		}
		return constraints.locations[stop1].fixed_time + varloadthroughput;
	} catch (err) {
		warn('err calculating load throughput for stop ' + stop1 + '-- '
				+ err.message);
		return 0;
	}
};

getFinalUnLoadThroughput = function getFinalUnLoadThroughput(dimObj) {
	var varunloadthroughput = 0;
	stop2 = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
	try {
		if (stop2 in constraints.locations
				&amp;&amp; "UNLOADING" in constraints.locations[stop2]) {
			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop2].UNLOADING["weight_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["weight_time"].time_factor;

				varunloadthroughput = varweightthrouput;
			}
			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop2].UNLOADING["volume_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varunloadthroughput) {
					varunloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop2].max_variable_time != 0) {
			if (constraints.locations[stop2].max_variable_time &lt; varunloadthroughput) {
				varunloadthroughput = constraints.locations[stop2].max_variable_time;
			}
		}
		// warn('Unloading varunloadthroughput ' + varunloadthroughput + ' stop2
		// ' + stop2+' fixed_time ' + constraints.locations[stop2].fixed_time);
		return constraints.locations[stop2].fixed_time + varunloadthroughput;
	} catch (err) {
		warn('err calculating Unload throughput for stop ' + stop2 + '-- '
				+ err.message);
		return 0;
	}
};

getOceanAirLoadingProcessingTime = function getOceanAirLoadingProcessingTime(dimObj) {

	trasitTime = 0;
	var finalloadthroughput = 0;
	finalloadthroughput = getFinalLoadThroughput(dimObj);
	if (isNaN(finalloadthroughput)) {
		finalloadthroughput = 0;
	}

	try {
		trasitTime = finalloadthroughput;
		if (isNaN(trasitTime)) {
			warn('failed');
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getOceanAirProcessingTime = function getOceanAirProcessingTime(dimObj) {
return this.transitTime;
};

getOceanAirUnloadingProcessingTime = function getOceanAirUnloadingProcessingTime(dimObj) {

trasitTime = 0;
	var finalunloadthroughput = 0;
	finalunloadthroughput = getFinalUnLoadThroughput1(dimObj);
	if (isNaN(finalunloadthroughput)) {
		finalunloadthroughput = 0;
	}

	/*
	 * warn('finalloadthroughput ' + finalloadthroughput + '
	 * finalunloadthroughput ' + finalunloadthroughput + ' matrix ' +
	 * transitTimeMatrix[stop1][stop2]);
	 */
	try {
		trasitTime = finalunloadthroughput;
		if (isNaN(trasitTime)) {
			warn('unloading failed');
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getFinalUnLoadThroughput1 = function getFinalUnLoadThroughput1(dimObj) {
	var varunloadthroughput = 0;
	var stop2;
	//warn(" calculating Unload throughput for stop ' + s");
	try {
	//warn(dimObj.stopOffs);
	stop2 = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
	if(typeof stop2 == 'undefined')
	  return 0;
	  
		if (stop2 in constraints.locations
				&amp;&amp; "UNLOADING" in constraints.locations[stop2]) {
			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop2].UNLOADING["weight_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["weight_time"].time_factor;

				varunloadthroughput = varweightthrouput;
			}
			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop2].UNLOADING["volume_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varunloadthroughput) {
					varunloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop2].max_variable_time != 0) {
			if (constraints.locations[stop2].max_variable_time &lt; varunloadthroughput) {
				varunloadthroughput = constraints.locations[stop2].max_variable_time;
			}
		}
		// warn('Unloading varunloadthroughput ' + varunloadthroughput + ' stop2
		// ' + stop2+' fixed_time ' + constraints.locations[stop2].fixed_time);
		return constraints.locations[stop2].fixed_time + varunloadthroughput;
	} catch (err) {
		//warn('err calculating Unload throughput for stop ' + stop2 + '-- '
				//+ err.message);
			//	warn("catch");
		return 0;
	}
};</globalScript><applyConsolidationRules ttype="STRING">Yes</applyConsolidationRules><requirementConsolidationLevel ttype="I32">0</requirementConsolidationLevel></supplyChain><requirements ttype="MAP"><item><key ttype="STRING">121045439</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045439</id><name ttype="STRING">121045439</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">16659__START_REQUIREMENT</source><destination ttype="STRING">1073750324__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">121045403</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045403</id><name ttype="STRING">121045403</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">6242__START_REQUIREMENT</source><destination ttype="STRING">1073750324__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><compatibilityClass ttype="STRING">EEE</compatibilityClass><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">121045419</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045419</id><name ttype="STRING">121045419</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">6243__START_REQUIREMENT</source><destination ttype="STRING">1073750324__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">121045414</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045414</id><name ttype="STRING">121045414</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">6244__START_REQUIREMENT</source><destination ttype="STRING">1073750324__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">121045434</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045434</id><name ttype="STRING">121045434</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">16659__START_REQUIREMENT</source><destination ttype="STRING">1073750323__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">121045424</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045424</id><name ttype="STRING">121045424</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">6247__START_REQUIREMENT</source><destination ttype="STRING">1073750324__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">121045388</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045388</id><name ttype="STRING">121045388</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">6236__START_REQUIREMENT</source><destination ttype="STRING">1073750323__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><compatibilityClass ttype="STRING">AAA</compatibilityClass><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">121045398</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045398</id><name ttype="STRING">121045398</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">6240__START_REQUIREMENT</source><destination ttype="STRING">1073750323__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><compatibilityClass ttype="STRING">CCC</compatibilityClass><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">121045429</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045429</id><name ttype="STRING">121045429</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">6241__START_REQUIREMENT</source><destination ttype="STRING">1073750324__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><compatibilityClass ttype="STRING">DDD</compatibilityClass><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">121045445</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045445</id><name ttype="STRING">121045445</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">16659__START_REQUIREMENT</source><destination ttype="STRING">16661__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">121045393</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">121045393</id><name ttype="STRING">121045393</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">11.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">0.1</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">6237__START_REQUIREMENT</source><destination ttype="STRING">1073750323__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1783450800</earliestDepartTime><earliestDeliveryTime ttype="I64">1783450860</earliestDeliveryTime><latestDepartTime ttype="I64">1784314800</latestDepartTime><latestDeliveryTime ttype="I64">1820473200</latestDeliveryTime><compatibilityClass ttype="STRING">BBBB</compatibilityClass><freightClass ttype="STRING">Class 50</freightClass></value></item></requirements><modelingLanguageVersion ttype="STRING">3.2</modelingLanguageVersion></OptimizationInstance>