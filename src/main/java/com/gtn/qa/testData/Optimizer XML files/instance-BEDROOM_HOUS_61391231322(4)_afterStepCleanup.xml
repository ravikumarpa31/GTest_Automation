<OptimizationInstance struct="OptimizationInstance" ttype="STRUCT"><id ttype="STRING">BEDROOM_HOUS_61391231322</id><supplyChain struct="SupplyChain" ttype="STRUCT"><id ttype="STRING">Network</id><name ttype="STRING">supplyChainName12345</name><steps ttype="MAP"><item><key ttype="STRING">4090643__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090643__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4090643 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4090643_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4084102__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4084102__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4084102 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">4084102__END_REQUIREMENT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__299162__61348648138__S__CY__D__TRANSPORT_REQUIREMENT__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299162__61348648138__S__CY__D__TRANSPORT_REQUIREMENT__1012</id><narrativeDescription ttype="STRING">Transport from 10011466__299162__61348648138__S__CY__D__TRANSPORT_REQUIREMENT__1012__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090644__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4085004__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1012_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3036.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":820.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648138"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2167200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__197135__61348648008__S__CY__D__TRANSPORT_REQUIREMENT__72149</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__197135__61348648008__S__CY__D__TRANSPORT_REQUIREMENT__72149</id><narrativeDescription ttype="STRING">Transport from 10011466__197135__61348648008__S__CY__D__TRANSPORT_REQUIREMENT__72149__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1074042680__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3511.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":229.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648008"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3549600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__264261__61348647814__S__CY__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__264261__61348647814__S__CY__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 10011466__264261__61348647814__S__CY__D__TRANSPORT_REQUIREMENT__1003__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2517.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647814"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3895200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__195907__61348647856__S__CY__D__TRANSPORT_REQUIREMENT__1057</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__195907__61348647856__S__CY__D__TRANSPORT_REQUIREMENT__1057</id><narrativeDescription ttype="STRING">Transport from 10011466__195907__61348647856__S__CY__D__TRANSPORT_REQUIREMENT__1057__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4084102__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090637__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4088784__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2157.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647856"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3981600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__299612__61348647935__S__CY__D__TRANSPORT_REQUIREMENT__1009</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299612__61348647935__S__CY__D__TRANSPORT_REQUIREMENT__1009</id><narrativeDescription ttype="STRING">Transport from 10011466__299612__61348647935__S__CY__D__TRANSPORT_REQUIREMENT__1009__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090643__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2704.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":436.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647935"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2685600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__195907__61348648007__S__CY__D__TRANSPORT_REQUIREMENT__72149</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__195907__61348648007__S__CY__D__TRANSPORT_REQUIREMENT__72149</id><narrativeDescription ttype="STRING">Transport from 10011466__195907__61348648007__S__CY__D__TRANSPORT_REQUIREMENT__72149__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4084102__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090637__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4088784__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3511.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":229.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648007"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3549600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__264261__61348648006__S__CY__D__TRANSPORT_REQUIREMENT__72149</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__264261__61348648006__S__CY__D__TRANSPORT_REQUIREMENT__72149</id><narrativeDescription ttype="STRING">Transport from 10011466__264261__61348648006__S__CY__D__TRANSPORT_REQUIREMENT__72149__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3921.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":229.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648006"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3117600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__299612__61348647934__S__CY__D__TRANSPORT_REQUIREMENT__1009</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299612__61348647934__S__CY__D__TRANSPORT_REQUIREMENT__1009</id><narrativeDescription ttype="STRING">Transport from 10011466__299612__61348647934__S__CY__D__TRANSPORT_REQUIREMENT__1009__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090643__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2704.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":436.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647934"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2599200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__299162__61348648126__S__CY__D__TRANSPORT_REQUIREMENT__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299162__61348648126__S__CY__D__TRANSPORT_REQUIREMENT__1012</id><narrativeDescription ttype="STRING">Transport from 10011466__299162__61348648126__S__CY__D__TRANSPORT_REQUIREMENT__1012__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090644__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4085004__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1012_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3086.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":820.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648126"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2599200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090644__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090644__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4090644 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4090644_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4085004__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4085004__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4085004__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4085004__END_REQUIREMENT</item><item ttype="STRING">4085004__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4085004_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item><item ttype="STRING">1057_18_S</item><item ttype="STRING">1012_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">4085004__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4085004__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4085004 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">4085004__END_REQUIREMENT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">1074042680__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1074042680__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1074042680__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1074042680__HOLD_REQUIREMENT</item><item ttype="STRING">1074042680__END_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1074042680_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4088785__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4088785__HOLD_REQUIREMENT</item><item ttype="STRING">4088785__END_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4088785_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1015_18_S</item><item ttype="STRING">1003_18_S</item><item ttype="STRING">1009_18_S</item><item ttype="STRING">1057_18_S</item><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">4090637__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090637__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4090637__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4090637__END_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4090637_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">1074042680__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1074042680__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 1074042680 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1074042680_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__299162__61348647991__S__CY__D__TRANSPORT_REQUIREMENT__1009</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299162__61348647991__S__CY__D__TRANSPORT_REQUIREMENT__1009</id><narrativeDescription ttype="STRING">Transport from 10011466__299162__61348647991__S__CY__D__TRANSPORT_REQUIREMENT__1009__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090644__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4085004__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3069.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":702.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647991"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3204000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__201063__61348647905__S__CY__D__TRANSPORT_REQUIREMENT__1057</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__201063__61348647905__S__CY__D__TRANSPORT_REQUIREMENT__1057</id><narrativeDescription ttype="STRING">Transport from 10011466__201063__61348647905__S__CY__D__TRANSPORT_REQUIREMENT__1057__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2422.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647905"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2772000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__264261__61348647965__S__CY__D__TRANSPORT_REQUIREMENT__1009</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__264261__61348647965__S__CY__D__TRANSPORT_REQUIREMENT__1009</id><narrativeDescription ttype="STRING">Transport from 10011466__264261__61348647965__S__CY__D__TRANSPORT_REQUIREMENT__1009__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2469.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":702.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647965"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":4759200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__299162__61348647816__S__CY__D__TRANSPORT_REQUIREMENT__1057</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299162__61348647816__S__CY__D__TRANSPORT_REQUIREMENT__1057</id><narrativeDescription ttype="STRING">Transport from 10011466__299162__61348647816__S__CY__D__TRANSPORT_REQUIREMENT__1057__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090644__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4085004__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3007.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647816"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":4154400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__201063__61348647807__S__CY__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__201063__61348647807__S__CY__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 10011466__201063__61348647807__S__CY__D__TRANSPORT_REQUIREMENT__1003__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2527.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647807"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3204000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__201063__61348648009__S__CY__D__TRANSPORT_REQUIREMENT__72149</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__201063__61348648009__S__CY__D__TRANSPORT_REQUIREMENT__72149</id><narrativeDescription ttype="STRING">Transport from 10011466__201063__61348648009__S__CY__D__TRANSPORT_REQUIREMENT__72149__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3566.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":229.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648009"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3376800});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__224414__61348647902__S__CY__D__TRANSPORT_REQUIREMENT__1057</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__224414__61348647902__S__CY__D__TRANSPORT_REQUIREMENT__1057</id><narrativeDescription ttype="STRING">Transport from 10011466__224414__61348647902__S__CY__D__TRANSPORT_REQUIREMENT__1057__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4091463__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2547.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647902"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3376800});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4088784__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4088784__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4088784 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4088784_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090638__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090638__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4090638 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">4090638__CONSOLIDATE_REQUIREMENT_XDOC</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__299612__61348647896__S__CY__D__TRANSPORT_REQUIREMENT__1057</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299612__61348647896__S__CY__D__TRANSPORT_REQUIREMENT__1057</id><narrativeDescription ttype="STRING">Transport from 10011466__299612__61348647896__S__CY__D__TRANSPORT_REQUIREMENT__1057__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090643__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2397.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647896"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3636000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__195907__61348648028__S__CY__D__TRANSPORT_REQUIREMENT__72149</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__195907__61348648028__S__CY__D__TRANSPORT_REQUIREMENT__72149</id><narrativeDescription ttype="STRING">Transport from 10011466__195907__61348648028__S__CY__D__TRANSPORT_REQUIREMENT__72149__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4084102__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090637__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4088784__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3061.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":229.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648028"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3549600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090638__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090638__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 4090638</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">4090638__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4090638_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090640__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090640__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4090640 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4090640_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__299162__61348647894__S__CY__D__TRANSPORT_REQUIREMENT__1057</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299162__61348647894__S__CY__D__TRANSPORT_REQUIREMENT__1057</id><narrativeDescription ttype="STRING">Transport from 10011466__299162__61348647894__S__CY__D__TRANSPORT_REQUIREMENT__1057__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090644__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4085004__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3007.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647894"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":4154400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__264261__61348647945__S__CY__D__TRANSPORT_REQUIREMENT__1009</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__264261__61348647945__S__CY__D__TRANSPORT_REQUIREMENT__1009</id><narrativeDescription ttype="STRING">Transport from 10011466__264261__61348647945__S__CY__D__TRANSPORT_REQUIREMENT__1009__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2469.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":702.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647945"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":4932000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4088784__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4088784__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4088784__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4088784__END_REQUIREMENT</item><item ttype="STRING">4088784__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4088784_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__299162__61348648125__S__CY__D__TRANSPORT_REQUIREMENT__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299162__61348648125__S__CY__D__TRANSPORT_REQUIREMENT__1012</id><narrativeDescription ttype="STRING">Transport from 10011466__299162__61348648125__S__CY__D__TRANSPORT_REQUIREMENT__1012__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090644__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4085004__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1012_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3086.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":820.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648125"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2599200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090639__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090639__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4090639 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,00A0,BBOS,TRSM,LCOS,NONE,ROOS</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">4090639__END_REQUIREMENT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">4091463__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4091463__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4091463 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4091463_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090644__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090644__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4090644 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">4090641__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090641__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4090641 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">4090641__END_REQUIREMENT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__201063__61348647973__S__CY__D__TRANSPORT_REQUIREMENT__1009</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__201063__61348647973__S__CY__D__TRANSPORT_REQUIREMENT__1009</id><narrativeDescription ttype="STRING">Transport from 10011466__201063__61348647973__S__CY__D__TRANSPORT_REQUIREMENT__1009__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2569.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":702.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647973"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3808800});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4088785__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4088785__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4088785 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4088785_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__264261__61348647899__S__CY__D__TRANSPORT_REQUIREMENT__1057</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__264261__61348647899__S__CY__D__TRANSPORT_REQUIREMENT__1057</id><narrativeDescription ttype="STRING">Transport from 10011466__264261__61348647899__S__CY__D__TRANSPORT_REQUIREMENT__1057__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2347.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647899"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3722400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__201063__61348647997__S__CY__D__TRANSPORT_REQUIREMENT__1009</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__201063__61348647997__S__CY__D__TRANSPORT_REQUIREMENT__1009</id><narrativeDescription ttype="STRING">Transport from 10011466__201063__61348647997__S__CY__D__TRANSPORT_REQUIREMENT__1009__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2569.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":702.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647997"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3895200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4091463__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4091463__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4091463 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__195907__61348647900__S__CY__D__TRANSPORT_REQUIREMENT__1057</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__195907__61348647900__S__CY__D__TRANSPORT_REQUIREMENT__1057</id><narrativeDescription ttype="STRING">Transport from 10011466__195907__61348647900__S__CY__D__TRANSPORT_REQUIREMENT__1057__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4084102__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090637__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4088784__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2157.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647900"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3636000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__197135__61348647933__S__CY__D__TRANSPORT_REQUIREMENT__1009</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__197135__61348647933__S__CY__D__TRANSPORT_REQUIREMENT__1009</id><narrativeDescription ttype="STRING">Transport from 10011466__197135__61348647933__S__CY__D__TRANSPORT_REQUIREMENT__1009__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1074042680__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3279.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":702.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647933"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3722400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__264261__61348648182__S__CY__D__TRANSPORT_REQUIREMENT__1015</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__264261__61348648182__S__CY__D__TRANSPORT_REQUIREMENT__1015</id><narrativeDescription ttype="STRING">Transport from 10011466__264261__61348648182__S__CY__D__TRANSPORT_REQUIREMENT__1015__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1015_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2279.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":721.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648182"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2858400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4090640__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4090640__END_REQUIREMENT</item><item ttype="STRING">4090640__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4090640_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1015_18_S</item><item ttype="STRING">1003_18_S</item><item ttype="STRING">1009_18_S</item><item ttype="STRING">1057_18_S</item><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">4085004__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4085004__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4085004 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4085004_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090637__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090637__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4090637 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4090637_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__201063__61348647815__S__CY__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__201063__61348647815__S__CY__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 10011466__201063__61348647815__S__CY__D__TRANSPORT_REQUIREMENT__1003__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2527.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647815"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3636000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090644__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090644__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4090644__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4090644__HOLD_REQUIREMENT</item><item ttype="STRING">4090644__END_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4090644_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item><item ttype="STRING">1057_18_S</item><item ttype="STRING">1012_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__201063__61348648197__S__CY__D__TRANSPORT_REQUIREMENT__1015</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__201063__61348648197__S__CY__D__TRANSPORT_REQUIREMENT__1015</id><narrativeDescription ttype="STRING">Transport from 10011466__201063__61348648197__S__CY__D__TRANSPORT_REQUIREMENT__1015__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1015_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2479.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":721.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648197"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3290400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090640__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090640__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4090640 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">4090640__END_REQUIREMENT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">4084102__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4084102__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4084102 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4084102_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__195907__61348647855__S__CY__D__TRANSPORT_REQUIREMENT__1057</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__195907__61348647855__S__CY__D__TRANSPORT_REQUIREMENT__1057</id><narrativeDescription ttype="STRING">Transport from 10011466__195907__61348647855__S__CY__D__TRANSPORT_REQUIREMENT__1057__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4084102__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090637__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4088784__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2157.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647855"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3636000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4091463__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4091463__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4091463__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4091463__END_REQUIREMENT</item><item ttype="STRING">4091463__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4091463_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__197135__61348647974__S__CY__D__TRANSPORT_REQUIREMENT__1009</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__197135__61348647974__S__CY__D__TRANSPORT_REQUIREMENT__1009</id><narrativeDescription ttype="STRING">Transport from 10011466__197135__61348647974__S__CY__D__TRANSPORT_REQUIREMENT__1009__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1074042680__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3204.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":702.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647974"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":4413600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090638__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090638__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 4090638__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">10011466__299612__61348647813__S__CY__D__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">10011466__299162__61348648138__S__CY__D__TRANSPORT_REQUIREMENT__1012</item><item ttype="STRING">10011466__197135__61348648008__S__CY__D__TRANSPORT_REQUIREMENT__72149</item><item ttype="STRING">10011466__264261__61348647814__S__CY__D__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">10011466__195907__61348647856__S__CY__D__TRANSPORT_REQUIREMENT__1057</item><item ttype="STRING">10011466__299612__61348647935__S__CY__D__TRANSPORT_REQUIREMENT__1009</item><item ttype="STRING">10011466__195907__61348648007__S__CY__D__TRANSPORT_REQUIREMENT__72149</item><item ttype="STRING">10011466__264261__61348648006__S__CY__D__TRANSPORT_REQUIREMENT__72149</item><item ttype="STRING">10011466__299162__61348648137__S__CY__D__TRANSPORT_REQUIREMENT__1012</item><item ttype="STRING">10011466__299162__61348648126__S__CY__D__TRANSPORT_REQUIREMENT__1012</item><item ttype="STRING">10011466__197135__61348648029__S__CY__D__TRANSPORT_REQUIREMENT__72149</item><item ttype="STRING">10011466__264261__61348647965__S__CY__D__TRANSPORT_REQUIREMENT__1009</item><item ttype="STRING">10011466__299162__61348647991__S__CY__D__TRANSPORT_REQUIREMENT__1009</item><item ttype="STRING">10011466__201063__61348647905__S__CY__D__TRANSPORT_REQUIREMENT__1057</item><item ttype="STRING">10011466__299162__61348647816__S__CY__D__TRANSPORT_REQUIREMENT__1057</item><item ttype="STRING">10011466__201063__61348647807__S__CY__D__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">10011466__224414__61348647902__S__CY__D__TRANSPORT_REQUIREMENT__1057</item><item ttype="STRING">10011466__299612__61348647896__S__CY__D__TRANSPORT_REQUIREMENT__1057</item><item ttype="STRING">10011466__195907__61348648028__S__CY__D__TRANSPORT_REQUIREMENT__72149</item><item ttype="STRING">10011466__299162__61348648125__S__CY__D__TRANSPORT_REQUIREMENT__1012</item><item ttype="STRING">10011466__201063__61348648009__S__CY__D__TRANSPORT_REQUIREMENT__72149</item><item ttype="STRING">10011466__201063__61348647973__S__CY__D__TRANSPORT_REQUIREMENT__1009</item><item ttype="STRING">10011466__264261__61348647899__S__CY__D__TRANSPORT_REQUIREMENT__1057</item><item ttype="STRING">10011466__201063__61348647997__S__CY__D__TRANSPORT_REQUIREMENT__1009</item><item ttype="STRING">10011466__195907__61348647900__S__CY__D__TRANSPORT_REQUIREMENT__1057</item><item ttype="STRING">10011466__197135__61348647933__S__CY__D__TRANSPORT_REQUIREMENT__1009</item><item ttype="STRING">10011466__264261__61348648182__S__CY__D__TRANSPORT_REQUIREMENT__1015</item><item ttype="STRING">10011466__201063__61348647815__S__CY__D__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">10011466__201063__61348648197__S__CY__D__TRANSPORT_REQUIREMENT__1015</item><item ttype="STRING">10011466__195907__61348647855__S__CY__D__TRANSPORT_REQUIREMENT__1057</item><item ttype="STRING">10011466__299162__61348647894__S__CY__D__TRANSPORT_REQUIREMENT__1057</item><item ttype="STRING">10011466__197135__61348647974__S__CY__D__TRANSPORT_REQUIREMENT__1009</item><item ttype="STRING">10011466__264261__61348648212__S__CY__D__TRANSPORT_REQUIREMENT__1015</item><item ttype="STRING">10011466__201063__61348648196__S__CY__D__TRANSPORT_REQUIREMENT__1015</item><item ttype="STRING">10011466__264261__61348647945__S__CY__D__TRANSPORT_REQUIREMENT__1009</item><item ttype="STRING">10011466__299612__61348647934__S__CY__D__TRANSPORT_REQUIREMENT__1009</item><item ttype="STRING">10011466__264261__61348648027__S__CY__D__TRANSPORT_REQUIREMENT__72149</item><item ttype="STRING">10011466__299612__61348647830__S__CY__D__TRANSPORT_REQUIREMENT__1057</item><item ttype="STRING">10011466__299162__61348647987__S__CY__D__TRANSPORT_REQUIREMENT__1009</item><item ttype="STRING">10011466__299612__61348647750__S__CY__D__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">10011466__264261__61348647778__S__CY__D__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">10011466__201063__61348648030__S__CY__D__TRANSPORT_REQUIREMENT__72149</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4090638_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_18_S</item><item ttype="STRING">1057_18_S</item><item ttype="STRING">1012_18_S</item><item ttype="STRING">72149_18_S</item><item ttype="STRING">1015_18_S</item><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__264261__61348648212__S__CY__D__TRANSPORT_REQUIREMENT__1015</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__264261__61348648212__S__CY__D__TRANSPORT_REQUIREMENT__1015</id><narrativeDescription ttype="STRING">Transport from 10011466__264261__61348648212__S__CY__D__TRANSPORT_REQUIREMENT__1015__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1015_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2279.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":721.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648212"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3376800});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">1074042680__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1074042680__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1074042680 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">4090637__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090637__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4090637 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">4090637__END_REQUIREMENT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__299162__61348648137__S__CY__D__TRANSPORT_REQUIREMENT__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299162__61348648137__S__CY__D__TRANSPORT_REQUIREMENT__1012</id><narrativeDescription ttype="STRING">Transport from 10011466__299162__61348648137__S__CY__D__TRANSPORT_REQUIREMENT__1012__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090644__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4085004__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1012_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3036.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":820.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648137"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2167200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__264261__61348648027__S__CY__D__TRANSPORT_REQUIREMENT__72149</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__264261__61348648027__S__CY__D__TRANSPORT_REQUIREMENT__72149</id><narrativeDescription ttype="STRING">Transport from 10011466__264261__61348648027__S__CY__D__TRANSPORT_REQUIREMENT__72149__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3291.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":229.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648027"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3117600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4090641__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4090641__END_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4090641_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1015_18_S</item><item ttype="STRING">1003_18_S</item><item ttype="STRING">1009_18_S</item><item ttype="STRING">1057_18_S</item><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__299612__61348647813__S__CY__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299612__61348647813__S__CY__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 10011466__299612__61348647813__S__CY__D__TRANSPORT_REQUIREMENT__1003__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090643__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2397.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647813"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3636000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__299162__61348647987__S__CY__D__TRANSPORT_REQUIREMENT__1009</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299162__61348647987__S__CY__D__TRANSPORT_REQUIREMENT__1009</id><narrativeDescription ttype="STRING">Transport from 10011466__299162__61348647987__S__CY__D__TRANSPORT_REQUIREMENT__1009__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090644__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4085004__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1009_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3069.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":702.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647987"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3290400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090641__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090641__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4090641 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4090641_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4084102__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4084102__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4084102__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4084102__HOLD_REQUIREMENT</item><item ttype="STRING">4084102__END_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4084102_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">4088785__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4088785__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4088785 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">4088785__END_REQUIREMENT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__299612__61348647830__S__CY__D__TRANSPORT_REQUIREMENT__1057</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299612__61348647830__S__CY__D__TRANSPORT_REQUIREMENT__1057</id><narrativeDescription ttype="STRING">Transport from 10011466__299612__61348647830__S__CY__D__TRANSPORT_REQUIREMENT__1057__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090643__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2397.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647830"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3636000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090643__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090643__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4090643 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">4090643__END_REQUIREMENT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__201063__61348648196__S__CY__D__TRANSPORT_REQUIREMENT__1015</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__201063__61348648196__S__CY__D__TRANSPORT_REQUIREMENT__1015</id><narrativeDescription ttype="STRING">Transport from 10011466__201063__61348648196__S__CY__D__TRANSPORT_REQUIREMENT__1015__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1015_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2479.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":721.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648196"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3031200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__299612__61348647750__S__CY__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__299612__61348647750__S__CY__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 10011466__299612__61348647750__S__CY__D__TRANSPORT_REQUIREMENT__1003__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090643__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2397.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647750"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2772000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090639__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090639__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 4090639 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,00A0,BBOS,TRSM,LCOS,NONE,ROOS</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_4090639_Operating_hour</item></operatingHours><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090643__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090643__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4090643__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4090643__END_REQUIREMENT</item><item ttype="STRING">4090643__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4090643_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_18_S</item><item ttype="STRING">1009_18_S</item><item ttype="STRING">1057_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">10011466__197135__61348648029__S__CY__D__TRANSPORT_REQUIREMENT__72149</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__197135__61348648029__S__CY__D__TRANSPORT_REQUIREMENT__72149</id><narrativeDescription ttype="STRING">Transport from 10011466__197135__61348648029__S__CY__D__TRANSPORT_REQUIREMENT__72149__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1074042680__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3061.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":229.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648029"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3549600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__264261__61348647778__S__CY__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__264261__61348647778__S__CY__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 10011466__264261__61348647778__S__CY__D__TRANSPORT_REQUIREMENT__1003__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4090641__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":2517.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":792.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348647778"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3117600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">10011466__201063__61348648030__S__CY__D__TRANSPORT_REQUIREMENT__72149</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">10011466__201063__61348648030__S__CY__D__TRANSPORT_REQUIREMENT__72149</id><narrativeDescription ttype="STRING">Transport from 10011466__201063__61348648030__S__CY__D__TRANSPORT_REQUIREMENT__72149__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">4088785__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">4090640__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dtmlookupflag":false,"baseRate":{"amount":3116.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[{"expiryDate":1569801600,"amount":229.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","effectiveDate":1561939200}],"rateId":"61348648030"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":3376800});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1561964400</rateValidityStart><rateValidityEnd ttype="I64">1588230000</rateValidityEnd><minHours ttype="DOUBLE">0</minHours></value></item><item><key ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4090639__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 4090639__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,00A0,BBOS,TRSM,LCOS,NONE,ROOS</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">4090639__END_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_4090639_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1015_18_S</item><item ttype="STRING">1003_18_S</item><item ttype="STRING">1009_18_S</item><item ttype="STRING">1057_18_S</item><item ttype="STRING">72149_18_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item><item><key ttype="STRING">4088784__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">4088784__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 4088784 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><maxHours ttype="DOUBLE">0.0</maxHours><minHours ttype="DOUBLE">0.0</minHours></value></item></steps><operatingTimes ttype="MAP"><item><key ttype="STRING">SHIPPING_4088785_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4088785_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4085004_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4085004_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4090637_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4090637_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4090639_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4090639_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4090637_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4090637_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4088784_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4088784_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4090643_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4090643_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4090644_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4090644_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4090643_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4090643_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4085004_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4085004_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4090640_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4090640_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4090640_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4090640_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4088785_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4088785_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4090638_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4090638_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4090644_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4090644_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4084102_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4084102_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4091463_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4091463_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4090641_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4090641_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4084102_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4084102_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4090639_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4090639_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4090641_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4090641_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_1074042680_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1074042680_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_1074042680_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1074042680_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">SHIPPING_4088784_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_4088784_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4090638_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4090638_Operating_hour</id><openTimeRange ttype="LIST"/></value></item><item><key ttype="STRING">RECEIVING_4091463_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_4091463_Operating_hour</id><openTimeRange ttype="LIST"/></value></item></operatingTimes><unitDimensions ttype="MAP"><item><key ttype="STRING">LINEARMETER</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">LINEARMETER</id><dimension ttype="I32">10</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/LNM</id><name ttype="STRING">544</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">WEIGHT</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">WEIGHT</id><dimension ttype="I32">5</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">wtInKG</id><name ttype="STRING">33</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">PACKAGE</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">PACKAGE</id><dimension ttype="I32">12</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/package</id><name ttype="STRING">155</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CUSTOM</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CUSTOM</id><dimension ttype="I32">6</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">NumberOfTOS</id><name ttype="STRING">100001</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">VOLUME</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">VOLUME</id><dimension ttype="I32">4</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">volInCBM</id><name ttype="STRING">81</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CURRENCY</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CURRENCY</id><dimension ttype="I32">0</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">Dollar</id><name ttype="STRING">840</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">PALLET</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">PALLET</id><dimension ttype="I32">7</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/pallet</id><name ttype="STRING">169</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CARTON</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CARTON</id><dimension ttype="I32">8</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/carton</id><name ttype="STRING">159</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">SQUAREMETER</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">SQUAREMETER</id><dimension ttype="I32">11</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/SQM</id><name ttype="STRING">181</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">UNIT</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">UNIT</id><dimension ttype="I32">9</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/unit</id><name ttype="STRING">152</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item></unitDimensions><resources ttype="MAP"><item><key ttype="STRING">1004_18_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1004_18_S</id><capacities ttype="LIST"><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">30200.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">75.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">2.0</maximumValue></item></capacities><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1004_18_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">1003_18_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_18_S</id><capacities ttype="LIST"><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">30200.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">75.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">2.0</maximumValue></item></capacities><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_18_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">1057_18_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1057_18_S</id><capacities ttype="LIST"><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">30200.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">75.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">2.0</maximumValue></item></capacities><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1057_18_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">1012_18_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1012_18_S</id><capacities ttype="LIST"><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">30200.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">75.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">2.0</maximumValue></item></capacities><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1012_18_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">72149_18_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">72149_18_S</id><capacities ttype="LIST"><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">30200.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">75.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">2.0</maximumValue></item></capacities><scriptedConstraint ttype="STRING">(resourceObj= {"id":"72149_18_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">1015_18_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1015_18_S</id><capacities ttype="LIST"><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">30200.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">75.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">2.0</maximumValue></item></capacities><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1015_18_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">1009_18_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1009_18_S</id><capacities ttype="LIST"><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">30200.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">75.0</maximumValue></item><item struct="ResourceCapacities" ttype="STRUCT"><UOM struct="UnitOfMeasure" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit></UOM><minimumValue ttype="DOUBLE">0.0</minimumValue><maximumValue ttype="DOUBLE">2.0</maximumValue></item></capacities><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1009_18_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><priority ttype="I32">1</priority></value></item></resources><carrierLaneWiseAllocations ttype="MAP"/><globalScript ttype="STRING">distanceMatrix = {}
transitTimeMatrix = {}
var rate = function(rateInputObj) {&#13;
&#13;
	this.evaluateByObj = function(dimObj) {&#13;
		result = this.evaluate(dimObj);&#13;
		if (!result || result.total &lt;= 0 || !rateInputObj.baseRate.total&#13;
				|| rateInputObj.baseRate.total &lt;= 0) {&#13;
			return 9999999;&#13;
		}&#13;
		return parseFloat(result.total);&#13;
	};&#13;
&#13;
	this.evaluate = function(dimObj) {&#13;
		if (rateInputObj.accessorials) {&#13;
			for (i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				rateInputObj.accessorials[i].total = 0;&#13;
			}&#13;
		}&#13;
		this.evaluateBaseRate(dimObj);&#13;
		this.evaluateAccessorials(dimObj);&#13;
		this.evaluateStopOff(dimObj.stopOffs);&#13;
		this.getDistanceSplit(dimObj);&#13;
		this.evaluateTransitTime(dimObj);&#13;
		totalAmt = 0;&#13;
		baseRateBasis = rateInputObj.baseRate.basis;&#13;
		supportedBasis = rateInputObj.baseRate.supportedBasis;&#13;
		if (rateInputObj.baseRate.total) {&#13;
			totalAmt = rateInputObj.baseRate.total;&#13;
		}&#13;
		if (rateInputObj.accessorials) {&#13;
			for (i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				if (rateInputObj.accessorials[i]&#13;
						&amp;&amp; rateInputObj.accessorials[i].total&#13;
						&amp;&amp; (baseRateBasis || rateInputObj.accessorials[i].supportedBasis)) {&#13;
					totalAmt = totalAmt + rateInputObj.accessorials[i].total;&#13;
				}&#13;
			}&#13;
		}&#13;
		if (rateInputObj.stopBands &amp;&amp; rateInputObj.stopOffTotal) {&#13;
			totalAmt = totalAmt + rateInputObj.stopOffTotal;&#13;
		}&#13;
		if (constraints &amp;&amp; constraints.locationactivities) {&#13;
			this.evaluateActivityCost(constraints.locationactivities, dimObj);&#13;
		}&#13;
		if (rateInputObj.activityCost) {&#13;
			totalAmt = totalAmt + rateInputObj.activityCost;&#13;
		}&#13;
		rateInputObj.total = parseFloat(totalAmt);&#13;
		return rateInputObj;&#13;
	};&#13;
	&#13;
	&#13;
	this.evaluateActivityCost = function(locationactivities, dimObj) {&#13;
		var cost = 0.0;&#13;
		if(locationactivities){&#13;
			var keys = Object.keys(locationactivities);&#13;
			keys.forEach(function(key){&#13;
				 if ( dimObj.stopOffs.length &gt; 1 ) {&#13;
                    // handle multi pick and multidrop cases &#13;
                    for (j = 0; j &lt; dimObj.stopOffs.length ; j++) {&#13;
                    	 var stop = dimObj.stopOffs[j].stop;&#13;
                    	 if ( stop.split('__')[1].split('_')[0] == 'HOLD') { //HOLD REQUIREMENT&#13;
                    		 if ( key == stop.slice(0, stop.indexOf('__'))){&#13;
                          	   for(var i = 0; i&lt; constraints.locationactivities[stop.slice(0, stop.indexOf('__'))].SENDINGACTIVITIES.length; i++) {&#13;
                              	   cost = cost + calculateActivityCost(constraints.locationactivities[stop.slice(0, stop.indexOf('__'))].SENDINGACTIVITIES[i], dimObj);&#13;
                                 }&#13;
                             }&#13;
                    	 }else { // END REQUIREMENT&#13;
                    		 if ( key == stop.slice(0, stop.indexOf('__'))){&#13;
                          	   for(var i = 0; i&lt; constraints.locationactivities[stop.slice(0, stop.indexOf('__'))].RECEIVINGACTIVITIES.length; i++) {&#13;
                              	   cost = cost + calculateActivityCost(constraints.locationactivities[stop.slice(0, stop.indexOf('__'))].RECEIVINGACTIVITIES[i], dimObj);&#13;
                          	   }&#13;
                             }&#13;
                    	 }&#13;
                    }&#13;
              }&#13;
		    });&#13;
			rateInputObj.activityCost = parseFloat(cost);&#13;
		}&#13;
		return rateInputObj.activityCost;&#13;
	};&#13;
	&#13;
	calculateActivityCost = function(activity, dimObj) {&#13;
		var totalActivityCost = 0.0;&#13;
		inputObj = rateInputObj.baseRate;&#13;
		if((activity.NAME &amp;&amp; activity.ISDEFAULT &amp;&amp; activity.COST &amp;&amp; activity.COSTBASIS &amp;&amp; activity.COSTCURRENCY) &amp;&amp; &#13;
		   ((activity.SHIPPING &amp;&amp; activity.SHIPPING == true) ||(activity.RECEIEVING &amp;&amp; activity.RECEIEVING == true))) {&#13;
			&#13;
			var costBasis = activity.COSTBASIS.replace(/"/g, "");&#13;
			var activityCost = parseFloat(activity.COST)&#13;
			if (costBasis == '/CBM') {&#13;
				if (dimObj.dims.volInCBM &amp;&amp; activity.VOLCONVRATE) {&#13;
					var volume = dimObj.dims.volInCBM;&#13;
					totalActivityCost = (volume * activity.VOLCONVRATE) * activityCost;&#13;
				}&#13;
			} else if (costBasis == '/KG' || costBasis == '/LB'	|| costBasis == '/METRICTON') {&#13;
				if (dimObj.dims.wtInKG &amp;&amp; activity.WTCONVRATE) {&#13;
					var weight = dimObj.dims.wtInKG;&#13;
					totalActivityCost = weight * (activity.WTCONVRATE * activityCost);&#13;
				}&#13;
			} else if (costBasis == '/FLAT') {&#13;
				totalActivityCost = activityCost;&#13;
			}&#13;
		}&#13;
		return totalActivityCost;&#13;
   };&#13;
	&#13;
	this.evaluateSMCRate = function(dimObj) {&#13;
		lbConvRate = rateInputObj.baseRate.lbConvRate;&#13;
		smcWeight = dimObj.dims.wtInKG * lbConvRate;&#13;
		smcRate = 0.0;&#13;
		smcDiscount = 0.0;&#13;
		smcFinalPrice = 0.0;&#13;
		&#13;
		if (inputObj.isdeficitpricing &amp;&amp; inputObj.isdeficitpricing === 'yes') {&#13;
			if (rateInputObj.rateBands&#13;
					&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
				for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
					found = false;&#13;
					if ((smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
							|| (smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; smcWeight &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
						found = true;					&#13;
					} else {&#13;
						if (i != 0 &amp;&amp; smcWeight &gt; rateInputObj.rateBands[i-1].upperbreak &amp;&amp; smcWeight &lt; rateInputObj.rateBands[i].lowerbreak) {&#13;
							found = true;				&#13;
						}&#13;
					}&#13;
					if (found) {&#13;
						if (rateInputObj.rateBands[i].upperbreak == 999999999) {&#13;
							smcRate = rateInputObj.rateBands[i].amount;&#13;
							smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
						} else {&#13;
							smcNextBandAmt = rateInputObj.rateBands[i + 1].amount;&#13;
							smcNextBandRate = smcNextBandAmt * dimObj.dims.wtInKG * 0.01;&#13;
							smcBandRate = rateInputObj.rateBands[i].amount * dimObj.dims.wtInKG * 0.01;&#13;
									&#13;
							if (smcNextBandRate &gt; smcBandRate) {&#13;
								smcRate = rateInputObj.rateBands[i+1].amount;&#13;
								smcDiscount = rateInputObj.rateBands[i+1].discountpercentage;&#13;
							} else {&#13;
								smcRate = rateInputObj.rateBands[i].amount;&#13;
								smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
							}&#13;
						}&#13;
						break;&#13;
					}&#13;
				}&#13;
			}&#13;
		} else {&#13;
			if (rateInputObj.rateBands &amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
				for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
					found = false;&#13;
					if ((smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
						|| (smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; smcWeight &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
						found = true;					&#13;
					} else {&#13;
						if (i != 0 &amp;&amp; smcWeight &gt; rateInputObj.rateBands[i-1].upperbreak &amp;&amp; smcWeight &lt; rateInputObj.rateBands[i].lowerbreak) {&#13;
							found = true;				&#13;
						}&#13;
					}&#13;
					if (found) {&#13;
							smcRate = rateInputObj.rateBands[i].amount;&#13;
							smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
							break;&#13;
					}&#13;
				}&#13;
			}		&#13;
		}		&#13;
		&#13;
		if (smcRate &gt; 0.0) {&#13;
			noOfCwts = dimObj.dims.wtInKG * 0.01;&#13;
			grossCharge = noOfCwts * smcRate;&#13;
			discountedCharge = 0.0;&#13;
			&#13;
			if (smcDiscount &gt; 0.0) {&#13;
				discountCharge = (grossCharge * smcDiscount) / 100;&#13;
				discountedCharge = grossCharge - discountCharge;				&#13;
			} else {&#13;
				discountedCharge = grossCharge;&#13;
			}&#13;
			&#13;
			minimumcharge = rateInputObj.baseRate.minimumcharge;&#13;
			minimumchargediscount = rateInputObj.baseRate.minimumchargediscount;&#13;
			discountedMinimumCharge = 0.0;&#13;
			&#13;
			if (minimumchargediscount &gt; 0.0) {&#13;
				minimumdiscountCharge = (minimumcharge * minimumchargediscount) / 100;&#13;
				discountedMinimumCharge = minimumcharge - minimumdiscountCharge;				&#13;
			} else {&#13;
				discountedMinimumCharge = minimumcharge;&#13;
			}&#13;
			&#13;
			smcTotalPrice = (discountedCharge &gt; discountedMinimumCharge) ? discountedCharge : discountedMinimumCharge;&#13;
			&#13;
			ltlsurchargepercentage = rateInputObj.baseRate.ltlsurchargepercentage;&#13;
			ltlsurchargeamount = (smcTotalPrice * ltlsurchargepercentage) / 100;&#13;
			&#13;
			smcCalculatedPrice = smcTotalPrice + ltlsurchargeamount;&#13;
			&#13;
			minimumfloorcharge = rateInputObj.baseRate.minimumfloorcharge;&#13;
			&#13;
			smcFinalPrice = (minimumfloorcharge &gt; smcCalculatedPrice) ? minimumfloorcharge : smcCalculatedPrice;			&#13;
		} &#13;
		&#13;
		rateInputObj.baseRate.supportedBasis = true;&#13;
		rateInputObj.baseRate.total = parseFloat(smcFinalPrice);&#13;
	};&#13;
&#13;
	this.evaluateBaseRate = function(dimObj) {&#13;
		inputObj = rateInputObj.baseRate;&#13;
		calculateCW = rateInputObj.calculateCW;&#13;
		supportedBasis = false;&#13;
		totalAmt = 0;&#13;
		quantity = 0;&#13;
		&#13;
		if (inputObj.isSMC) {&#13;
			this.evaluateSMCRate(dimObj);&#13;
			return;				&#13;
		}&#13;
		&#13;
		if (inputObj.basis === '/container') {&#13;
			supportedBasis = true;&#13;
			if (inputObj.equipmentType &amp;&amp; dimObj.dims[inputObj.equipmentType]) {&#13;
				totalAmt = inputObj.amount&#13;
						* dimObj.dims[inputObj.equipmentType];&#13;
				quantity = dimObj.dims[inputObj.equipmentType];&#13;
			} else {&#13;
				return;&#13;
			}&#13;
		}&#13;
&#13;
		if (inputObj.basis === '/package' || inputObj.basis === '/pallet'&#13;
				|| inputObj.basis === '/unit' || inputObj.basis === '/carton'&#13;
				|| inputObj.basis === '/LNM' || inputObj.basis === '/SQM'&#13;
				|| inputObj.basis === '/MBF' || inputObj.basis === '/MSF'&#13;
				|| inputObj.basis === '/LDM') {&#13;
			supportedBasis = true;&#13;
&#13;
			if (dimObj.dims.genericQty &amp;&amp; dimObj.dims.genericQtyUnit&#13;
					&amp;&amp; (dimObj.dims.genericQtyUnit === inputObj.basis)) {&#13;
				genericqty = dimObj.dims.genericQty;&#13;
				if (inputObj.minimumqty) {&#13;
					rateInputObj.baseRate.appliedMinQty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty : 0;&#13;
					genericqty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty&#13;
							: dimObj.dims.genericQty;							&#13;
				}&#13;
				totalAmt = inputObj.amount * genericqty;&#13;
				quantity = genericqty;&#13;
			} else if (dimObj.dims[inputObj.basis]) {&#13;
				genericqty = dimObj.dims[inputObj.basis];&#13;
				if (inputObj.minimumqty) {&#13;
					rateInputObj.baseRate.appliedMinQty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty : 0;&#13;
					genericqty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty&#13;
							: dimObj.dims.genericQty;&#13;
				}&#13;
				totalAmt = inputObj.amount * genericqty;&#13;
				quantity = genericqty;&#13;
			}&#13;
		}&#13;
&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == '/FLAT') {&#13;
			supportedBasis = true;&#13;
			totalAmt = inputObj.amount;&#13;
			quantity = 1;&#13;
		}&#13;
		&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == 'lps') {&#13;
			supportedBasis = true;&#13;
			totalAmt = inputObj.amount;&#13;
			quantity = 1;&#13;
	    }&#13;
	    &#13;
		if (dimObj.dims.wtInKG &amp;&amp; inputObj.wtConvRate) {&#13;
			supportedBasis = true;&#13;
			weight = dimObj.dims.wtInKG;&#13;
&#13;
			// GTN-25018 : Chargeable Weight scenario.&#13;
			volume = dimObj.dims.volInCBM;&#13;
			dimFactor = rateInputObj.dimFactor;&#13;
			dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
			volumetricWeight = 0.0;&#13;
			if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
				if (dimFactorConv === 'cm/kg') {&#13;
					volumetricWeight = (volume * 1000000) / dimFactor;&#13;
				} else if (dimFactorConv === 'in/lb') {&#13;
					volumetricWeight = (volume * 61024) / dimFactor;&#13;
					volumetricWeight = volumetricWeight * 0.45359237;&#13;
			    }&#13;
			}&#13;
			&#13;
			weight = (weight * inputObj.wtConvRate) &gt; (volumetricWeight  * inputObj.wtConvRate) ? weight&#13;
					: volumetricWeight;&#13;
&#13;
			if (inputObj.minWeight) {&#13;
				inputObj.appliedMinWeight = weight &lt; inputObj.minWeight ? inputObj.minWeight : 0;&#13;
				weight = weight &lt; inputObj.minWeight ? inputObj.minWeight&#13;
						: weight;&#13;
				inputObj.wtConvRate = 1;&#13;
			}&#13;
			quantity = weight * inputObj.wtConvRate;&#13;
			totalAmt = this.evaluateRateBands(weight, inputObj.amount,&#13;
					inputObj.wtConvRate);&#13;
		}&#13;
&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == '/WM') {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			volume = dimObj.dims.volInCBM;&#13;
			wmUnit = 0;&#13;
			supportedBasis = true;&#13;
			if (weight) {&#13;
				wmUnit = weight * inputObj.wtConvRate;&#13;
			}&#13;
			if (volume) {&#13;
				wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
			}&#13;
			if (inputObj.minWeight) {&#13;
				rateInputObj.baseRate.appliedMinWeight = wmUnit &lt; inputObj.minWeight ? inputObj.minWeight : 0;&#13;
				wmUnit = wmUnit &lt; inputObj.minWeight ? inputObj.minWeight&#13;
						: wmUnit;&#13;
				inputObj.wtConvRate = 1;&#13;
			}&#13;
			totalAmt = inputObj.amount * wmUnit;&#13;
			quantity = wmUnit;&#13;
		}&#13;
&#13;
		if (dimObj.dims.volInCBM &amp;&amp; inputObj.volConvRate) {&#13;
			supportedBasis = true;&#13;
			volume = dimObj.dims.volInCBM;&#13;
&#13;
			if (inputObj.minimumqty) {&#13;
				rateInputObj.baseRate.appliedMinQty = volume &lt; inputObj.minimumqty ? inputObj.minimumqty : 0;				&#13;
				volume = volume &lt; inputObj.minimumqty ? inputObj.minimumqty&#13;
						: volume;&#13;
				inputObj.volConvRate = 1;&#13;
			}&#13;
			tempAmt = this.evaluateRateBands(volume, inputObj.amount,&#13;
					inputObj.volConvRate);&#13;
			totalAmt = totalAmt &gt; tempAmt ? totalAmt : tempAmt;						&#13;
			quantity = volume * inputObj.volConvRate;&#13;
			&#13;
		} else if ((dimObj.dims.dstInMile&#13;
				|| (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) || rateInputObj.distance)&#13;
				&amp;&amp; inputObj.dstConvRate) {&#13;
			supportedBasis = true;&#13;
			distance = 0.0;&#13;
			if (dimObj.dims.dstInMile) {&#13;
				distance = dimObj.dims.dstInMile;&#13;
			} else if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {&#13;
				distance = this.getEffectiveDistance(dimObj);&#13;
			} else {&#13;
				distance = rateInputObj.distance;&#13;
			}&#13;
			quantity = distance * inputObj.dstConvRate;&#13;
			totalAmt = this.evaluateRateBands(distance, inputObj.amount,&#13;
					inputObj.dstConvRate);&#13;
		}&#13;
&#13;
		if (inputObj.basis === 'pricingbands') {&#13;
			supportedBasis = true;&#13;
			bandAmt = 0.0;&#13;
			mUnit = 0.0;&#13;
			convRate = 0.0;&#13;
			amount = 0.0;&#13;
			&#13;
			if (inputObj.isdeficitpricing) {&#13;
				if (inputObj.wtConvRate) {&#13;
					mUnit = dimObj.dims.wtInKG;&#13;
					convRate = inputObj.wtConvRate;&#13;
					&#13;
					// GTN-27410 : Chargeable Weight scenario for TL and LTL.&#13;
					volume = dimObj.dims.volInCBM;&#13;
					dimFactor = rateInputObj.dimFactor;&#13;
					dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
					volumetricWeight = 0.0;&#13;
					if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
						if (dimFactorConv === 'cm/kg') {&#13;
							volumetricWeight = (volume * 1000000) / dimFactor;&#13;
						} else if (dimFactorConv === 'in/lb') {&#13;
							volumetricWeight = (volume * 61024) / dimFactor;&#13;
							volumetricWeight = volumetricWeight * 0.45359237;&#13;
						}&#13;
					}&#13;
&#13;
					mUnit = (mUnit * inputObj.wtConvRate) &gt; (volumetricWeight * convRate) ? mUnit&#13;
							: volumetricWeight;&#13;
&#13;
					if (inputObj.minWeight) {&#13;
						mUnit = mUnit &lt; inputObj.minWeight ? inputObj.minWeight&#13;
								: mUnit;&#13;
						inputObj.wtConvRate = 1;&#13;
						convRate = 1;&#13;
					}&#13;
				} else if (inputObj.volConvRate) {&#13;
					mUnit = dimObj.dims.volInCBM;&#13;
					convRate = inputObj.volConvRate;&#13;
				} else if (inputObj.dstConvRate) {&#13;
					mUnit = dimObj.dims.dstInMile;&#13;
					convRate = inputObj.dstConvRate;&#13;
				} else {&#13;
					if (inputObj.weightbreakbasis&#13;
							&amp;&amp; (inputObj.weightbreakbasis === '/package'&#13;
									|| inputObj.weightbreakbasis === '/pallet'&#13;
									|| inputObj.weightbreakbasis === '/unit'&#13;
									|| inputObj.weightbreakbasis === '/carton'&#13;
									|| inputObj.weightbreakbasis === '/LNM'&#13;
									|| inputObj.weightbreakbasis === '/SQM'&#13;
									|| inputObj.weightbreakbasis === '/MBF'&#13;
									|| inputObj.weightbreakbasis === '/MSF' &#13;
									|| inputObj.weightbreakbasis === '/LDM')) {&#13;
						if (dimObj.dims.genericQty&#13;
								&amp;&amp; dimObj.dims.genericQtyUnit&#13;
								&amp;&amp; (dimObj.dims.genericQtyUnit === inputObj.weightbreakbasis)) {&#13;
							mUnit = dimObj.dims.genericQty;&#13;
							convRate = 1;&#13;
						} else if (dimObj.dims[inputObj.weightbreakbasis]) {&#13;
							mUnit = dimObj.dims[inputObj.weightbreakbasis];&#13;
							convRate = 1;&#13;
						}&#13;
					}&#13;
				}&#13;
&#13;
				if (inputObj.isdeficitpricing === 'yes') {&#13;
					if (rateInputObj.rateBands&#13;
							&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
						for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
							found = false;&#13;
							if (((mUnit * convRate) &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
									|| ((mUnit * convRate) &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; (mUnit * convRate) &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
								found = true;					&#13;
							} else {&#13;
								if (i != 0 &amp;&amp; (mUnit * convRate) &gt; rateInputObj.rateBands[i-1].upperbreak &amp;&amp; (mUnit * convRate) &lt; rateInputObj.rateBands[i].lowerbreak) {&#13;
									found = true;				&#13;
								}&#13;
							}&#13;
							if (found) {&#13;
								if (rateInputObj.rateBands[i].upperbreak == 999999999) {&#13;
								    if (inputObj.weightbreakbasis == 'lps') {&#13;
										bandAmt = rateInputObj.rateBands[i].amount;&#13;
									} else {&#13;
										bandAmt = rateInputObj.rateBands[i].amount&#13;
											* mUnit * convRate;																&#13;
									}&#13;
									quantity = mUnit * convRate;										&#13;
									amount = rateInputObj.rateBands[i].actualCost;&#13;
								} else {&#13;
									if (inputObj.weightbreakbasis == 'lps') {&#13;
										bandAmt = rateInputObj.rateBands[i + 1].amount;&#13;
									} else {&#13;
										bandAmt = rateInputObj.rateBands[i + 1].amount&#13;
												* rateInputObj.rateBands[i + 1].lowerbreak&#13;
												* convRate;							&#13;
									}&#13;
									actualPrice = 0.0;&#13;
									if (inputObj.weightbreakbasis == 'lps') {&#13;
										actualPrice = rateInputObj.rateBands[i].amount;&#13;
									} else {&#13;
										actualPrice = rateInputObj.rateBands[i].amount&#13;
												* mUnit * convRate;						&#13;
									}&#13;
									&#13;
									if (bandAmt &gt; actualPrice) {&#13;
										bandAmt = actualPrice;&#13;
										amount = rateInputObj.rateBands[i].actualCost;&#13;
									} else {&#13;
										amount = rateInputObj.rateBands[i + 1].actualCost;&#13;
									}&#13;
									quantity = mUnit * convRate;		&#13;
								}&#13;
								break;&#13;
							}&#13;
						}&#13;
					}&#13;
				} else {&#13;
					if (rateInputObj.rateBands&#13;
							&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
						for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
							found = false;&#13;
							if (((mUnit * convRate) &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
									|| ((mUnit * convRate) &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; (mUnit * convRate) &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
								found = true;					&#13;
							} else {&#13;
								if (i != 0 &amp;&amp; (mUnit * convRate) &gt; rateInputObj.rateBands[i-1].upperbreak &amp;&amp; (mUnit * convRate) &lt; rateInputObj.rateBands[i].lowerbreak) {&#13;
									found = true;				&#13;
								}&#13;
							}&#13;
							if (found) {&#13;
								if (inputObj.weightbreakbasis == 'lps') {&#13;
									bandAmt = rateInputObj.rateBands[i].amount;&#13;
								} else {&#13;
									bandAmt = rateInputObj.rateBands[i].amount&#13;
										* mUnit * convRate;								&#13;
								}&#13;
								quantity = mUnit * convRate;&#13;
								amount = rateInputObj.rateBands[i].actualCost;&#13;
								break;&#13;
							}&#13;
						}&#13;
					}&#13;
				}&#13;
			}		&#13;
			&#13;
			rateInputObj.baseRate.actualCost = parseFloat(amount);&#13;
			totalAmt = bandAmt;&#13;
		}&#13;
&#13;
		if (!supportedBasis) {&#13;
			switch (inputObj.basis) {&#13;
			case '/container':&#13;
			case '/CBM':&#13;
			case '/WM':&#13;
			case '/kg':&#13;
			case '/lb':&#13;
			case '/ton':&#13;
			case '/MI':&#13;
			case '/KM':&#13;
				rateInputObj.baseRate.supportedBasis = true;&#13;
				supportedBasis = true;&#13;
			}&#13;
		}&#13;
&#13;
		if (!supportedBasis) {&#13;
			totalAmt = inputObj.amount;&#13;
			rateInputObj.baseRate.quantity = 1;&#13;
		}&#13;
		&#13;
		if (quantity) {&#13;
			rateInputObj.baseRate.quantity = quantity;&#13;
		}		&#13;
&#13;
		if (inputObj.minAmount) {&#13;
			rateInputObj.baseRate.appliedMin = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount : 0;&#13;
			totalAmt = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount&#13;
					: totalAmt;&#13;
		}&#13;
		&#13;
		if (inputObj.maxAmount) {&#13;
			rateInputObj.baseRate.appliedMax = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount : 0;&#13;
			totalAmt = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount&#13;
					: totalAmt;&#13;
		}&#13;
	&#13;
		rateInputObj.baseRate.supportedBasis = supportedBasis;&#13;
		rateInputObj.baseRate.total = parseFloat(totalAmt);&#13;
	};&#13;
&#13;
	this.getEffectiveDistance = function(dimObj) {&#13;
		distance = 0.0;&#13;
		var jsonBaseRate = rateInputObj.baseRate;&#13;
		var dtmLookUPFlag = rateInputObj.dtmlookupflag;&#13;
		for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
			origStop = dimObj.stopOffs[i].stop;&#13;
			if (origStop.indexOf('__') &gt; 0) {&#13;
				origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
			}&#13;
			destStop = dimObj.stopOffs[i + 1].stop;&#13;
			if (destStop.indexOf('__') &gt; 0) {&#13;
				destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
			}&#13;
			if (origStop == destStop) {&#13;
				distance = distance + 0.01;&#13;
				continue;&#13;
			}&#13;
			if(!dtmLookUPFlag){&#13;
				if (!distanceMatrix[origStop]&#13;
						|| !distanceMatrix[origStop][destStop]) {&#13;
					if (rateInputObj.distance) {&#13;
						return rateInputObj.distance;&#13;
					} else {&#13;
						return 9999999;&#13;
					}&#13;
				}&#13;
				distval = distanceMatrix[origStop][destStop];&#13;
				distance = distance + distanceMatrix[origStop][destStop];&#13;
			} else {&#13;
				if(!parseFloat(dimObj.distanceMatrix[origStop+'-'+destStop])){&#13;
					if (rateInputObj.distance) {&#13;
						return rateInputObj.distance;&#13;
					} else {&#13;
						return 9999999;&#13;
					}&#13;
				}&#13;
				distval = parseFloat(dimObj.distanceMatrix[origStop+'-'+destStop]);&#13;
				distance = distance + parseFloat(dimObj.distanceMatrix[origStop+'-'+destStop]);&#13;
			}&#13;
		}&#13;
		return distance;&#13;
	};&#13;
&#13;
	this.evaluateRateBands = function(totalDim, rateAmount, ConvRate) {&#13;
		totalBandAmt = 0.0;&#13;
		if (rateInputObj.rateBands &amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
			actualCost = 0.0;&#13;
			for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
				found = false;&#13;
				if ((totalDim &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
						|| (totalDim &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; totalDim &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
					found = true;					&#13;
				} else {&#13;
					if (i != 0 &amp;&amp; totalDim &gt; rateInputObj.rateBands[i-1].upperbreak &amp;&amp; totalDim &lt; rateInputObj.rateBands[i].lowerbreak) {&#13;
						found = true;				&#13;
					}&#13;
				}&#13;
				if (found) {&#13;
					totalBandAmt = (rateInputObj.baseRate.basis === '/FLAT') ? rateInputObj.rateBands[i].amount&#13;
							: (rateInputObj.rateBands[i].amount * totalDim * ConvRate);&#13;
					actualCost = rateInputObj.rateBands[i].actualCost;&#13;
					break;&#13;
				}&#13;
			}&#13;
			if (totalBandAmt == 0 &amp;&amp; rateInputObj.baseRate) {&#13;
				totalBandAmt = rateInputObj.baseRate.basis === '/kg' ? (rateInputObj.baseRate.amount&#13;
						* totalDim * ConvRate)&#13;
						: rateInputObj.baseRate.amount;&#13;
				actualCost = rateInputObj.baseRate.amount;&#13;
			}&#13;
			rateInputObj.baseRate.actualCost = actualCost;&#13;
		} else {&#13;
			totalBandAmt = (rateInputObj.baseRate.basis === '/FLAT') ? rateAmount&#13;
					: rateAmount * totalDim * ConvRate;&#13;
		}&#13;
		return parseFloat(totalBandAmt);&#13;
	};&#13;
&#13;
	this.evaluateAccessorials = function(dimObj) {&#13;
		if (rateInputObj.accessorials) {&#13;
			for (var i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				if (rateInputObj.accessorials[i]) {&#13;
					accObj = rateInputObj.accessorials[i];&#13;
					&#13;
					if(dimObj.assignmentStart){&#13;
						if(accObj.expiryDate &lt; dimObj.assignmentStart || accObj.effectiveDate &gt; dimObj.assignmentStart){&#13;
							continue;&#13;
						}&#13;
					}&#13;
					quantity = 0;&#13;
					totalAmt = 0;&#13;
					if (accObj.basis === '/container') {&#13;
						if (rateInputObj.baseRate.equipmentType&#13;
								&amp;&amp; dimObj.dims[rateInputObj.baseRate.equipmentType]) {&#13;
							totalAmt = accObj.amount&#13;
									* dimObj.dims[rateInputObj.baseRate.equipmentType];&#13;
							quantity =  dimObj.dims[rateInputObj.baseRate.equipmentType];&#13;
						} else {&#13;
							rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
							continue;&#13;
						}&#13;
					}&#13;
&#13;
					if (accObj.basis === '%') {&#13;
						netfreightcostelems = rateInputObj.netfreightcostelems;&#13;
						if (netfreightcostelems&#13;
								&amp;&amp; netfreightcostelems.length &gt; 0) {&#13;
							totalSurchargeAmount = 0;&#13;
							for (var j = 0; j &lt; netfreightcostelems.length; j++) {&#13;
								netFreightSurcharge = netfreightcostelems[j];&#13;
								surchargeAmount = this.getSurchargeAmount(&#13;
										dimObj, netFreightSurcharge);&#13;
								totalSurchargeAmount = totalSurchargeAmount&#13;
										+ surchargeAmount;&#13;
							}&#13;
&#13;
							baseRate = rateInputObj.baseRate.total;&#13;
							totalAmt = ((baseRate + totalSurchargeAmount) * accObj.amount) / 100;&#13;
						} else {&#13;
							baseRate = rateInputObj.baseRate.total;&#13;
							totalAmt = (baseRate * accObj.amount) / 100;&#13;
						}&#13;
					}&#13;
&#13;
					if (accObj.basis === '/delivery'&#13;
							|| accObj.basis === '/entry'&#13;
							|| accObj.basis === '/shipment') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
&#13;
					if (accObj.basis === '/package'&#13;
							|| accObj.basis === '/pallet'&#13;
							|| accObj.basis === '/unit'&#13;
							|| accObj.basis === '/carton'&#13;
							|| accObj.basis === '/LNM'&#13;
							|| accObj.basis === '/SQM'&#13;
							|| accObj.basis === '/MSF'&#13;
							|| accObj.basis === '/MBF'&#13;
							|| accObj.basis === '/LDM') {&#13;
						if (dimObj.dims.genericQty&#13;
								&amp;&amp; dimObj.dims.genericQtyUnit&#13;
								&amp;&amp; (dimObj.dims.genericQtyUnit === accObj.basis)) {&#13;
							totalAmt = accObj.amount * dimObj.dims.genericQty;&#13;
							quantity = dimObj.dims.genericQty;&#13;
						} else if (dimObj.dims[accObj.basis]) {&#13;
							totalAmt = accObj.amount&#13;
									* dimObj.dims[accObj.basis];&#13;
						}&#13;
					}&#13;
&#13;
					if (dimObj.dims.wtInKG &amp;&amp; accObj.wtConvRate) {&#13;
						weight = dimObj.dims.wtInKG;&#13;
&#13;
						// GTN-25018 : Chargeable Weight scenario.&#13;
						if (accObj.calculatedWeightBasis&#13;
								&amp;&amp; accObj.calculatedWeightBasis === 'Chargeable Weight') {&#13;
							dimFactor = rateInputObj.dimFactor;&#13;
							dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
							volumetricWeight = 0.0;&#13;
							if (dimFactor &gt; 0 &amp;&amp; dimFactorConv&#13;
									&amp;&amp; dimObj.dims.volInCBM) {&#13;
								if (dimFactorConv === 'cm/kg') {&#13;
									volumetricWeight = (dimObj.dims.volInCBM * 1000000)&#13;
											/ dimFactor;&#13;
								} else if (dimFactorConv === 'in/lb') {&#13;
									volumetricWeight = (dimObj.dims.volInCBM * 61024)&#13;
											/ dimFactor;&#13;
									volumetricWeight = volumetricWeight * 0.45359237;&#13;
								}&#13;
							}&#13;
							weight = (weight * accObj.wtConvRate) &gt; (volumetricWeight * accObj.wtConvRate) ? weight&#13;
									: volumetricWeight;&#13;
						}&#13;
&#13;
						if (accObj.minWeight) {&#13;
							weight = weight &lt; accObj.minWeight ? accObj.minWeight&#13;
									: weight;&#13;
						}&#13;
						totalAmt = accObj.amount * weight * accObj.wtConvRate;&#13;
						quantity = weight * accObj.wtConvRate;&#13;
					}&#13;
					if (dimObj.dims.volInCBM &amp;&amp; accObj.volConvRate) {&#13;
						volume = dimObj.dims.volInCBM;&#13;
						if (accObj.minVolume) {&#13;
							volume = volume &lt; accObj.minVolume ? accObj.minVolume&#13;
									: volume;&#13;
						}&#13;
						totalAmt = accObj.amount * volume * accObj.volConvRate;&#13;
						quantity = volume * accObj.volConvRate;&#13;
					}&#13;
&#13;
					if ((dimObj.dims.dstInMile || (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1))&#13;
							&amp;&amp; accObj.dstConvRate) {&#13;
						distance = 0.0;&#13;
						if (dimObj.dims.dstInMile) {&#13;
							distance = dimObj.dims.dstInMile;&#13;
						} else {&#13;
							distance = this.getEffectiveDistance(dimObj);&#13;
						}&#13;
						totalAmt = accObj.amount * distance&#13;
								* accObj.dstConvRate;&#13;
						quantity = distance * accObj.dstConvRate;&#13;
					}&#13;
&#13;
					if (accObj.basis == '/FLAT') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
					&#13;
					if (accObj.basis == 'lps') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
					&#13;
					if (accObj.amount &amp;&amp; accObj.basis == '/WM') {&#13;
						weight = dimObj.dims.wtInKG;&#13;
						volume = dimObj.dims.volInCBM;&#13;
						wmUnit = 0;&#13;
						if (weight) {&#13;
							wmUnit = weight * accObj.wtConvRate;&#13;
						}&#13;
						if (volume) {&#13;
							wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
						}&#13;
						totalAmt = accObj.amount * wmUnit;&#13;
						quantity = wmUnit;&#13;
					}&#13;
&#13;
					if (rateInputObj.baseRate.basis == accObj.basis&#13;
							&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
						totalAmt = accObj.amount;&#13;
						accObj.supportedBasis = true;&#13;
					} else if (rateInputObj.baseRate.basis != accObj.basis&#13;
							&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
						totalAmt = 0;&#13;
					}&#13;
&#13;
					if (accObj.minAmount) {&#13;
						rateInputObj.accessorials[i].appliedMin = totalAmt &lt; accObj.minAmount ? accObj.minAmount : 0;&#13;
						totalAmt = totalAmt &lt; accObj.minAmount ? accObj.minAmount&#13;
								: totalAmt;&#13;
					}&#13;
					if (accObj.maxAmount) {&#13;
						rateInputObj.accessorials[i].appliedMax = totalAmt &gt; accObj.maxAmount ? accObj.maxAmount : 0;&#13;
						totalAmt = totalAmt &gt; accObj.maxAmount ? accObj.maxAmount&#13;
								: totalAmt;&#13;
					}&#13;
&#13;
					if (!dimObj.dims.isHazMat &amp;&amp; accObj.isHazMat) {&#13;
						totalAmt = 0;&#13;
					}&#13;
&#13;
					rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
					if (accObj.basis == '/stop') {&#13;
						rateInputObj.stopOffTotal = parseFloat(totalAmt);&#13;
						if(totalAmt &amp;&amp; totalAmt &gt;0) {&#13;
							rateInputObj.accessorials[i].quantity = 1;&#13;
						}&#13;
					} else{&#13;
						rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
						if(totalAmt &amp;&amp; quantity) {&#13;
							rateInputObj.accessorials[i].quantity = quantity;&#13;
						}&#13;
					}&#13;
				}&#13;
			}&#13;
		}&#13;
	};&#13;
&#13;
	this.getSurchargeAmount = function(dimObj, surcharge) {&#13;
		surchargeAmount = 0;&#13;
		inputObj = rateInputObj.baseRate;&#13;
		quantity = 0;&#13;
		if (surcharge.basis === '/container') {&#13;
			if (inputObj.equipmentType &amp;&amp; dimObj.dims[inputObj.equipmentType]) {&#13;
				surchargeAmount = surcharge.amount&#13;
						* dimObj.dims[inputObj.equipmentType];&#13;
				quantity = dimObj.dims[inputObj.equipmentType];&#13;
			} else {&#13;
				quantity = 1;&#13;
				return surchargeAmount;&#13;
			}&#13;
		}&#13;
&#13;
		if (surcharge.basis === '/delivery' || surcharge.basis === '/entry'&#13;
				|| surcharge.basis === '/shipment') {&#13;
			surchargeAmount = surcharge.amount;&#13;
			quantity = 1;&#13;
		}&#13;
&#13;
		if (surcharge.basis === '/package' || surcharge.basis === '/pallet'&#13;
				|| surcharge.basis === '/unit' || surcharge.basis === '/carton'&#13;
				|| surcharge.basis === '/LNM' || surcharge.basis === '/SQM'&#13;
				|| surcharge.basis === '/MSF' || surcharge.basis === '/MBF'&#13;
				|| accObj.basis === '/LDM') {&#13;
			if (dimObj.dims.genericQty &amp;&amp; dimObj.dims.genericQtyUnit&#13;
					&amp;&amp; (dimObj.dims.genericQtyUnit === surcharge.basis)) {&#13;
				surchargeAmount = surcharge.amount * dimObj.dims.genericQty;&#13;
				quantity = dimObj.dims.genericQty;&#13;
			} else if (dimObj.dims[surcharge.basis]) {&#13;
				surchargeAmount = surcharge.amount&#13;
						* dimObj.dims[surcharge.basis];&#13;
				quantity = dimObj.dims[surcharge.basis];&#13;
			}&#13;
		}&#13;
&#13;
		if (surcharge.amount &amp;&amp; surcharge.basis == '/FLAT') {&#13;
			surchargeAmount = surcharge.amount;&#13;
			quantity = 1;&#13;
		}&#13;
&#13;
		if (dimObj.dims.wtInKG &amp;&amp; surcharge.wtConvRate) {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			// GTN-25018 : Chargeable Weight scenario.&#13;
			if (surcharge.calculatedWeightBasis&#13;
					&amp;&amp; surcharge.calculatedWeightBasis === 'Chargeable Weight') {&#13;
				dimFactor = rateInputObj.dimFactor;&#13;
				dimFactorConv = rateInputObj.dimFactorConv;&#13;
				volumetricWeight = 0.0;&#13;
				if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
					if (dimFactorConv === 'cm/kg') {&#13;
						volumetricWeight = (dimObj.dims.volInCBM * 1000000)&#13;
								/ dimFactor;&#13;
					} else if (dimFactorConv === 'in/lb') {&#13;
						volumetricWeight = (dimObj.dims.volInCBM * 61024)&#13;
								/ dimFactor;&#13;
						volumetricWeight = volumetricWeight * 0.45359237;&#13;
					}&#13;
				}&#13;
				weight = (weight * surcharge.wtConvRate) &gt; (volumetricWeight * surcharge.wtConvRate) ? weight&#13;
						: volumetricWeight;&#13;
			}&#13;
			if (surcharge.minWeight) {&#13;
				surcharge.appliedWeight = weight &lt; surcharge.minWeight ? surcharge.minWeight : weight;&#13;
				weight = weight &lt; surcharge.minWeight ? surcharge.minWeight&#13;
						: weight;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * weight * surcharge.wtConvRate;&#13;
			quantity = weight * surcharge.wtConvRate;&#13;
		}&#13;
&#13;
		if (dimObj.dims.volInCBM &amp;&amp; surcharge.volConvRate) {&#13;
			volume = dimObj.dims.volInCBM;&#13;
			if (surcharge.minVolume) {&#13;
				surcharge.appliedVolume = volume &lt; surcharge.minVolume ? surcharge.minVolume : volume;&#13;
				volume = volume &lt; surcharge.minVolume ? surcharge.minVolume&#13;
						: volume;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * volume * surcharge.volConvRate;&#13;
			quantity = volume * surcharge.volConvRate;&#13;
		}&#13;
&#13;
		if (surcharge.amount &amp;&amp; surcharge.basis == '/WM') {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			volume = dimObj.dims.volInCBM;&#13;
			wmUnit = 0;&#13;
			if (weight) {&#13;
				wmUnit = weight * surcharge.wtConvRate;&#13;
			}&#13;
			if (volume) {&#13;
				wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
			}&#13;
			if (surcharge.minWeight) {&#13;
				surcharge.appliedWeight = wmUnit &lt; surcharge.minWeight ? surcharge.minWeight : wmUnit;&#13;
				wmUnit = wmUnit &lt; surcharge.minWeight ? surcharge.minWeight&#13;
						: wmUnit;&#13;
				surcharge.wtConvRate = 1;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * wmUnit;&#13;
			quantity = wmUnit;&#13;
		}&#13;
&#13;
		if ((dimObj.dims.dstInMile || (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1))&#13;
				&amp;&amp; surcharge.dstConvRate) {&#13;
			if (surcharge.basis == '/stop') {&#13;
				surchargeAmount = surcharge.amount * dimObj.stopOffs.length&#13;
					* surcharge.dstConvRate;&#13;
				quantity = dimObj.stopOffs.length * surcharge.dstConvRate;&#13;
			} else {&#13;
				distance = 0.0;&#13;
				if (dimObj.dims.dstInMile) {&#13;
					distance = dimObj.dims.dstInMile;&#13;
				} else {&#13;
					distance = this.getEffectiveDistance(dimObj);&#13;
				}&#13;
				surchargeAmount = surcharge.amount * distance&#13;
						* surcharge.dstConvRate;&#13;
				quantity = distance * surcharge.dstConvRate;&#13;
			}&#13;
		}&#13;
&#13;
		if (rateInputObj.baseRate.basis == inputObj.basis&#13;
				&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
			surchargeAmount = surcharge.amount;&#13;
			surcharge.supportedBasis = true;&#13;
			rateInputObj.accessorials[i].quantity = quantity;&#13;
		} else if (rateInputObj.baseRate.basis != surcharge.basis&#13;
				&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
			surchargeAmount = 0;&#13;
		}&#13;
&#13;
		if (surcharge.minAmount) {&#13;
			surcharge.appliedMin = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount : 0;			&#13;
			surchargeAmount = surchargeAmount &lt; surcharge.minAmount ? surcharge.minAmount&#13;
					: surchargeAmount;&#13;
		}&#13;
		if (surcharge.maxAmount) {&#13;
			surcharge.appliedMax = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount : 0;&#13;
			surchargeAmount = surchargeAmount &gt; surcharge.maxAmount ? surcharge.maxAmount&#13;
					: surchargeAmount;&#13;
		}&#13;
		return surchargeAmount;&#13;
	}&#13;
&#13;
	this.evaluateStopOff = function(stopOffs) {&#13;
		stopOffAmt = 0.0;&#13;
		if (rateInputObj.stopBands &amp;&amp; stopOffs &amp;&amp; stopOffs.length &gt; 2) {&#13;
			numOfStopOffs = stopOffs.length - 2;&#13;
			remainingStopOffs = numOfStopOffs;&#13;
			previousEnd = 0;&#13;
&#13;
			for (i = 0; i &lt; rateInputObj.stopBands.length; i++) {&#13;
				start = rateInputObj.stopBands[i].start;&#13;
				end = rateInputObj.stopBands[i].stop;&#13;
				if (numOfStopOffs &gt; end) {&#13;
					stopOffAmt = stopOffAmt&#13;
							+ (rateInputObj.stopBands[i].costPerStop * (end - previousEnd));&#13;
					remainingStopOffs -= (end - previousEnd);&#13;
					previousEnd = end;&#13;
&#13;
				} else if (numOfStopOffs &gt;= start &amp;&amp; numOfStopOffs &lt;= end) {&#13;
					stopOffAmt = stopOffAmt&#13;
							+ (rateInputObj.stopBands[i].costPerStop * remainingStopOffs);&#13;
					break;&#13;
				}&#13;
			}&#13;
			rateInputObj.stopOffTotal = parseFloat(stopOffAmt);&#13;
		}&#13;
&#13;
	};&#13;
	&#13;
	this.getDistanceSplit = function(dimObj) {&#13;
		distance = 0.0;&#13;
		var distObj = [];&#13;
		var distArr = [];&#13;
		var jsonBaseRate = rateInputObj.baseRate;&#13;
		var dtmLookUPFlag = rateInputObj.dtmlookupflag;&#13;
		if(dimObj.stopOffs) {&#13;
			for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
				origStop = dimObj.stopOffs[i].stop;&#13;
				if (origStop.indexOf('__') &gt; 0) {&#13;
					origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
				}&#13;
				destStop = dimObj.stopOffs[i + 1].stop;&#13;
				if (destStop.indexOf('__') &gt; 0) {&#13;
					destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
				}&#13;
				if (origStop == destStop) {&#13;
					distance = distance + 0.01;&#13;
					distObj = {Distance:distance, OrigStop:origStop, DestStop:destStop};&#13;
					distArr.push(distObj);&#13;
					continue;&#13;
				}&#13;
				if(!dtmLookUPFlag){&#13;
					if (!distanceMatrix[origStop]&#13;
							|| !distanceMatrix[origStop][destStop]) {&#13;
						if (rateInputObj.distance) {&#13;
							return rateInputObj.distance;&#13;
						} else {&#13;
							return 9999999;&#13;
						}&#13;
					}&#13;
					distval = distanceMatrix[origStop][destStop];&#13;
					distance = distance + distanceMatrix[origStop][destStop];&#13;
				} else{&#13;
					if(!parseFloat(dimObj.distanceMatrix[origStop+'-'+destStop])){&#13;
						if (rateInputObj.distance) {&#13;
							return rateInputObj.distance;&#13;
						} else {&#13;
							return 9999999;&#13;
						}&#13;
					}&#13;
					distval = parseFloat(dimObj.distanceMatrix[origStop+'-'+destStop]);&#13;
					distance = distance + parseFloat(dimObj.distanceMatrix[origStop+'-'+destStop]);&#13;
				}&#13;
				distObj = {Distance:distval, OrigStop:origStop, DestStop:destStop};&#13;
				distArr.push(distObj);&#13;
			}&#13;
		}&#13;
		jsonBaseRate["distArr"] = distArr;&#13;
		return jsonBaseRate;&#13;
	};&#13;
	&#13;
	this.evaluateTransitTime = function(dimObj) {&#13;
		transittime = 0.0;&#13;
		var dtmLookUPFlag = rateInputObj.dtmlookupflag;&#13;
		if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {		&#13;
			if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {&#13;
				for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
					origStop = dimObj.stopOffs[i].stop;&#13;
					if (origStop.indexOf('__') &gt; 0) {&#13;
						origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
					}&#13;
					destStop = dimObj.stopOffs[i + 1].stop;&#13;
					if (destStop.indexOf('__') &gt; 0) {&#13;
						destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
					}&#13;
					if (origStop == destStop) {&#13;
						transittime = transittime + 0.01;&#13;
						continue;&#13;
					}&#13;
					if(!dtmLookUPFlag){&#13;
					if (!transitTimeMatrix[origStop]&#13;
							|| !transitTimeMatrix[origStop][destStop]) {&#13;
							transittime = parseFloat(9999999);&#13;
							break;&#13;
					}&#13;
						transittime = transittime + transitTimeMatrix[origStop][destStop];&#13;
					} else {&#13;
						if(!parseFloat(dimObj.transitTimeMatrix[origStop+'-'+destStop]) ){&#13;
							transittime = parseFloat(9999999);&#13;
							break;&#13;
						}&#13;
						transittime = transittime + parseFloat(dimObj.transitTimeMatrix[origStop+'-'+destStop]);&#13;
					}&#13;
				}&#13;
			} &#13;
		}	&#13;
		rateInputObj.baseRate.transittime = parseFloat(transittime);		&#13;
	};&#13;
};var constraints = {/*##*/locationtimeactivities:{"4090638":{},"4090637":{},"4090641":{},"4090639":{},"4085004":{},"4084102":{},"4088785":{},"4090643":{},"4090644":{},"4088784":{},"4090640":{},"1074042680":{},"4091463":{}},/*##*/locationactivities:{"4090638":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4090637":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4090641":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4090639":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4085004":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4084102":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4088785":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4090643":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4090644":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4088784":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4090640":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"1074042680":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]},"4091463":{"SENDINGACTIVITIES":[],"RECEIVINGACTIVITIES":[]}},/*##*/resources:{"9":{"max_weight":28250.0,"max_cube":28.0,"max_qty":1.0},"10":{"max_weight":28800.0,"max_cube":56.0,"max_qty":2.0},"11":{"max_cube":75.0,"max_qty":2.532,"max_weight":27700.0},"12":{"max_cube":90.0,"max_weight":30200.0,"max_qty":2.886},"13":{"max_qty":2.0},"17":{"max_qty":1.0},"18":{"max_weight":30200.0,"max_qty":2.25,"max_cube":75.0},"19":{"max_cube":75.0,"max_qty":2.532,"max_weight":27700.0},"20":{"max_weight":30200.0,"max_cube":90.0,"max_qty":2.886},"21":{"max_qty":2.0},"25":{"max_cube":28.0,"max_weight":27490.0,"max_qty":1.0},"26":{"max_cube":59.0,"max_qty":2.0,"max_weight":28600.0},"27":{"max_weight":27700.0,"max_cube":75.0,"max_qty":2.532},"34":{"max_cube":63.0,"max_weight":29700.0,"max_qty":2.25},"41":{"max_qty":1.0},"42":{"max_qty":2.0},"49":{"max_qty":1.0},"50":{"max_qty":2.0},"57":{"max_qty":1.0},"58":{"max_qty":2.0},"65":{"max_weight":27490.0,"max_cube":28.0,"max_qty":1.0},"66":{"max_qty":2.0,"max_weight":28600.0,"max_cube":59.0},"74":{"max_weight":29700.0,"max_cube":63.0,"max_qty":2.25},"83":{"max_qty":2.532},"84":{"max_weight":18100.0,"max_qty":2.886,"max_cube":85.0},"85":{"max_qty":2.65,"max_weight":20000.0,"max_cube":95.0},"137":{"max_qty":1.0},"138":{"max_qty":2.0},"146":{"max_qty":2.25},"147":{"max_qty":2.532},"153":{"max_cube":33.0},"154":{"max_cube":33.0},"256":{"max_weight":100000.0,"max_cube":1000.0},"798":{"max_weight":24000.0,"max_qty":2.0},"799":{"max_qty":2.0,"max_weight":24000.0},"2057":{"max_cube":28.0,"max_weight":28250.0,"max_qty":1.0},"2065":{"max_qty":1.0},"2066":{"max_cube":65.0,"max_qty":2.25,"max_weight":30200.0},"2073":{"max_qty":1.0,"max_weight":28250.0,"max_cube":28.0},"2074":{"max_cube":59.0,"max_weight":28600.0,"max_qty":2.0},"2082":{"max_cube":65.0,"max_qty":2.25,"max_weight":30200.0}},/*##*/locations:{4090638:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4090637:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4090641:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4090639:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4085004:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4084102:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4088785:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4090643:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4090644:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4088784:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4090640:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1074042680:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},4091463:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}}}}; evaluateConstraints = function evaluateConstraints(dimObj) {
	var resourceData = this.id.split("_");
	var resource = resourceData[1];
	if ((resource in constraints.resources)) {
		if ("max_weight" in constraints.resources[resource]
				&amp;&amp; dimObj.dims.wtInKG &gt; constraints.resources[resource].max_weight)
			return false;
		if ("max_cube" in constraints.resources[resource]
				&amp;&amp; dimObj.dims.volInCBM &gt; constraints.resources[resource].max_cube)
			return false;
	}
	return true;
};


var carrier = function(resourceInputObj){
	this.evaluateCarrierConstraint = function (dimObj){
	resource = resourceInputObj.id;
    if (!(resource in constraints.resources))
		return true;
	
	if ("maxstops" in constraints.resources[resource]
			&amp;&amp; dimObj.stopOffs.length  &gt; constraints.resources[resource].maxstops ){
		return false;
		}
	if ("max_distance" in constraints.resources[resource]
			&amp;&amp; isMaxDistanceCrossed(dimObj, resource)) {
		return false;
	}
	if ("maximum_single_hours" in constraints.resources[resource]
			&amp;&amp; isMaxDriveTimeCrossed(dimObj, resource)) {
		return false;
	}
	if ("maximum_out_of_route_miles" in constraints.resources[resource]
			&amp;&amp; isMaxOutOfRouteMile(dimObj, resource)) {
		return false;
	}
		return true;
	}
};



isMaxOutOfRouteMile = function isMaxOutOfRouteMile(dimObj, resourceid) {
	var totalDistance = 0;
	var maxOutOfRouteMile = 0;
	var dtmLookUPFlag = dimObj.dtmFromTMO;
	try {
		if(dtmLookUPFlag &gt; 0){
	    totalDistance =parseFloat(dimObj.distanceMatrix[sliceStopOffData(dimObj.stopOffs[0].stop)+'-'+sliceStopOffData(dimObj.stopOffs[dimObj.stopOffs.length - 1].stop)]);
		} else {
		totalDistance = distanceMatrix[sliceStopOffData(dimObj.stopOffs[0].stop)][sliceStopOffData(dimObj.stopOffs[dimObj.stopOffs.length - 1].stop)];
		}
	} catch (err) {
		// warn('error distanceMatrix  does not exist in  isMaxOutOfRouteMile');
	}
	;

	try {
		maxOutOfRouteMile = constraints.resources[resourceid].maximum_out_of_route_miles;

	} catch (err) {
		// warn('maxOutOfRouteMile  does not exist in  for resource' + resourceid);
		maxOutOfRouteMile = 0;
	}
	;

	var totalDriveDistance = getTotalDriveDistance(dimObj);
	
	if (constraints.resources[resourceid].maxoutofroutemilesunit == "%") {
		maxOutOfRouteMile = ((maxOutOfRouteMile / 100) * totalDistance)
				+ totalDistance;
	} else {
		maxOutOfRouteMile = maxOutOfRouteMile + totalDistance;
		
		if (!isNaN(maxOutOfRouteMile)) {
		}
	}
	if (totalDriveDistance &gt; maxOutOfRouteMile) {
		return true;
	}
	return false;
};

isMaxDistanceCrossed = function isMaxDistanceCrossed(dimObj, resourceid) {
	var totalDriveDistance = getTotalDriveDistance(dimObj);
	if (totalDriveDistance &gt; constraints.resources[resourceid].max_distance) {
		return true;
	}
	return false;
};

isMaxDriveTimeCrossed = function isMaxDriveTimeCrossed(dimObj, resourceid) {
	var totalDriveTime = getTotalDriveTime(dimObj);
	if (totalDriveTime &gt; constraints.resources[resourceid].maximum_single_hours) {
		return true;
	}
	return false;
};

getTotalDriveDistance = function getTotalDriveDistance(dimObj) {
	var totalDriveDistance = 0;
	try {
		for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);
			var distance=0;
			if(dtmLookUPFlag &gt; 0){
			      distance = (parseFloat(dimObj.distanceMatrix[stop1+'-'+stop2]));
			} else {
			      distance = distanceMatrix[stop1][stop2];
			}
			
			if (!isNaN(distance)) {
				totalDriveDistance = totalDriveDistance + (distance);
			} else {
				warn('can give wrong data,since');
				warn(' no dtm between ' + stop1 + '-' + stop2);
			}
		}
	} catch (err) {
		// warn('distanceMatrix  does not exist for ' + stop1 + '-' + stop2);
	}
	;
	return totalDriveDistance;
};

getTotalDriveTime = function getTotalDriveTime(dimObj) {
	var totalDriveTime = 0;
	var dtmLookUPFlag = dimObj.dtmFromTMO;
	try {
		for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);
			if(dtmLookUPFlag &gt; 0){
				totalDriveTime = totalDriveTime + (parseFloat(dimObj.transitTimeMatrix[stop1+'-'+stop2]));
			} else {
				totalDriveTime = totalDriveTime + (transitTimeMatrix[stop1][stop2]);
			}
		}
	} catch (err) {
		// warn('transitTimeMatrix  does not exist for ' + stop1 + '-' + stop2);
	}
	;
	return totalDriveTime;
};

sliceStopOffData = function sliceStopOffData(stopOffData) {
	var stop = stopOffData;
	try {

		if (stopOffData.indexOf('__') &gt; 0) {
			stop = stopOffData.slice(0, stopOffData.indexOf('__'));
		}
	} catch (err) {
		warn('stopOffData incorrect for ' + stopOffData);
	}
	return JSON.parse(stop);
};

getProcessingTime = function getProcessingTime(dimObj) {
    var dtmLookUPFlag = dimObj.dtmFromTMO;
	if (typeof dimObj.stopOffs[1] == 'undefined') {
		return 1000000;
	}
	trasitTime = 0;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop
					.indexOf('TRANSPORT') &gt; -1))) {
		return 99999;
	}
	var finalloadthroughput = 0;
	finalloadthroughput = getFinalLoadThroughput(dimObj);
	if (isNaN(finalloadthroughput)) {
		finalloadthroughput = 0;
	}

	var finalunloadthroughput = 0;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);
	if (isNaN(finalunloadthroughput)) {
		finalunloadthroughput = 0;
	}

	try {
	    if(dtmLookUPFlag &gt; 0){
	        trasitTime = finalloadthroughput + (parseFloat(dimObj.transitTimeMatrix[stop1+'-'+stop2]))+ finalunloadthroughput;
	    } else {
	    	trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]+ finalunloadthroughput;
	    }
		
		if (isNaN(trasitTime)) {
			 // warn('errcause no transittime for ' + stop1 + '-- ' + stop2);
			return 0;
		}
	} catch (err) {
		// warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	return (trasitTime);
};

getOceanAirProcessingTime = function getOceanAirProcessingTime(dimObj) {
	return this.transitTime;
	};

getFinalThroughput = function getFinalThroughput(dimObj) {
	var finalTroughputResult = '';

	for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length); stopIndex++) {
		var stop = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
		if (dimObj.dims.wtInKG != 0) {
			if ((stop in constraints.locations)
					&amp;&amp; ("Throughput" in constraints.locations[stop])) {
				finalTroughputResult = finalTroughputResult + stop + '--'
						+ ((constraints.locations[stop].Throughput)) + '--';
			}
		}
	}
	return finalTroughputResult;
};

getDistanceBetweenStops = function getDistanceBetweenStops(dimObj) {
	var distancebetweenstops = "";
	var dtmLookUPFlag = dimObj.dtmFromTMO;
	for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
		try {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);

			distancebetweenstops = distancebetweenstops + "#" + stop1 + "_"
					+ stop2;
			if(dtmLookUPFlag &gt; 0){
				distancebetweenstops = distancebetweenstops + "#"
					+ (parseFloat(dimObj.distanceMatrix[stop1+'-'+stop2]));
			} else {
				distancebetweenstops = distancebetweenstops + "#"
					+ distanceMatrix[stop1][stop2];
			}
		} catch (err) {
			// warn('Error cause no distancebetweenstops ' + stop1 + ' -- ' + stop2);
		}
	}
	return distancebetweenstops;
};

getFinalLoadThroughput = function getFinalLoadThroughput(dimObj) {
	var varloadthroughput = 0;
	stop1 = sliceStopOffData(dimObj.stopOffs[0].stop);
	try {
		if (stop1 in constraints.locations
				&amp;&amp; ("LOADING" in constraints.locations[stop1])) {

			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop1].LOADING["weight_time"].division_factor)
						* constraints.locations[stop1].LOADING["weight_time"].time_factor;
				varloadthroughput = varweightthrouput;
			}

			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop1].LOADING["volume_time"].division_factor)
						* constraints.locations[stop1].LOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varloadthroughput) {
					varloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop1].max_variable_time != 0) {
			if (constraints.locations[stop1].max_variable_time &lt; varloadthroughput) {
				varloadthroughput = constraints.locations[stop1].max_variable_time;
			}
		}
		return constraints.locations[stop1].fixed_time + varloadthroughput;
	} catch (err) {
		// warn('Error calculating load throughput for stop ' + stop1 + '-- '+ err.message);
		return 0;
	}
};

getFinalUnLoadThroughput = function getFinalUnLoadThroughput(dimObj) {
	var varunloadthroughput = 0;
	var fixedTime = 0 ;
	if ( dimObj.stopOffs.length == 2  &amp;&amp; dimObj.stopOffs[1] ) {
		stop2 = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
	}
	
	if(typeof stop2 == 'undefined')
		  return 0;

	try {
		if (stop2 in constraints.locations
				&amp;&amp; "UNLOADING" in constraints.locations[stop2]) {
			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop2].UNLOADING["weight_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["weight_time"].time_factor;

				varunloadthroughput = varweightthrouput;
			}
			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop2].UNLOADING["volume_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varunloadthroughput) {
					varunloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop2] &amp;&amp; constraints.locations[stop2].max_variable_time != 0) {
			if (constraints.locations[stop2].max_variable_time &lt; varunloadthroughput) {
				varunloadthroughput = constraints.locations[stop2].max_variable_time;
			}
		}
		
		if ( constraints.locations[stop2] ) {
			fixedTime = constraints.locations[stop2].fixed_time ;
		}
		
		return fixedTime + varunloadthroughput;
	} catch (err) {
		 warn('Error calculating Unload throughput for stop ' + stop2 + '-- '+ err.message);
		return 0;
	}
};

// additional activity time starts
getAdditionalSendingActivityTime = function getAdditionalSendingActivityTime(dimObj) {
	try {
		var sendingTimeFactor = 0 ;
		stop1 = JSON.parse(sliceStopOffData(dimObj.stopOffs[0].stop));
		if (constraints.locationtimeactivities[stop1]) {
			 sendingTimeFactor = constraints.locationtimeactivities[stop1].SENDING_ADDITIONAL_TIMEFACTOR;
		}
		if ( typeof sendingTimeFactor == 'undefined') {
			
			return 0 ;
		}
		return sendingTimeFactor;
	} catch (err) {
		// warn('Error calculating sending activity for stop ' + stop1 + '--' + err.message);
		return 0;
	}
};


getAdditionalReceivingActivityTime = function getAdditionalReceivingActivityTime(dimObj) {
	var receivingTimeFactor = 0 ;
	var destStop ;
	try {
			if ( dimObj.stopOffs.length == 2  &amp;&amp; dimObj.stopOffs[1] ) {
				destStop = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
			if ( constraints.locationtimeactivities[destStop] ) {
				receivingTimeFactor = constraints.locationtimeactivities[destStop].RECEIVING_ADDITIONAL_TIMEFACTOR;
				
				if (typeof receivingTimeFactor == 'undefined') {
					return 0 ;
				}
			}
			
		}
		return receivingTimeFactor;
	} catch (err) {
		// warn('Error calculating receiving activity for stop ' + destStop + '-- '+ err.message);
		return 0;
	}
};


// additional activity time ends


getOceanAirLoadingProcessingTime = function getOceanAirLoadingProcessingTime(dimObj) {
	var sendingTimeFactor = getAdditionalSendingActivityTime(dimObj) ;
	trasitTime = 0;
	var finalloadthroughput = 0;
	finalloadthroughput = getFinalLoadThroughput(dimObj);
	if (isNaN(finalloadthroughput)) {
		finalloadthroughput = 0;
	}

	try {
		trasitTime = finalloadthroughput +sendingTimeFactor;
		if (isNaN(trasitTime)) {
		 //	warn('failed');
			return 0;
		}
	} catch (err) {
	//	warn('err cause-- ' + err.message);
		return 0;
	}
	return (trasitTime);
};

getOceanAirProcessingTime = function getOceanAirProcessingTime(dimObj) {
	return this.transitTime ;
};

getOceanAirUnloadingProcessingTime = function getOceanAirUnloadingProcessingTime(dimObj) {
	var receivingTimeFactor = getAdditionalReceivingActivityTime(dimObj);
	trasitTime = 0;
	var finalunloadthroughput = 0;
	finalunloadthroughput = getFinalUnLoadThroughput1(dimObj);
	if (isNaN(finalunloadthroughput)) {
		finalunloadthroughput = 0;
	}

	try {
		trasitTime = finalunloadthroughput + receivingTimeFactor;
		
		if (isNaN(trasitTime)) {
			return 0;
		}
	} catch (err) {
		// warn('err cause-- ' + err.message);
		return 0;
	}
	return (trasitTime);
};

getFinalUnLoadThroughput1 = function getFinalUnLoadThroughput1(dimObj) {
	var varunloadthroughput = 0;
	var stop2;
	var fixedTime ;
	try {
		if ( dimObj.stopOffs.length == 2  &amp;&amp; dimObj.stopOffs[1] ) {
			stop2 = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
		}
	
	if(typeof stop2 == 'undefined')
	  return 0;
	  
		if (stop2 in constraints.locations
				&amp;&amp; "UNLOADING" in constraints.locations[stop2]) {
			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop2].UNLOADING["weight_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["weight_time"].time_factor;

				varunloadthroughput = varweightthrouput;
			}
			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop2].UNLOADING["volume_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varunloadthroughput) {
					varunloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop2] &amp;&amp; constraints.locations[stop2].max_variable_time != 0) {
			if (constraints.locations[stop2].max_variable_time &lt; varunloadthroughput) {
				varunloadthroughput = constraints.locations[stop2].max_variable_time;
			}
		}
		if ( constraints.locations[stop2] ) {
			fixedTime = constraints.locations[stop2].fixed_time;
		}
		return fixedTime + varunloadthroughput;
	} catch (err) {
	   warn('err calculating Unload throughput for stop ' + stop2 + '-- '+ err.message);
		return 0;
	}
};</globalScript><applyConsolidationRules ttype="STRING">No</applyConsolidationRules><requirementConsolidationLevel ttype="I32">0</requirementConsolidationLevel><resourceToAllocationMaps ttype="MAP"/></supplyChain><requirements ttype="MAP"><item><key ttype="STRING">59952862761</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59952862761</id><name ttype="STRING">59952862761</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">4256.87</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">63.750535768</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">155.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">155.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">155.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">155.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">155.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">155.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">4090638__START_REQUIREMENT</source><destination ttype="STRING">4090639__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1569196800</earliestDepartTime><earliestDeliveryTime ttype="I64">1573902000</earliestDeliveryTime><latestDepartTime ttype="I64">1572523200</latestDepartTime><latestDeliveryTime ttype="I64">1574420400</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">59952862763</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59952862763</id><name ttype="STRING">59952862763</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">5195.09</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">65.154353363</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">174.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">174.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">174.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">174.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">174.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">174.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">4090638__START_REQUIREMENT</source><destination ttype="STRING">4090641__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1571011200</earliestDepartTime><earliestDeliveryTime ttype="I64">1575716400</earliestDeliveryTime><latestDepartTime ttype="I64">1572523200</latestDepartTime><latestDeliveryTime ttype="I64">1576234800</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">59952862715</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59952862715</id><name ttype="STRING">59952862715</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">3670.09</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">55.901880419</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">118.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">118.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">118.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">118.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">118.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">118.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">4090638__START_REQUIREMENT</source><destination ttype="STRING">4090639__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1565136000</earliestDepartTime><earliestDeliveryTime ttype="I64">1573297200</earliestDeliveryTime><latestDepartTime ttype="I64">1572523200</latestDepartTime><latestDeliveryTime ttype="I64">1573815600</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">59952768629</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59952768629</id><name ttype="STRING">59952768629</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">6726.498</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">69.30437951</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">4090638__START_REQUIREMENT</source><destination ttype="STRING">4090637__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1572220800</earliestDepartTime><earliestDeliveryTime ttype="I64">1576926000</earliestDeliveryTime><latestDepartTime ttype="I64">1573387200</latestDepartTime><latestDeliveryTime ttype="I64">1577444400</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">59952862759</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59952862759</id><name ttype="STRING">59952862759</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">4471.39</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">58.681505251</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">151.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">151.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">151.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">151.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">151.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">151.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">4090638__START_REQUIREMENT</source><destination ttype="STRING">4090641__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1565136000</earliestDepartTime><earliestDeliveryTime ttype="I64">1571486400</earliestDeliveryTime><latestDepartTime ttype="I64">1572523200</latestDepartTime><latestDeliveryTime ttype="I64">1572004800</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">59952861684</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59952861684</id><name ttype="STRING">59952861684</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">5354.5</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">63.843877</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">158.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">158.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">158.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">158.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">158.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">158.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">4090638__START_REQUIREMENT</source><destination ttype="STRING">4090641__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1569974400</earliestDepartTime><earliestDeliveryTime ttype="I64">1575111600</earliestDeliveryTime><latestDepartTime ttype="I64">1572523200</latestDepartTime><latestDeliveryTime ttype="I64">1575630000</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">59952836784</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59952836784</id><name ttype="STRING">59952836784</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">5331.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">59.953277</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">146.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">146.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">146.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">146.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">146.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">146.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">4090638__START_REQUIREMENT</source><destination ttype="STRING">4090641__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1565136000</earliestDepartTime><earliestDeliveryTime ttype="I64">1573297200</earliestDeliveryTime><latestDepartTime ttype="I64">1572523200</latestDepartTime><latestDeliveryTime ttype="I64">1573815600</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">59952766795</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59952766795</id><name ttype="STRING">59952766795</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">6726.498</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">69.30437951</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">4090638__START_REQUIREMENT</source><destination ttype="STRING">4090637__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1571616000</earliestDepartTime><earliestDeliveryTime ttype="I64">1576321200</earliestDeliveryTime><latestDepartTime ttype="I64">1572782400</latestDepartTime><latestDeliveryTime ttype="I64">1576839600</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">59952766796</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59952766796</id><name ttype="STRING">59952766796</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">6726.498</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">69.30437951</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">4090638__START_REQUIREMENT</source><destination ttype="STRING">4090637__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1572220800</earliestDepartTime><earliestDeliveryTime ttype="I64">1576926000</earliestDeliveryTime><latestDepartTime ttype="I64">1573387200</latestDepartTime><latestDeliveryTime ttype="I64">1577444400</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">59952768690</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59952768690</id><name ttype="STRING">59952768690</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">6726.498</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">69.30437951</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">176.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">4090638__START_REQUIREMENT</source><destination ttype="STRING">4090637__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1572220800</earliestDepartTime><earliestDeliveryTime ttype="I64">1576926000</earliestDeliveryTime><latestDepartTime ttype="I64">1573387200</latestDepartTime><latestDeliveryTime ttype="I64">1577444400</latestDeliveryTime><freightClass ttype="STRING">Class 50</freightClass></value></item></requirements><modelingLanguageVersion ttype="STRING">3.2</modelingLanguageVersion><resourceAllocationCheck ttype="I32">0</resourceAllocationCheck><orgid ttype="I32">72989</orgid><orgUserId ttype="I32">1074404695</orgUserId><stepsCleaned ttype="I32">0</stepsCleaned><dtmFromTMO ttype="I32">0</dtmFromTMO><dtmPriority ttype="STRING">M-P-C-R</dtmPriority></OptimizationInstance>