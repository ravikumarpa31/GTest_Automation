<OptimizationInstance struct="OptimizationInstance" ttype="STRUCT"><id ttype="STRING">MPMD_Test_2122452197</id><supplyChain struct="SupplyChain" ttype="STRUCT"><id ttype="STRING">Network</id><name ttype="STRING">supplyChainName12345</name><steps ttype="MAP"><item><key ttype="STRING">1073752373__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752373__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073752373</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073752373__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073752373_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">219958__216183__2122403745__SC______MULTI_STOP__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">219958__216183__2122403745__SC______MULTI_STOP__1003</id><narrativeDescription ttype="STRING">219958__216183__2122403745__SC______MULTI_STOP__1003__42GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073752377__END_REQUIREMENT</item><item ttype="STRING">1073752378__END_REQUIREMENT</item><item ttype="STRING">1073752376__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_10_SC_2122403754</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":15.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122403745"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073752373__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073752378__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1538377200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073750325__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750325__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073750325</narrativeDescription><type ttype="I32">3</type><resourcesAvailable ttype="SET"><item ttype="STRING">1003_901_LT_DEFAULTLANE</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">2000441__2000283__2122405365__SC______MULTI_STOP__28290</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000441__2000283__2122405365__SC______MULTI_STOP__28290</id><narrativeDescription ttype="STRING">2000441__2000283__2122405365__SC______MULTI_STOP__28290__TR53</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_85_SC_2122405913</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":28.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_85"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122405365"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1539673200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_85"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073751324__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073751324__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073751324 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073751324__END_REQUIREMENT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660688__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660688__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 660688 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">2000168__246662__2122403743__SC______MULTI_STOP__1012</item><item ttype="STRING">2000168__246662__2122403740__SC______MULTI_STOP__1012</item><item ttype="STRING">219958__216183__2122403745__SC______MULTI_STOP__1003</item><item ttype="STRING">219958__216183__2122403742__SC______MULTI_STOP__1003</item><item ttype="STRING">660688__CONSOLIDATE_REQUIREMENT_XDOC</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">205996__2000100__121698613__SC______MULTI_STOP__28290__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">205996__2000100__121698613__SC______MULTI_STOP__28290__FLAT</id><narrativeDescription ttype="STRING">205996__2000100__121698613__SC______MULTI_STOP__28290__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_9_SC_2122367025</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":6300.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"distance":44.117341,"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"121698613"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">1545638400</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1001539__1001552__2122435180__S__D__D__TRANSPORT_REQUIREMENT__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001539__1001552__2122435180__S__D__D__TRANSPORT_REQUIREMENT__1012</id><narrativeDescription ttype="STRING">Transport from 1001539__1001552__2122435180__S__D__D__TRANSPORT_REQUIREMENT__1012__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073751324__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1012_18_S_2122435178</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":1987.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"rateId":"2122435180"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":266400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1544601600</rateValidityEnd></value></item><item><key ttype="STRING">1073750323__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750323__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073750323 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073750323__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073750323__1073750325__2122379736__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073750324__1073750323__2122379734__SC______MULTI_STOP__28290</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1001539__1001552__2122387382__S__D__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001539__1001552__2122387382__S__D__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1001539__1001552__2122387382__S__D__D__TRANSPORT_REQUIREMENT__1003__22GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073751324__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_S_2122387108</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":2000.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[],"rateId":"2122387382"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":439200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1544601600</rateValidityEnd></value></item><item><key ttype="STRING">2000100__1002035__122135974__S__D__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000100__1002035__122135974__S__D__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 2000100__1002035__122135974__S__D__D__TRANSPORT_REQUIREMENT__1003__22GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">660685__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_S_2122367045</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":8.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[],"rateId":"122135974"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":352800});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1451635200</rateValidityStart><rateValidityEnd ttype="I64">1609401600</rateValidityEnd></value></item><item><key ttype="STRING">205996__2000100__121698607__SC______MULTI_STOP__28290__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">205996__2000100__121698607__SC______MULTI_STOP__28290__FLAT</id><narrativeDescription ttype="STRING">205996__2000100__121698607__SC______MULTI_STOP__28290__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_9_SC_2122367025</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":700.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"121698607"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">1545638400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">205996__2000100__121698608__SC______MULTI_STOP__28290__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">205996__2000100__121698608__SC______MULTI_STOP__28290__FLAT</id><narrativeDescription ttype="STRING">205996__2000100__121698608__SC______MULTI_STOP__28290__FLAT__42GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_10_SC_2122367025</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":800.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"121698608"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">1545638400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">2000168__246662__2122403743__SC______MULTI_STOP__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000168__246662__2122403743__SC______MULTI_STOP__1012</id><narrativeDescription ttype="STRING">2000168__246662__2122403743__SC______MULTI_STOP__1012__42GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073752377__END_REQUIREMENT</item><item ttype="STRING">1073752378__END_REQUIREMENT</item><item ttype="STRING">1073752376__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1012_10_SC_2122403752</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":60.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122403743"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073752375__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073752377__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1538377200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1012_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073750324__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750324__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073750324 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073750324__1073750323__2122379734__SC______MULTI_STOP__28290</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073750324__1073750323__2122379734__SC______MULTI_STOP__28290</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750324__1073750323__2122379734__SC______MULTI_STOP__28290</id><narrativeDescription ttype="STRING">1073750324__1073750323__2122379734__SC______MULTI_STOP__28290__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073750323__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">28290_9_SC_2122380278</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122379734"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073750324__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073750323__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">1545638400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">205996__2000100__121698616__SC______MULTI_STOP__28290__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">205996__2000100__121698616__SC______MULTI_STOP__28290__FLAT</id><narrativeDescription ttype="STRING">205996__2000100__121698616__SC______MULTI_STOP__28290__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_9_SC_2122367025</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":6100.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"distance":44.117341,"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"121698616"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">1545638400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1001539__1001552__2122387381__S__D__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001539__1001552__2122387381__S__D__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1001539__1001552__2122387381__S__D__D__TRANSPORT_REQUIREMENT__1003__22GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073751324__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_S_2122387108</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":2500.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[],"rateId":"2122387381"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":439200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1544601600</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous></value></item><item><key ttype="STRING">1073751374__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073751374__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073751374 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073751374__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073751374__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073751374__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073751374__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073751374_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1008_256_A_DEFAULTLANE</item><item ttype="STRING">1004_256_A_DEFAULTLANE</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073753423__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073753423__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073753423__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073753423__HOLD_REQUIREMENT</item><item ttype="STRING">1073753423__END_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073753423_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_0_S_DEFAULTLANE</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073752375__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752375__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073752375 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">2000168__246662__2122403743__SC______MULTI_STOP__1012</item><item ttype="STRING">2000168__246662__2122403740__SC______MULTI_STOP__1012</item><item ttype="STRING">219958__216183__2122403745__SC______MULTI_STOP__1003</item><item ttype="STRING">219958__216183__2122403742__SC______MULTI_STOP__1003</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073751323__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073751323__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073751323 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073750324__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750324__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073750324</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073750324__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073750324_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073751323__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073751323__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073751323</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073751323__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073751323_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">660685__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660685__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 660685__TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,NONE,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">660685__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_660685_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_S_2122367045</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1003289__147897__2122405366__SC______MULTI_STOP__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1003289__147897__2122405366__SC______MULTI_STOP__1012</id><narrativeDescription ttype="STRING">1003289__147897__2122405366__SC______MULTI_STOP__1012__TR53</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">1012_85_SC_2122405914</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":13.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_85"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122405366"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1539673200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1012_85"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">2000441__2000283__2122405364__SC______MULTI_STOP__28290</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000441__2000283__2122405364__SC______MULTI_STOP__28290</id><narrativeDescription ttype="STRING">2000441__2000283__2122405364__SC______MULTI_STOP__28290__TR53</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_85_SC_2122405913</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":14.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_85"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122405364"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1539673200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_85"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660684__INTERCHANGE_REQUIREMENT_XCHG</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660684__INTERCHANGE_REQUIREMENT_XCHG</id><narrativeDescription ttype="STRING">XCHG  at 660684__TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,NONE,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">7</type><nextSteps ttype="SET"><item ttype="STRING">2000100__1002035__122135974__S__D__D__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">2000100__1002035__121698632__S__CY__D__TRANSPORT_REQUIREMENT__1003</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_660684_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_S_2122367045</item></resourcesAvailable><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">2000168__246662__2122403740__SC______MULTI_STOP__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000168__246662__2122403740__SC______MULTI_STOP__1012</id><narrativeDescription ttype="STRING">2000168__246662__2122403740__SC______MULTI_STOP__1012__42GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073752377__END_REQUIREMENT</item><item ttype="STRING">1073752378__END_REQUIREMENT</item><item ttype="STRING">1073752376__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1012_10_SC_2122403752</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":60.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122403740"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073752375__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073752377__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1538377200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1012_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">205996__2000100__121698614__SC______MULTI_STOP__28290__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">205996__2000100__121698614__SC______MULTI_STOP__28290__FLAT</id><narrativeDescription ttype="STRING">205996__2000100__121698614__SC______MULTI_STOP__28290__FLAT__42GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_10_SC_2122367025</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":6600.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"distance":44.117341,"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"121698614"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">1545638400</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073746927__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746927__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073746927 TRSM,TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,NONE,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073746927__CONSOLIDATE_REQUIREMENT_XDOC</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">205996__2000100__121698615__SC______MULTI_STOP__28290__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">205996__2000100__121698615__SC______MULTI_STOP__28290__FLAT</id><narrativeDescription ttype="STRING">205996__2000100__121698615__SC______MULTI_STOP__28290__FLAT__42GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_10_SC_2122367025</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":6500.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"distance":44.117341,"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"121698615"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">1545638400</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073750323__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750323__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073750323</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1073750323__1073750325__2122379736__SMC______LTL_REQUIREMENT__1003</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_901_LT_DEFAULTLANE</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">2000100__1002035__121698632__S__CY__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000100__1002035__121698632__S__CY__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 2000100__1002035__121698632__S__CY__D__TRANSPORT_REQUIREMENT__1003__22GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">660685__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_S_2122367045</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":2000.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[],"rateId":"121698632"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":2167200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1491030000</rateValidityStart><rateValidityEnd ttype="I64">1546243200</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous></value></item><item><key ttype="STRING">1073752376__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752376__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 1073752376 </narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073752376_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073746927__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746927__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073746927__TRSM,TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,NONE,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1001539__1001552__2122435181__S__D__D__TRANSPORT_REQUIREMENT__1012</item><item ttype="STRING">1001539__1001552__2122435180__S__D__D__TRANSPORT_REQUIREMENT__1012</item><item ttype="STRING">1001539__1001552__2122435182__S__D__D__TRANSPORT_REQUIREMENT__28290</item><item ttype="STRING">1001539__1001552__2122435183__S__D__D__TRANSPORT_REQUIREMENT__28290</item><item ttype="STRING">1001539__1001552__2122387381__S__D__D__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">1001539__1001552__2122387382__S__D__D__TRANSPORT_REQUIREMENT__1003</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073746927_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_S_2122387108</item><item ttype="STRING">28290_19_S_2122435179</item><item ttype="STRING">1012_18_S_2122435178</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660684__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660684__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 660684 TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,NONE,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">660684__INTERCHANGE_REQUIREMENT_XCHG</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_S_2122367045</item></resourcesAvailable><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073750323__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750323__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073750323__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073750323__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073750323_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073751373__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073751373__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073751373 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073751373__CONSOLIDATE_REQUIREMENT_XDOC</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073752375__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752375__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073752375</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073752375__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073752375_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">5020518__5110512__2122391438__A__A__A__TRANSPORT_REQUIREMENT__1008</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">5020518__5110512__2122391438__A__A__A__TRANSPORT_REQUIREMENT__1008</id><narrativeDescription ttype="STRING">Transport from 5020518__5110512__2122391438__A__A__A__TRANSPORT_REQUIREMENT__1008__00A0</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073751374__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1008_256_A_DEFAULTLANE</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":3.0,"wtConvRate":1.0,"includeInNetFreight":null,"basis":"\/kg","isHazMat":null,"distArr":""},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122391438"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":21600});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1577260800</rateValidityEnd></value></item><item><key ttype="STRING">1003289__147897__2122405368__SC______MULTI_STOP__28290</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1003289__147897__2122405368__SC______MULTI_STOP__28290</id><narrativeDescription ttype="STRING">1003289__147897__2122405368__SC______MULTI_STOP__28290__TR48</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_84_SC_2122405915</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":16.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_84"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122405368"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1539673200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_84"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">71846__1001272__2122391439__A__D__D__TRANSPORT_REQUIREMENT__1004</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">71846__1001272__2122391439__A__D__D__TRANSPORT_REQUIREMENT__1004</id><narrativeDescription ttype="STRING">Transport from 71846__1001272__2122391439__A__D__D__TRANSPORT_REQUIREMENT__1004__00A0</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073751374__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1004_256_A_DEFAULTLANE</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":1.0,"baseRate":{"amount":1.0,"wtConvRate":1.0,"includeInNetFreight":null,"basis":"\/kg","isHazMat":null,"distArr":""},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122391439"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":36000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1577260800</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous></value></item><item><key ttype="STRING">2000441__2000283__2122405363__SC______MULTI_STOP__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000441__2000283__2122405363__SC______MULTI_STOP__1012</id><narrativeDescription ttype="STRING">2000441__2000283__2122405363__SC______MULTI_STOP__1012__TR48</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">1012_84_SC_2122405912</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":30.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_84"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122405363"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1539673200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1012_84"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660685__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660685__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 660685 TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,NONE,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">4</type><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">120430__1002067__2122391435__SC______MULTI_STOP__28290</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">120430__1002067__2122391435__SC______MULTI_STOP__28290</id><narrativeDescription ttype="STRING">120430__1002067__2122391435__SC______MULTI_STOP__28290__42GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_10_SC_2122391557</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":20.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122391435"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1570690800</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1001539__1001552__2122435181__S__D__D__TRANSPORT_REQUIREMENT__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001539__1001552__2122435181__S__D__D__TRANSPORT_REQUIREMENT__1012</id><narrativeDescription ttype="STRING">Transport from 1001539__1001552__2122435181__S__D__D__TRANSPORT_REQUIREMENT__1012__45GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073751324__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1012_18_S_2122435178</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":1986.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"rateId":"2122435181"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":266400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1544601600</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous></value></item><item><key ttype="STRING">660688__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660688__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 660688</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">660688__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_660688_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073752377__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752377__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 1073752377 </narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073752377_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1003289__147897__2122405367__SC______MULTI_STOP__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1003289__147897__2122405367__SC______MULTI_STOP__1012</id><narrativeDescription ttype="STRING">1003289__147897__2122405367__SC______MULTI_STOP__1012__TR53</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">1012_85_SC_2122405914</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":26.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_85"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122405367"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1539673200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1012_85"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073752424__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752424__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073752424 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">2000168__246662__2122403743__SC______MULTI_STOP__1012</item><item ttype="STRING">2000168__246662__2122403740__SC______MULTI_STOP__1012</item><item ttype="STRING">219958__216183__2122403745__SC______MULTI_STOP__1003</item><item ttype="STRING">219958__216183__2122403742__SC______MULTI_STOP__1003</item><item ttype="STRING">1073752424__CONSOLIDATE_REQUIREMENT_XDOC</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1001539__1001552__2122435183__S__D__D__TRANSPORT_REQUIREMENT__28290</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001539__1001552__2122435183__S__D__D__TRANSPORT_REQUIREMENT__28290</id><narrativeDescription ttype="STRING">Transport from 1001539__1001552__2122435183__S__D__D__TRANSPORT_REQUIREMENT__28290__L5GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073751324__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">28290_19_S_2122435179</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":1998.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_19"},"netfreightcostelems":[],"accessorials":[],"rateId":"2122435183"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":266400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1544601600</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous></value></item><item><key ttype="STRING">660688__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660688__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 660688__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">205996__138201__2122426347__S__D__D__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">205996__138201__2122426348__S__D__D__TRANSPORT_REQUIREMENT__1003</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_660688_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_0_S_DEFAULTLANE</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073751324__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073751324__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073751324__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073751324__HOLD_REQUIREMENT</item><item ttype="STRING">1073751324__END_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073751324_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_S_2122387108</item><item ttype="STRING">28290_19_S_2122435179</item><item ttype="STRING">1012_18_S_2122435178</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">205996__2000100__121698605__SC______MULTI_STOP__28290__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">205996__2000100__121698605__SC______MULTI_STOP__28290__FLAT</id><narrativeDescription ttype="STRING">205996__2000100__121698605__SC______MULTI_STOP__28290__FLAT__22GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_9_SC_2122367025</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":900.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"121698605"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">1545638400</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073752374__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752374__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073752374</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073752374__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073752374_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">205996__138201__2122426347__S__D__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">205996__138201__2122426347__S__D__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 205996__138201__2122426347__S__D__D__TRANSPORT_REQUIREMENT__1003__NONE</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073753423__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_0_S_DEFAULTLANE</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minAmount":340.0,"amount":122.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":"","equipmentType":"_0"},"netfreightcostelems":[],"accessorials":[{"amount":2.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""}],"rateId":"2122426347"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":1303200});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1451635200</rateValidityStart><rateValidityEnd ttype="I64">1609401600</rateValidityEnd></value></item><item><key ttype="STRING">120430__1002067__2122391434__SC______MULTI_STOP__28290</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">120430__1002067__2122391434__SC______MULTI_STOP__28290</id><narrativeDescription ttype="STRING">120430__1002067__2122391434__SC______MULTI_STOP__28290__42GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_10_SC_2122391557</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":15.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122391434"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1570690800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073750323__1073750325__2122379736__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750323__1073750325__2122379736__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073750323__1073750325__2122379736__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073750323__HOLD_REQUIREMENT</item><item ttype="STRING">1073750325__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_901_LT_DEFAULTLANE</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":184.8,"wtConvRate":0.0220462,"minimumcharge":189.59,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":28.97,"discountpercentage":15.0,"lowerbreak":0,"actualCost":28.97},{"upperbreak":999,"unit":"CWT","amount":28.97,"discountpercentage":20.0,"lowerbreak":500,"actualCost":28.97},{"upperbreak":1999,"unit":"CWT","amount":28.97,"discountpercentage":25.0,"lowerbreak":1000,"actualCost":28.97},{"upperbreak":4999,"unit":"CWT","amount":28.97,"discountpercentage":30.0,"lowerbreak":2000,"actualCost":28.97},{"upperbreak":9999,"unit":"CWT","amount":28.97,"discountpercentage":35.0,"lowerbreak":5000,"actualCost":28.97},{"upperbreak":19999,"unit":"CWT","amount":28.97,"discountpercentage":40.0,"lowerbreak":10000,"actualCost":28.97},{"upperbreak":29999,"unit":"CWT","amount":28.97,"discountpercentage":45.0,"lowerbreak":20000,"actualCost":28.97},{"upperbreak":39999,"unit":"CWT","amount":28.97,"discountpercentage":50.0,"lowerbreak":30000,"actualCost":28.97},{"upperbreak":999999999,"unit":"CWT","amount":28.97,"discountpercentage":55.0,"lowerbreak":40000,"actualCost":28.97}],"accessorials":[],"rateId":"2122379736"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":137280});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073750323__HOLD_REQUIREMENT</item></origins><rateValidityStart ttype="I64">1514808000</rateValidityStart><rateValidityEnd ttype="I64">1544616000</rateValidityEnd><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">1073753423__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073753423__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073753423 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073753423__END_REQUIREMENT</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073753423__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073753423__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 1073753423 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073753423_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">2000283__1003289__2122405379__S__P__P__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000283__1003289__2122405379__S__P__P__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 2000283__1003289__2122405379__S__P__P__TRANSPORT_REQUIREMENT__1003__42GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073752425__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_10_S_2122405910</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":2500.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"rateId":"2122405379"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":612000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1544601600</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous></value></item><item><key ttype="STRING">1073751324__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073751324__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 1073751324 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073751324_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073752425__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752425__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073752425__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073752425__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073752425_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_10_S_2122405910</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073750326__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750326__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073750326</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1073750326__1073750324__2122379737__SMC______LTL_REQUIREMENT__1003</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_901_LT_DEFAULTLANE</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">1073746927__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073746927__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073746927</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073746927__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073746927_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073751323__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073751323__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073751323__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1001539__1001552__2122435181__S__D__D__TRANSPORT_REQUIREMENT__1012</item><item ttype="STRING">1001539__1001552__2122435180__S__D__D__TRANSPORT_REQUIREMENT__1012</item><item ttype="STRING">1001539__1001552__2122435182__S__D__D__TRANSPORT_REQUIREMENT__28290</item><item ttype="STRING">1001539__1001552__2122435183__S__D__D__TRANSPORT_REQUIREMENT__28290</item><item ttype="STRING">1001539__1001552__2122387381__S__D__D__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">1001539__1001552__2122387382__S__D__D__TRANSPORT_REQUIREMENT__1003</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073751323_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_9_S_2122387108</item><item ttype="STRING">28290_19_S_2122435179</item><item ttype="STRING">1012_18_S_2122435178</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073752373__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752373__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073752373 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">2000168__246662__2122403743__SC______MULTI_STOP__1012</item><item ttype="STRING">2000168__246662__2122403740__SC______MULTI_STOP__1012</item><item ttype="STRING">219958__216183__2122403745__SC______MULTI_STOP__1003</item><item ttype="STRING">219958__216183__2122403742__SC______MULTI_STOP__1003</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1003289__147897__2122405369__SC______MULTI_STOP__28290</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1003289__147897__2122405369__SC______MULTI_STOP__28290</id><narrativeDescription ttype="STRING">1003289__147897__2122405369__SC______MULTI_STOP__28290__TR48</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_84_SC_2122405915</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":15.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_84"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122405369"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1539673200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_84"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1001539__1001552__2122435182__S__D__D__TRANSPORT_REQUIREMENT__28290</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1001539__1001552__2122435182__S__D__D__TRANSPORT_REQUIREMENT__28290</id><narrativeDescription ttype="STRING">Transport from 1001539__1001552__2122435182__S__D__D__TRANSPORT_REQUIREMENT__28290__L5GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073751324__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">28290_19_S_2122435179</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":1999.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_19"},"netfreightcostelems":[],"accessorials":[],"rateId":"2122435182"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":266400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1544601600</rateValidityEnd></value></item><item><key ttype="STRING">1073750324__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750324__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073750324__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073750324_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">2000441__2000283__2122405362__SC______MULTI_STOP__1012</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000441__2000283__2122405362__SC______MULTI_STOP__1012</id><narrativeDescription ttype="STRING">2000441__2000283__2122405362__SC______MULTI_STOP__1012__TR48</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">1012_84_SC_2122405912</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":15.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_84"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122405362"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1539673200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1012_84"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073752374__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752374__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073752374 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">2000168__246662__2122403743__SC______MULTI_STOP__1012</item><item ttype="STRING">2000168__246662__2122403740__SC______MULTI_STOP__1012</item><item ttype="STRING">219958__216183__2122403745__SC______MULTI_STOP__1003</item><item ttype="STRING">219958__216183__2122403742__SC______MULTI_STOP__1003</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">205996__2000100__121698606__SC______MULTI_STOP__28290__FLAT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">205996__2000100__121698606__SC______MULTI_STOP__28290__FLAT</id><narrativeDescription ttype="STRING">205996__2000100__121698606__SC______MULTI_STOP__28290__FLAT__42GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">28290_10_SC_2122367025</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":1000.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"121698606"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">1546243200</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"28290_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073750326__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750326__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073750326 1003_901_LT_DEFAULTLANE</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073750326__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073750324__1073750323__2122379734__SC______MULTI_STOP__28290</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">2000283__1003289__2122405378__S__P__P__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000283__1003289__2122405378__S__P__P__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 2000283__1003289__2122405378__S__P__P__TRANSPORT_REQUIREMENT__1003__42GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073752425__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_10_S_2122405910</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":2000.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"rateId":"2122405378"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":612000});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1539154800</rateValidityStart><rateValidityEnd ttype="I64">1544601600</rateValidityEnd></value></item><item><key ttype="STRING">1073750324__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750324__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073750324</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073750324__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_901_LT_DEFAULTLANE</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">1073750326__1073750324__2122379737__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073750326__1073750324__2122379737__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073750326__1073750324__2122379737__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073750324__HOLD_REQUIREMENT</item><item ttype="STRING">1073750324__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_901_LT_DEFAULTLANE</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":179.2,"wtConvRate":0.0220462,"minimumcharge":177.65,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":9.54,"discountpercentage":45.0,"lowerbreak":0,"actualCost":9.54},{"upperbreak":999,"unit":"CWT","amount":9.54,"discountpercentage":50.0,"lowerbreak":500,"actualCost":9.54},{"upperbreak":1999,"unit":"CWT","amount":9.54,"discountpercentage":55.0,"lowerbreak":1000,"actualCost":9.54},{"upperbreak":4999,"unit":"CWT","amount":9.54,"discountpercentage":60.0,"lowerbreak":2000,"actualCost":9.54},{"upperbreak":9999,"unit":"CWT","amount":9.54,"discountpercentage":65.0,"lowerbreak":5000,"actualCost":9.54},{"upperbreak":19999,"unit":"CWT","amount":9.54,"discountpercentage":70.0,"lowerbreak":10000,"actualCost":9.54},{"upperbreak":29999,"unit":"CWT","amount":9.54,"discountpercentage":75.0,"lowerbreak":20000,"actualCost":9.54},{"upperbreak":39999,"unit":"CWT","amount":9.54,"discountpercentage":80.0,"lowerbreak":30000,"actualCost":9.54},{"upperbreak":999999999,"unit":"CWT","amount":9.54,"discountpercentage":85.0,"lowerbreak":40000,"actualCost":9.54}],"accessorials":[],"rateId":"2122379737"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":133920});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><destinations ttype="SET"><item ttype="STRING">1073750324__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1514808000</rateValidityStart><rateValidityEnd ttype="I64">1544616000</rateValidityEnd><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">1073752425__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752425__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073752425 42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073752424__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752424__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073752424__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">2000283__1003289__2122405379__S__P__P__TRANSPORT_REQUIREMENT__1003</item><item ttype="STRING">2000283__1003289__2122405378__S__P__P__TRANSPORT_REQUIREMENT__1003</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073752424_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_10_S_2122405910</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">219958__216183__2122403742__SC______MULTI_STOP__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">219958__216183__2122403742__SC______MULTI_STOP__1003</id><narrativeDescription ttype="STRING">219958__216183__2122403742__SC______MULTI_STOP__1003__42GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073752377__END_REQUIREMENT</item><item ttype="STRING">1073752378__END_REQUIREMENT</item><item ttype="STRING">1073752376__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_10_SC_2122403754</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":15.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122403742"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073752373__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073752378__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1538377200</rateValidityStart><rateValidityEnd ttype="I64">1546156800</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073751373__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073751373__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073751373__42UT,42GH,ROOS,22UT,M5GP,22RT,42RT,TR45,00A0,45RT,NONE,42RN,49PF,45RN,TR48,22TD,L5GH,29PF,22RN,P5GP,P2GP,L5GP,45GP,22GH,42TD,00B0,LCOS,45GH,25GP,BBOS,TR53,22GP,42GP,TRSM</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">5020518__5110512__2122391438__A__A__A__TRANSPORT_REQUIREMENT__1008</item><item ttype="STRING">71846__1001272__2122391439__A__D__D__TRANSPORT_REQUIREMENT__1004</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073751373_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1008_256_A_DEFAULTLANE</item><item ttype="STRING">1004_256_A_DEFAULTLANE</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">205996__138201__2122426348__S__D__D__TRANSPORT_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">205996__138201__2122426348__S__D__D__TRANSPORT_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 205996__138201__2122426348__S__D__D__TRANSPORT_REQUIREMENT__1003__NONE</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073753423__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1003_0_S_DEFAULTLANE</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minAmount":340.0,"amount":123.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":"","equipmentType":"_0"},"netfreightcostelems":[],"accessorials":[{"amount":2.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""}],"rateId":"2122426348"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":1562400});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1491030000</rateValidityStart><rateValidityEnd ttype="I64">1546243200</rateValidityEnd><isHazardous ttype="STRING">Yes</isHazardous></value></item><item><key ttype="STRING">1073752378__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073752378__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 1073752378 </narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073752378_Operating_hour</item></operatingHours></value></item></steps><operatingTimes ttype="MAP"><item><key ttype="STRING">RECEIVING_1073751373_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073751373_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073751374_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073751374_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073751324_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073751324_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073752375_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073752375_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_660685_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_660685_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_660688_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_660688_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_660688_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_660688_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073751323_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073751323_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073752378_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073752378_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073752425_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073752425_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">16:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">15:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073752373_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073752373_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073746927_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073746927_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073751324_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073751324_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_660684_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_660684_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073753423_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073753423_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073746927_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073746927_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073752377_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073752377_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073750324_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073750324_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073750324_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073750324_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073752424_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073752424_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">08:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">07:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073750323_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073750323_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073753423_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073753423_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">21:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">20:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073752376_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073752376_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073752374_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073752374_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073751323_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073751323_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">18:30:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">18:29:59</endTime></weekDayHours></item></openTimeRange></value></item></operatingTimes><unitDimensions ttype="MAP"><item><key ttype="STRING">LINEARMETER</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">LINEARMETER</id><dimension ttype="I32">10</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/LNM</id><name ttype="STRING">544</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">WEIGHT</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">WEIGHT</id><dimension ttype="I32">5</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">wtInKG</id><name ttype="STRING">33</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">PACKAGE</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">PACKAGE</id><dimension ttype="I32">12</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/package</id><name ttype="STRING">155</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CUSTOM</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CUSTOM</id><dimension ttype="I32">6</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">NumberOfTOS</id><name ttype="STRING">100001</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">VOLUME</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">VOLUME</id><dimension ttype="I32">4</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">volInCBM</id><name ttype="STRING">81</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CURRENCY</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CURRENCY</id><dimension ttype="I32">0</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">Dollar</id><name ttype="STRING">840</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">PALLET</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">PALLET</id><dimension ttype="I32">7</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/pallet</id><name ttype="STRING">169</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CARTON</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CARTON</id><dimension ttype="I32">8</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/carton</id><name ttype="STRING">159</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">SQUAREMETER</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">SQUAREMETER</id><dimension ttype="I32">11</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/SQM</id><name ttype="STRING">181</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">UNIT</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">UNIT</id><dimension ttype="I32">9</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/unit</id><name ttype="STRING">152</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item></unitDimensions><resources ttype="MAP"><item><key ttype="STRING">1003_256_A_DEFAULTLANE</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_256_A_DEFAULTLANE</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_256_A"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1003_A_DEFAULTLANE</carrierLaneWiseAllocationID><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">1012_18_S_2122435178</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1012_18_S_2122435178</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1012_18_S_2122435178"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1012_S_2122435178</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">1003_9_S_2122367045</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_9_S_2122367045</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_9_S_2122367045"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1003_S_2122367045</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">28290_10_SC_2122367025</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28290_10_SC_2122367025</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28290_10_SC_2122367025"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">28290_SC_2122367025</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">1012_84_SC_2122405912</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1012_84_SC_2122405912</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1012_84_SC_2122405912"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1012_SC_2122405912</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">28290_85_SC_2122405913</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28290_85_SC_2122405913</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28290_85_SC_2122405913"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">28290_SC_2122405913</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">1008_256_A_DEFAULTLANE</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1008_256_A_DEFAULTLANE</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1008_256_A"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1008_A_DEFAULTLANE</carrierLaneWiseAllocationID><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">28290_19_S_2122435179</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28290_19_S_2122435179</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28290_19_S_2122435179"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">28290_S_2122435179</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">1003_0_S_DEFAULTLANE</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_0_S_DEFAULTLANE</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_0_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1003_S_DEFAULTLANE</carrierLaneWiseAllocationID><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">1004_256_A_DEFAULTLANE</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1004_256_A_DEFAULTLANE</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1004_256_A"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1004_A_DEFAULTLANE</carrierLaneWiseAllocationID><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">28290_9_SC_2122367025</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28290_9_SC_2122367025</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28290_9_SC_2122367025"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">28290_SC_2122367025</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">1003_901_LT_DEFAULTLANE</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_901_LT_DEFAULTLANE</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_901_LT"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1003_LT_DEFAULTLANE</carrierLaneWiseAllocationID><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">1006_256_A_DEFAULTLANE</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1006_256_A_DEFAULTLANE</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1006_256_A"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1006_A_DEFAULTLANE</carrierLaneWiseAllocationID><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">1003_10_S_2122405910</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_10_S_2122405910</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_10_S_2122405910"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1003_S_2122405910</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">28290_84_SC_2122405915</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28290_84_SC_2122405915</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28290_84_SC_2122405915"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">28290_SC_2122405915</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">1003_9_S_2122387108</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_9_S_2122387108</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_9_S_2122387108"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1003_S_2122387108</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">1012_85_SC_2122405914</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1012_85_SC_2122405914</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1012_85_SC_2122405914"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1012_SC_2122405914</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">1012_10_SC_2122403752</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1012_10_SC_2122403752</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1012_10_SC_2122403752"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1012_SC_2122403752</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">28290_256_A_DEFAULTLANE</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28290_256_A_DEFAULTLANE</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28290_256_A"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">28290_A_DEFAULTLANE</carrierLaneWiseAllocationID><priority ttype="I32">1</priority></value></item><item><key ttype="STRING">28290_10_SC_2122391557</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28290_10_SC_2122391557</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28290_10_SC_2122391557"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">28290_SC_2122391557</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">28290_9_SC_2122380278</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28290_9_SC_2122380278</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28290_9_SC_2122380278"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">28290_SC_2122380278</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item><item><key ttype="STRING">1003_10_SC_2122403754</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_10_SC_2122403754</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_10_SC_2122403754"});evaluateConstraints.bind(resourceObj);</scriptedConstraint><carrierLaneWiseAllocationID ttype="STRING">1003_SC_2122403754</carrierLaneWiseAllocationID><priority ttype="I32">3</priority></value></item></resources><carrierLaneWiseAllocations ttype="MAP"><item><key ttype="STRING">1003_LT_DEFAULTLANE</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1003_LT_DEFAULTLANE</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_LT_DEFAULTLANE_0000000000_2147483647</timeAllocationBucketID><startTimeStamp ttype="I64">0</startTimeStamp><endTimeStamp ttype="I64">2147483647</endTimeStamp><allocationCount ttype="DOUBLE">9999999.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">28290_SC_2122391557</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">28290_SC_2122391557</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122391557_1539259200_1539777600</timeAllocationBucketID><startTimeStamp ttype="I64">1539259200</startTimeStamp><endTimeStamp ttype="I64">1539777600</endTimeStamp><allocationCount ttype="DOUBLE">0.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122391557_1539864000_1540382400</timeAllocationBucketID><startTimeStamp ttype="I64">1539864000</startTimeStamp><endTimeStamp ttype="I64">1540382400</endTimeStamp><allocationCount ttype="DOUBLE">0.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122391557_1540468800_1540987200</timeAllocationBucketID><startTimeStamp ttype="I64">1540468800</startTimeStamp><endTimeStamp ttype="I64">1540987200</endTimeStamp><allocationCount ttype="DOUBLE">0.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1006_A_DEFAULTLANE</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1006_A_DEFAULTLANE</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1006_A_DEFAULTLANE_0000000000_2147483647</timeAllocationBucketID><startTimeStamp ttype="I64">0</startTimeStamp><endTimeStamp ttype="I64">2147483647</endTimeStamp><allocationCount ttype="DOUBLE">9999999.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1012_SC_2122403752</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1012_SC_2122403752</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122403752_1539604800_1540987200</timeAllocationBucketID><startTimeStamp ttype="I64">1539604800</startTimeStamp><endTimeStamp ttype="I64">1540987200</endTimeStamp><allocationCount ttype="DOUBLE">3.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122403752_1541073600_1543579200</timeAllocationBucketID><startTimeStamp ttype="I64">1541073600</startTimeStamp><endTimeStamp ttype="I64">1543579200</endTimeStamp><allocationCount ttype="DOUBLE">4.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122403752_1543665600_1546171200</timeAllocationBucketID><startTimeStamp ttype="I64">1543665600</startTimeStamp><endTimeStamp ttype="I64">1546171200</endTimeStamp><allocationCount ttype="DOUBLE">4.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">28290_A_DEFAULTLANE</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">28290_A_DEFAULTLANE</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_A_DEFAULTLANE_0000000000_2147483647</timeAllocationBucketID><startTimeStamp ttype="I64">0</startTimeStamp><endTimeStamp ttype="I64">2147483647</endTimeStamp><allocationCount ttype="DOUBLE">9999999.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1003_SC_2122403754</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1003_SC_2122403754</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_SC_2122403754_1539604800_1540987200</timeAllocationBucketID><startTimeStamp ttype="I64">1539604800</startTimeStamp><endTimeStamp ttype="I64">1540987200</endTimeStamp><allocationCount ttype="DOUBLE">0.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_SC_2122403754_1541073600_1543579200</timeAllocationBucketID><startTimeStamp ttype="I64">1541073600</startTimeStamp><endTimeStamp ttype="I64">1543579200</endTimeStamp><allocationCount ttype="DOUBLE">4.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_SC_2122403754_1543665600_1546171200</timeAllocationBucketID><startTimeStamp ttype="I64">1543665600</startTimeStamp><endTimeStamp ttype="I64">1546171200</endTimeStamp><allocationCount ttype="DOUBLE">4.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1012_SC_2122405914</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1012_SC_2122405914</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1539777600_1540296000</timeAllocationBucketID><startTimeStamp ttype="I64">1539777600</startTimeStamp><endTimeStamp ttype="I64">1540296000</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1540382400_1540900800</timeAllocationBucketID><startTimeStamp ttype="I64">1540382400</startTimeStamp><endTimeStamp ttype="I64">1540900800</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1540987200_1541505600</timeAllocationBucketID><startTimeStamp ttype="I64">1540987200</startTimeStamp><endTimeStamp ttype="I64">1541505600</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1541592000_1542110400</timeAllocationBucketID><startTimeStamp ttype="I64">1541592000</startTimeStamp><endTimeStamp ttype="I64">1542110400</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1542196800_1542715200</timeAllocationBucketID><startTimeStamp ttype="I64">1542196800</startTimeStamp><endTimeStamp ttype="I64">1542715200</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1542801600_1543320000</timeAllocationBucketID><startTimeStamp ttype="I64">1542801600</startTimeStamp><endTimeStamp ttype="I64">1543320000</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1543406400_1543924800</timeAllocationBucketID><startTimeStamp ttype="I64">1543406400</startTimeStamp><endTimeStamp ttype="I64">1543924800</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1544011200_1544529600</timeAllocationBucketID><startTimeStamp ttype="I64">1544011200</startTimeStamp><endTimeStamp ttype="I64">1544529600</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1544616000_1545134400</timeAllocationBucketID><startTimeStamp ttype="I64">1544616000</startTimeStamp><endTimeStamp ttype="I64">1545134400</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1545220800_1545739200</timeAllocationBucketID><startTimeStamp ttype="I64">1545220800</startTimeStamp><endTimeStamp ttype="I64">1545739200</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405914_1545825600_1546171200</timeAllocationBucketID><startTimeStamp ttype="I64">1545825600</startTimeStamp><endTimeStamp ttype="I64">1546171200</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1012_SC_2122405912</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1012_SC_2122405912</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1539777600_1540123200</timeAllocationBucketID><startTimeStamp ttype="I64">1539777600</startTimeStamp><endTimeStamp ttype="I64">1540123200</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1540209600_1540728000</timeAllocationBucketID><startTimeStamp ttype="I64">1540209600</startTimeStamp><endTimeStamp ttype="I64">1540728000</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1540814400_1541332800</timeAllocationBucketID><startTimeStamp ttype="I64">1540814400</startTimeStamp><endTimeStamp ttype="I64">1541332800</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1541419200_1541937600</timeAllocationBucketID><startTimeStamp ttype="I64">1541419200</startTimeStamp><endTimeStamp ttype="I64">1541937600</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1542024000_1542542400</timeAllocationBucketID><startTimeStamp ttype="I64">1542024000</startTimeStamp><endTimeStamp ttype="I64">1542542400</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1542628800_1543147200</timeAllocationBucketID><startTimeStamp ttype="I64">1542628800</startTimeStamp><endTimeStamp ttype="I64">1543147200</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1543233600_1543752000</timeAllocationBucketID><startTimeStamp ttype="I64">1543233600</startTimeStamp><endTimeStamp ttype="I64">1543752000</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1543838400_1544356800</timeAllocationBucketID><startTimeStamp ttype="I64">1543838400</startTimeStamp><endTimeStamp ttype="I64">1544356800</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1544443200_1544961600</timeAllocationBucketID><startTimeStamp ttype="I64">1544443200</startTimeStamp><endTimeStamp ttype="I64">1544961600</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1545048000_1545566400</timeAllocationBucketID><startTimeStamp ttype="I64">1545048000</startTimeStamp><endTimeStamp ttype="I64">1545566400</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_SC_2122405912_1545652800_1546171200</timeAllocationBucketID><startTimeStamp ttype="I64">1545652800</startTimeStamp><endTimeStamp ttype="I64">1546171200</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1004_A_DEFAULTLANE</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1004_A_DEFAULTLANE</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1004_A_DEFAULTLANE_0000000000_2147483647</timeAllocationBucketID><startTimeStamp ttype="I64">0</startTimeStamp><endTimeStamp ttype="I64">2147483647</endTimeStamp><allocationCount ttype="DOUBLE">9999999.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">28290_SC_2122367025</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">28290_SC_2122367025</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122367025_1537012800_1538308800</timeAllocationBucketID><startTimeStamp ttype="I64">1537012800</startTimeStamp><endTimeStamp ttype="I64">1538308800</endTimeStamp><allocationCount ttype="DOUBLE">70.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122367025_1538395200_1540987200</timeAllocationBucketID><startTimeStamp ttype="I64">1538395200</startTimeStamp><endTimeStamp ttype="I64">1540987200</endTimeStamp><allocationCount ttype="DOUBLE">66.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122367025_1541073600_1543579200</timeAllocationBucketID><startTimeStamp ttype="I64">1541073600</startTimeStamp><endTimeStamp ttype="I64">1543579200</endTimeStamp><allocationCount ttype="DOUBLE">70.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122367025_1543665600_1545652800</timeAllocationBucketID><startTimeStamp ttype="I64">1543665600</startTimeStamp><endTimeStamp ttype="I64">1545652800</endTimeStamp><allocationCount ttype="DOUBLE">70.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1012_S_2122435178</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1012_S_2122435178</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_S_2122435178_1540555200_1540900800</timeAllocationBucketID><startTimeStamp ttype="I64">1540555200</startTimeStamp><endTimeStamp ttype="I64">1540900800</endTimeStamp><allocationCount ttype="DOUBLE">4.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_S_2122435178_1540987200_1541505600</timeAllocationBucketID><startTimeStamp ttype="I64">1540987200</startTimeStamp><endTimeStamp ttype="I64">1541505600</endTimeStamp><allocationCount ttype="DOUBLE">4.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1012_S_2122435178_1541592000_1541937600</timeAllocationBucketID><startTimeStamp ttype="I64">1541592000</startTimeStamp><endTimeStamp ttype="I64">1541937600</endTimeStamp><allocationCount ttype="DOUBLE">4.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">28290_S_2122435179</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">28290_S_2122435179</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_S_2122435179_1540555200_1540900800</timeAllocationBucketID><startTimeStamp ttype="I64">1540555200</startTimeStamp><endTimeStamp ttype="I64">1540900800</endTimeStamp><allocationCount ttype="DOUBLE">4.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_S_2122435179_1540987200_1541505600</timeAllocationBucketID><startTimeStamp ttype="I64">1540987200</startTimeStamp><endTimeStamp ttype="I64">1541505600</endTimeStamp><allocationCount ttype="DOUBLE">4.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_S_2122435179_1541592000_1541937600</timeAllocationBucketID><startTimeStamp ttype="I64">1541592000</startTimeStamp><endTimeStamp ttype="I64">1541937600</endTimeStamp><allocationCount ttype="DOUBLE">4.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1003_A_DEFAULTLANE</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1003_A_DEFAULTLANE</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_A_DEFAULTLANE_0000000000_2147483647</timeAllocationBucketID><startTimeStamp ttype="I64">0</startTimeStamp><endTimeStamp ttype="I64">2147483647</endTimeStamp><allocationCount ttype="DOUBLE">9999999.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1003_S_DEFAULTLANE</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1003_S_DEFAULTLANE</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_DEFAULTLANE_0000000000_2147483647</timeAllocationBucketID><startTimeStamp ttype="I64">0</startTimeStamp><endTimeStamp ttype="I64">2147483647</endTimeStamp><allocationCount ttype="DOUBLE">9999999.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1008_A_DEFAULTLANE</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1008_A_DEFAULTLANE</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1008_A_DEFAULTLANE_0000000000_2147483647</timeAllocationBucketID><startTimeStamp ttype="I64">0</startTimeStamp><endTimeStamp ttype="I64">2147483647</endTimeStamp><allocationCount ttype="DOUBLE">9999999.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1003_S_2122405910</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1003_S_2122405910</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122405910_1539950400_1540036800</timeAllocationBucketID><startTimeStamp ttype="I64">1539950400</startTimeStamp><endTimeStamp ttype="I64">1540036800</endTimeStamp><allocationCount ttype="DOUBLE">0.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122405910_1540123200_1540641600</timeAllocationBucketID><startTimeStamp ttype="I64">1540123200</startTimeStamp><endTimeStamp ttype="I64">1540641600</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122405910_1540728000_1541246400</timeAllocationBucketID><startTimeStamp ttype="I64">1540728000</startTimeStamp><endTimeStamp ttype="I64">1541246400</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122405910_1541332800_1541851200</timeAllocationBucketID><startTimeStamp ttype="I64">1541332800</startTimeStamp><endTimeStamp ttype="I64">1541851200</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122405910_1541937600_1542456000</timeAllocationBucketID><startTimeStamp ttype="I64">1541937600</startTimeStamp><endTimeStamp ttype="I64">1542456000</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122405910_1542542400_1543060800</timeAllocationBucketID><startTimeStamp ttype="I64">1542542400</startTimeStamp><endTimeStamp ttype="I64">1543060800</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122405910_1543147200_1543665600</timeAllocationBucketID><startTimeStamp ttype="I64">1543147200</startTimeStamp><endTimeStamp ttype="I64">1543665600</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122405910_1543752000_1544270400</timeAllocationBucketID><startTimeStamp ttype="I64">1543752000</startTimeStamp><endTimeStamp ttype="I64">1544270400</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122405910_1544356800_1544616000</timeAllocationBucketID><startTimeStamp ttype="I64">1544356800</startTimeStamp><endTimeStamp ttype="I64">1544616000</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1003_S_2122367045</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1003_S_2122367045</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1537012800_1537012800</timeAllocationBucketID><startTimeStamp ttype="I64">1537012800</startTimeStamp><endTimeStamp ttype="I64">1537012800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1537099200_1537617600</timeAllocationBucketID><startTimeStamp ttype="I64">1537099200</startTimeStamp><endTimeStamp ttype="I64">1537617600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1537704000_1538222400</timeAllocationBucketID><startTimeStamp ttype="I64">1537704000</startTimeStamp><endTimeStamp ttype="I64">1538222400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1538308800_1538827200</timeAllocationBucketID><startTimeStamp ttype="I64">1538308800</startTimeStamp><endTimeStamp ttype="I64">1538827200</endTimeStamp><allocationCount ttype="DOUBLE">46.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1538913600_1539432000</timeAllocationBucketID><startTimeStamp ttype="I64">1538913600</startTimeStamp><endTimeStamp ttype="I64">1539432000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1539518400_1540036800</timeAllocationBucketID><startTimeStamp ttype="I64">1539518400</startTimeStamp><endTimeStamp ttype="I64">1540036800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1540123200_1540641600</timeAllocationBucketID><startTimeStamp ttype="I64">1540123200</startTimeStamp><endTimeStamp ttype="I64">1540641600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1540728000_1541246400</timeAllocationBucketID><startTimeStamp ttype="I64">1540728000</startTimeStamp><endTimeStamp ttype="I64">1541246400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1541332800_1541851200</timeAllocationBucketID><startTimeStamp ttype="I64">1541332800</startTimeStamp><endTimeStamp ttype="I64">1541851200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1541937600_1542456000</timeAllocationBucketID><startTimeStamp ttype="I64">1541937600</startTimeStamp><endTimeStamp ttype="I64">1542456000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1542542400_1543060800</timeAllocationBucketID><startTimeStamp ttype="I64">1542542400</startTimeStamp><endTimeStamp ttype="I64">1543060800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1543147200_1543665600</timeAllocationBucketID><startTimeStamp ttype="I64">1543147200</startTimeStamp><endTimeStamp ttype="I64">1543665600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1543752000_1544270400</timeAllocationBucketID><startTimeStamp ttype="I64">1543752000</startTimeStamp><endTimeStamp ttype="I64">1544270400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1544356800_1544875200</timeAllocationBucketID><startTimeStamp ttype="I64">1544356800</startTimeStamp><endTimeStamp ttype="I64">1544875200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1544961600_1545480000</timeAllocationBucketID><startTimeStamp ttype="I64">1544961600</startTimeStamp><endTimeStamp ttype="I64">1545480000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1545566400_1546084800</timeAllocationBucketID><startTimeStamp ttype="I64">1545566400</startTimeStamp><endTimeStamp ttype="I64">1546084800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1546171200_1546689600</timeAllocationBucketID><startTimeStamp ttype="I64">1546171200</startTimeStamp><endTimeStamp ttype="I64">1546689600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1546776000_1547294400</timeAllocationBucketID><startTimeStamp ttype="I64">1546776000</startTimeStamp><endTimeStamp ttype="I64">1547294400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1547380800_1547899200</timeAllocationBucketID><startTimeStamp ttype="I64">1547380800</startTimeStamp><endTimeStamp ttype="I64">1547899200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1547985600_1548504000</timeAllocationBucketID><startTimeStamp ttype="I64">1547985600</startTimeStamp><endTimeStamp ttype="I64">1548504000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1548590400_1549108800</timeAllocationBucketID><startTimeStamp ttype="I64">1548590400</startTimeStamp><endTimeStamp ttype="I64">1549108800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1549195200_1549713600</timeAllocationBucketID><startTimeStamp ttype="I64">1549195200</startTimeStamp><endTimeStamp ttype="I64">1549713600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1549800000_1550318400</timeAllocationBucketID><startTimeStamp ttype="I64">1549800000</startTimeStamp><endTimeStamp ttype="I64">1550318400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1550404800_1550923200</timeAllocationBucketID><startTimeStamp ttype="I64">1550404800</startTimeStamp><endTimeStamp ttype="I64">1550923200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1551009600_1551528000</timeAllocationBucketID><startTimeStamp ttype="I64">1551009600</startTimeStamp><endTimeStamp ttype="I64">1551528000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1551614400_1552132800</timeAllocationBucketID><startTimeStamp ttype="I64">1551614400</startTimeStamp><endTimeStamp ttype="I64">1552132800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1552219200_1552737600</timeAllocationBucketID><startTimeStamp ttype="I64">1552219200</startTimeStamp><endTimeStamp ttype="I64">1552737600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1552824000_1553342400</timeAllocationBucketID><startTimeStamp ttype="I64">1552824000</startTimeStamp><endTimeStamp ttype="I64">1553342400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1553428800_1553947200</timeAllocationBucketID><startTimeStamp ttype="I64">1553428800</startTimeStamp><endTimeStamp ttype="I64">1553947200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1554033600_1554552000</timeAllocationBucketID><startTimeStamp ttype="I64">1554033600</startTimeStamp><endTimeStamp ttype="I64">1554552000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1554638400_1555156800</timeAllocationBucketID><startTimeStamp ttype="I64">1554638400</startTimeStamp><endTimeStamp ttype="I64">1555156800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1555243200_1555761600</timeAllocationBucketID><startTimeStamp ttype="I64">1555243200</startTimeStamp><endTimeStamp ttype="I64">1555761600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1555848000_1556366400</timeAllocationBucketID><startTimeStamp ttype="I64">1555848000</startTimeStamp><endTimeStamp ttype="I64">1556366400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1556452800_1556971200</timeAllocationBucketID><startTimeStamp ttype="I64">1556452800</startTimeStamp><endTimeStamp ttype="I64">1556971200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1557057600_1557576000</timeAllocationBucketID><startTimeStamp ttype="I64">1557057600</startTimeStamp><endTimeStamp ttype="I64">1557576000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1557662400_1558180800</timeAllocationBucketID><startTimeStamp ttype="I64">1557662400</startTimeStamp><endTimeStamp ttype="I64">1558180800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1558267200_1558785600</timeAllocationBucketID><startTimeStamp ttype="I64">1558267200</startTimeStamp><endTimeStamp ttype="I64">1558785600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1558872000_1559390400</timeAllocationBucketID><startTimeStamp ttype="I64">1558872000</startTimeStamp><endTimeStamp ttype="I64">1559390400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1559476800_1559995200</timeAllocationBucketID><startTimeStamp ttype="I64">1559476800</startTimeStamp><endTimeStamp ttype="I64">1559995200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1560081600_1560600000</timeAllocationBucketID><startTimeStamp ttype="I64">1560081600</startTimeStamp><endTimeStamp ttype="I64">1560600000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1560686400_1561204800</timeAllocationBucketID><startTimeStamp ttype="I64">1560686400</startTimeStamp><endTimeStamp ttype="I64">1561204800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1561291200_1561809600</timeAllocationBucketID><startTimeStamp ttype="I64">1561291200</startTimeStamp><endTimeStamp ttype="I64">1561809600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1561896000_1562414400</timeAllocationBucketID><startTimeStamp ttype="I64">1561896000</startTimeStamp><endTimeStamp ttype="I64">1562414400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1562500800_1563019200</timeAllocationBucketID><startTimeStamp ttype="I64">1562500800</startTimeStamp><endTimeStamp ttype="I64">1563019200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1563105600_1563624000</timeAllocationBucketID><startTimeStamp ttype="I64">1563105600</startTimeStamp><endTimeStamp ttype="I64">1563624000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1563710400_1564228800</timeAllocationBucketID><startTimeStamp ttype="I64">1563710400</startTimeStamp><endTimeStamp ttype="I64">1564228800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1564315200_1564833600</timeAllocationBucketID><startTimeStamp ttype="I64">1564315200</startTimeStamp><endTimeStamp ttype="I64">1564833600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1564920000_1565438400</timeAllocationBucketID><startTimeStamp ttype="I64">1564920000</startTimeStamp><endTimeStamp ttype="I64">1565438400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1565524800_1566043200</timeAllocationBucketID><startTimeStamp ttype="I64">1565524800</startTimeStamp><endTimeStamp ttype="I64">1566043200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1566129600_1566648000</timeAllocationBucketID><startTimeStamp ttype="I64">1566129600</startTimeStamp><endTimeStamp ttype="I64">1566648000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1566734400_1567252800</timeAllocationBucketID><startTimeStamp ttype="I64">1566734400</startTimeStamp><endTimeStamp ttype="I64">1567252800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1567339200_1567857600</timeAllocationBucketID><startTimeStamp ttype="I64">1567339200</startTimeStamp><endTimeStamp ttype="I64">1567857600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1567944000_1568462400</timeAllocationBucketID><startTimeStamp ttype="I64">1567944000</startTimeStamp><endTimeStamp ttype="I64">1568462400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1568548800_1569067200</timeAllocationBucketID><startTimeStamp ttype="I64">1568548800</startTimeStamp><endTimeStamp ttype="I64">1569067200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1569153600_1569672000</timeAllocationBucketID><startTimeStamp ttype="I64">1569153600</startTimeStamp><endTimeStamp ttype="I64">1569672000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1569758400_1570276800</timeAllocationBucketID><startTimeStamp ttype="I64">1569758400</startTimeStamp><endTimeStamp ttype="I64">1570276800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1570363200_1570881600</timeAllocationBucketID><startTimeStamp ttype="I64">1570363200</startTimeStamp><endTimeStamp ttype="I64">1570881600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1570968000_1571486400</timeAllocationBucketID><startTimeStamp ttype="I64">1570968000</startTimeStamp><endTimeStamp ttype="I64">1571486400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1571572800_1572091200</timeAllocationBucketID><startTimeStamp ttype="I64">1571572800</startTimeStamp><endTimeStamp ttype="I64">1572091200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1572177600_1572696000</timeAllocationBucketID><startTimeStamp ttype="I64">1572177600</startTimeStamp><endTimeStamp ttype="I64">1572696000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1572782400_1573300800</timeAllocationBucketID><startTimeStamp ttype="I64">1572782400</startTimeStamp><endTimeStamp ttype="I64">1573300800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1573387200_1573905600</timeAllocationBucketID><startTimeStamp ttype="I64">1573387200</startTimeStamp><endTimeStamp ttype="I64">1573905600</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1573992000_1574510400</timeAllocationBucketID><startTimeStamp ttype="I64">1573992000</startTimeStamp><endTimeStamp ttype="I64">1574510400</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1574596800_1575115200</timeAllocationBucketID><startTimeStamp ttype="I64">1574596800</startTimeStamp><endTimeStamp ttype="I64">1575115200</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1575201600_1575720000</timeAllocationBucketID><startTimeStamp ttype="I64">1575201600</startTimeStamp><endTimeStamp ttype="I64">1575720000</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1575806400_1576324800</timeAllocationBucketID><startTimeStamp ttype="I64">1575806400</startTimeStamp><endTimeStamp ttype="I64">1576324800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122367045_1576411200_1576756800</timeAllocationBucketID><startTimeStamp ttype="I64">1576411200</startTimeStamp><endTimeStamp ttype="I64">1576756800</endTimeStamp><allocationCount ttype="DOUBLE">50.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">28290_SC_2122380278</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">28290_SC_2122380278</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122380278_1538481600_1540987200</timeAllocationBucketID><startTimeStamp ttype="I64">1538481600</startTimeStamp><endTimeStamp ttype="I64">1540987200</endTimeStamp><allocationCount ttype="DOUBLE">67.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122380278_1541073600_1543579200</timeAllocationBucketID><startTimeStamp ttype="I64">1541073600</startTimeStamp><endTimeStamp ttype="I64">1543579200</endTimeStamp><allocationCount ttype="DOUBLE">70.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122380278_1543665600_1545652800</timeAllocationBucketID><startTimeStamp ttype="I64">1543665600</startTimeStamp><endTimeStamp ttype="I64">1545652800</endTimeStamp><allocationCount ttype="DOUBLE">70.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">28290_SC_2122405915</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">28290_SC_2122405915</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1539777600_1539777600</timeAllocationBucketID><startTimeStamp ttype="I64">1539777600</startTimeStamp><endTimeStamp ttype="I64">1539777600</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1539864000_1540382400</timeAllocationBucketID><startTimeStamp ttype="I64">1539864000</startTimeStamp><endTimeStamp ttype="I64">1540382400</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1540468800_1540987200</timeAllocationBucketID><startTimeStamp ttype="I64">1540468800</startTimeStamp><endTimeStamp ttype="I64">1540987200</endTimeStamp><allocationCount ttype="DOUBLE">0.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1541073600_1541592000</timeAllocationBucketID><startTimeStamp ttype="I64">1541073600</startTimeStamp><endTimeStamp ttype="I64">1541592000</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1541678400_1542196800</timeAllocationBucketID><startTimeStamp ttype="I64">1541678400</startTimeStamp><endTimeStamp ttype="I64">1542196800</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1542283200_1542801600</timeAllocationBucketID><startTimeStamp ttype="I64">1542283200</startTimeStamp><endTimeStamp ttype="I64">1542801600</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1542888000_1543406400</timeAllocationBucketID><startTimeStamp ttype="I64">1542888000</startTimeStamp><endTimeStamp ttype="I64">1543406400</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1543492800_1544011200</timeAllocationBucketID><startTimeStamp ttype="I64">1543492800</startTimeStamp><endTimeStamp ttype="I64">1544011200</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1544097600_1544616000</timeAllocationBucketID><startTimeStamp ttype="I64">1544097600</startTimeStamp><endTimeStamp ttype="I64">1544616000</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1544702400_1545220800</timeAllocationBucketID><startTimeStamp ttype="I64">1544702400</startTimeStamp><endTimeStamp ttype="I64">1545220800</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1545307200_1545825600</timeAllocationBucketID><startTimeStamp ttype="I64">1545307200</startTimeStamp><endTimeStamp ttype="I64">1545825600</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405915_1545912000_1546171200</timeAllocationBucketID><startTimeStamp ttype="I64">1545912000</startTimeStamp><endTimeStamp ttype="I64">1546171200</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">28290_SC_2122405913</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">28290_SC_2122405913</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1539777600_1540209600</timeAllocationBucketID><startTimeStamp ttype="I64">1539777600</startTimeStamp><endTimeStamp ttype="I64">1540209600</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1540296000_1540814400</timeAllocationBucketID><startTimeStamp ttype="I64">1540296000</startTimeStamp><endTimeStamp ttype="I64">1540814400</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1540900800_1541419200</timeAllocationBucketID><startTimeStamp ttype="I64">1540900800</startTimeStamp><endTimeStamp ttype="I64">1541419200</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1541505600_1542024000</timeAllocationBucketID><startTimeStamp ttype="I64">1541505600</startTimeStamp><endTimeStamp ttype="I64">1542024000</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1542110400_1542628800</timeAllocationBucketID><startTimeStamp ttype="I64">1542110400</startTimeStamp><endTimeStamp ttype="I64">1542628800</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1542715200_1543233600</timeAllocationBucketID><startTimeStamp ttype="I64">1542715200</startTimeStamp><endTimeStamp ttype="I64">1543233600</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1543320000_1543838400</timeAllocationBucketID><startTimeStamp ttype="I64">1543320000</startTimeStamp><endTimeStamp ttype="I64">1543838400</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1543924800_1544443200</timeAllocationBucketID><startTimeStamp ttype="I64">1543924800</startTimeStamp><endTimeStamp ttype="I64">1544443200</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1544529600_1545048000</timeAllocationBucketID><startTimeStamp ttype="I64">1544529600</startTimeStamp><endTimeStamp ttype="I64">1545048000</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1545134400_1545652800</timeAllocationBucketID><startTimeStamp ttype="I64">1545134400</startTimeStamp><endTimeStamp ttype="I64">1545652800</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">28290_SC_2122405913_1545739200_1546171200</timeAllocationBucketID><startTimeStamp ttype="I64">1545739200</startTimeStamp><endTimeStamp ttype="I64">1546171200</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item></timeAllocationBuckets></value></item><item><key ttype="STRING">1003_S_2122387108</key><value struct="CarrierLaneWiseAllocations" ttype="STRUCT"><id ttype="STRING">1003_S_2122387108</id><timeAllocationBuckets ttype="LIST"><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122387108_1539172800_1539691200</timeAllocationBucketID><startTimeStamp ttype="I64">1539172800</startTimeStamp><endTimeStamp ttype="I64">1539691200</endTimeStamp><allocationCount ttype="DOUBLE">0.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122387108_1539777600_1540296000</timeAllocationBucketID><startTimeStamp ttype="I64">1539777600</startTimeStamp><endTimeStamp ttype="I64">1540296000</endTimeStamp><allocationCount ttype="DOUBLE">1.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122387108_1540382400_1540900800</timeAllocationBucketID><startTimeStamp ttype="I64">1540382400</startTimeStamp><endTimeStamp ttype="I64">1540900800</endTimeStamp><allocationCount ttype="DOUBLE">0.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122387108_1540987200_1541505600</timeAllocationBucketID><startTimeStamp ttype="I64">1540987200</startTimeStamp><endTimeStamp ttype="I64">1541505600</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item><item struct="TimeAllocationBucket" ttype="STRUCT"><timeAllocationBucketID ttype="STRING">1003_S_2122387108_1541592000_1541937600</timeAllocationBucketID><startTimeStamp ttype="I64">1541592000</startTimeStamp><endTimeStamp ttype="I64">1541937600</endTimeStamp><allocationCount ttype="DOUBLE">2.0</allocationCount></item></timeAllocationBuckets></value></item></carrierLaneWiseAllocations><globalScript ttype="STRING">distanceMatrix = {"1073752377":{"1073752378":338.94,"1073752376":240.63,"1073752375":158.66,"1073752374":249.25,"1073752373":315.7},"1073752378":{"1073752377":338.94,"1073752376":98.48,"1073752375":496.61,"1073752374":588.1,"1073752373":654.54},"1073752375":{"1073752378":496.61,"1073752377":158.66,"1073752376":398.65,"1073752374":96.73,"1073752373":161.52},"1073752376":{"1073752378":98.48,"1073752377":240.63,"1073752375":398.65,"1073752374":489.69,"1073752373":556.13},"35133":{"35134":153.91,"35135":117.67,"35136":1905.69,"35137":2048.39,"35138":397.97,"35139":452.4,"35140":545.07,"35141":642.75,"35142":458.05},"1073752373":{"1073752378":654.54,"1073752377":315.7,"1073752376":556.13,"1073752375":161.52,"1073752374":66.44},"1073752374":{"1073752378":588.1,"1073752377":249.25,"1073752376":489.69,"1073752375":96.73,"1073752373":66.44},"1073745939":{"1073745938":300.0},"35139":{"35133":452.4,"35134":456.72,"35135":380.36,"35136":1615.04,"35137":1739.01,"35138":116.2,"35140":154.25,"35141":196.98,"35142":6.57},"1073745937":{"1073745939":500.0,"1073746927":620.0,"1073746928":620.0},"1073746927":{"1073745937":620.0,"1073746928":620.0},"35138":{"35133":397.97,"35134":440.88,"35135":354.13,"35136":1577.07,"35137":1708.3,"35139":116.2,"35140":270.18,"35141":297.65,"35142":122.21},"1073746928":{"1073745937":620.0,"1073746927":620.0},"35137":{"35133":2048.39,"35134":2138.58,"35135":2048.47,"35136":165.47,"35138":1708.3,"35139":1739.01,"35140":1802.57,"35141":1679.57,"35142":1738.18},"35136":{"35133":1905.69,"35134":2001.48,"35135":1911.24,"35137":165.47,"35138":1577.07,"35139":1615.04,"35140":1688.16,"35141":1569.43,"35142":1614.65},"35135":{"35133":117.67,"35134":90.24,"35136":1911.24,"35137":2048.47,"35138":354.13,"35139":380.36,"35140":449.35,"35141":558.8,"35142":385.13},"35134":{"35133":153.91,"35135":90.24,"35136":2001.48,"35137":2138.58,"35138":440.88,"35139":456.72,"35140":506.63,"35141":624.79,"35142":460.93},"1073756423":{"1073756425":951.43,"1073756424":932.97},"1073756424":{"1073756425":137.26,"1073756423":932.97},"1073756425":{"1073756424":137.26,"1073756423":951.43},"1073750323":{"1073750324":2085.07},"1073752425":{"1073752426":102.11},"1073752426":{"1073752425":102.11},"1073752423":{"1073752424":1747.8},"1073750324":{"1073750323":2085.07},"1073752424":{"1073752423":1747.8},"1073747974":{"1073747973":6.79,"1073747975":6.42,"1073747976":6.42,"1073747977":8.49},"1073751376":{"1073751375":271.06},"1073747973":{"1073747974":6.79,"1073747975":9.86,"1073747976":9.86,"1073747977":4.11},"1073751375":{"1073751376":271.06},"1073747977":{"1073747973":4.11,"1073747974":8.49,"1073747975":8.51,"1073747976":8.51},"35142":{"35133":458.05,"35134":460.93,"35135":385.13,"35136":1614.65,"35137":1738.18,"35138":122.21,"35139":6.57,"35140":148.56,"35141":190.58},"1073747976":{"1073747973":9.86,"1073747974":6.42,"1073747975":0.01,"1073747977":8.51},"35141":{"35133":642.75,"35134":624.79,"35135":558.8,"35136":1569.43,"35137":1679.57,"35138":297.65,"35139":196.98,"35140":133.83,"35142":190.58},"1073747975":{"1073747973":9.86,"1073747974":6.42,"1073747976":0.01,"1073747977":8.51},"35140":{"35133":545.07,"35134":506.63,"35135":449.35,"35136":1688.16,"35137":1802.57,"35138":270.18,"35139":154.25,"35141":133.83,"35142":148.56},"660686":{"660686":0.01},"660688":{"660684":44.117341},"1073755423":{"1073755424":89.91},"1073755424":{"1073755423":89.91},"1073755425":{"1073755426":17.96},"1073755426":{"1073755425":17.96}}
transitTimeMatrix = {"1073752377":{"1073752378":24360,"1073752376":17280,"1073752375":11400,"1073752374":17940,"1073752373":22680},"1073752378":{"1073752377":24360,"1073752376":7080,"1073752375":35700,"1073752374":42300,"1073752373":47100},"1073752375":{"1073752378":35700,"1073752377":11400,"1073752376":28680,"1073752374":6960,"1073752373":11580},"1073752376":{"1073752378":7080,"1073752377":17280,"1073752375":28680,"1073752374":35220,"1073752373":40020},"35133":{"35134":11040,"35135":8460,"35136":137160,"35137":147480,"35138":28620,"35139":32520,"35140":39240,"35141":46260,"35142":32940},"1073752373":{"1073752378":47100,"1073752377":22680,"1073752376":40020,"1073752375":11580,"1073752374":4740},"1073752374":{"1073752378":42300,"1073752377":17940,"1073752376":35220,"1073752375":6960,"1073752373":4740},"1073745939":{"1073745938":12000},"35139":{"35133":32520,"35134":32880,"35135":27360,"35136":116280,"35137":125160,"35138":8340,"35140":11100,"35141":14160,"35142":420},"1073745937":{"1073745939":36000,"1073746927":30000,"1073746928":30000},"1073746927":{"1073745937":30000,"1073746928":30000},"35138":{"35133":28620,"35134":31740,"35135":25440,"35136":113520,"35137":122940,"35139":8340,"35140":19440,"35141":21420,"35142":8760},"1073746928":{"1073745937":30000,"1073746927":30000},"35137":{"35133":147480,"35134":153960,"35135":147480,"35136":11880,"35138":122940,"35139":125160,"35140":129780,"35141":120900,"35142":125100},"35136":{"35133":137160,"35134":144060,"35135":137580,"35137":11880,"35138":113520,"35139":116280,"35140":121500,"35141":112980,"35142":116220},"35135":{"35133":8460,"35134":6480,"35136":137580,"35137":147480,"35138":25440,"35139":27360,"35140":32340,"35141":40200,"35142":27720},"35134":{"35133":11040,"35135":6480,"35136":144060,"35137":153960,"35138":31740,"35139":32880,"35140":36420,"35141":44940,"35142":33180},"1073756423":{"1073756425":68460,"1073756424":67140},"1073756424":{"1073756425":9840,"1073756423":67140},"1073756425":{"1073756424":9840,"1073756423":68460},"1073750323":{"1073750324":150120},"1073752425":{"1073752426":7320},"1073752426":{"1073752425":7320},"1073752423":{"1073752424":125820},"1073750324":{"1073750323":150120},"1073752424":{"1073752423":125820},"1073747974":{"1073747973":480,"1073747975":420,"1073747976":420,"1073747977":600},"1073751376":{"1073751375":19500},"1073747973":{"1073747974":480,"1073747975":660,"1073747976":660,"1073747977":240},"1073751375":{"1073751376":19500},"1073747977":{"1073747973":240,"1073747974":600,"1073747975":600,"1073747976":600},"35142":{"35133":32940,"35134":33180,"35135":27720,"35136":116220,"35137":125100,"35138":8760,"35139":420,"35140":10680,"35141":13680},"1073747976":{"1073747973":660,"1073747974":420,"1073747975":60,"1073747977":600},"35141":{"35133":46260,"35134":44940,"35135":40200,"35136":112980,"35137":120900,"35138":21420,"35139":14160,"35140":9600,"35142":13680},"1073747975":{"1073747973":660,"1073747974":420,"1073747976":60,"1073747977":600},"35140":{"35133":39240,"35134":36420,"35135":32340,"35136":121500,"35137":129780,"35138":19440,"35139":11100,"35141":9600,"35142":10680},"660686":{"660686":60},"660688":{"660684":4860},"1073755423":{"1073755424":6420},"1073755424":{"1073755423":6420},"1073755425":{"1073755426":1260},"1073755426":{"1073755425":1260}}
var rate = function(rateInputObj) {&#13;
&#13;
	this.evaluateByObj = function(dimObj) {&#13;
		result = this.evaluate(dimObj);&#13;
		if (!result || result.total &lt;= 0 || !rateInputObj.baseRate.total&#13;
				|| rateInputObj.baseRate.total &lt;= 0) {&#13;
			// warn(rateInputObj.rateId+':FinalTotalAmt='+result.total);&#13;
			// warn(rateInputObj.rateId+':Dimensions: '+JSON.stringify(dimObj));&#13;
			return 9999999;&#13;
		}&#13;
		return parseFloat(result.total);&#13;
	};&#13;
&#13;
	this.evaluate = function(dimObj) {&#13;
		this.evaluateBaseRate(dimObj);&#13;
		this.evaluateAccessorials(dimObj);&#13;
		this.evaluateStopOff(dimObj.stopOffs);&#13;
		this.getDistanceSplit(dimObj);&#13;
		this.evaluateTransitTime(dimObj);&#13;
		totalAmt = 0;&#13;
		baseRateBasis = rateInputObj.baseRate.basis;&#13;
		supportedBasis = rateInputObj.baseRate.supportedBasis;&#13;
		if (rateInputObj.baseRate.total) {&#13;
			totalAmt = rateInputObj.baseRate.total;&#13;
		}&#13;
		if (rateInputObj.accessorials) {&#13;
			for (i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				if (rateInputObj.accessorials[i]&#13;
						&amp;&amp; rateInputObj.accessorials[i].total&#13;
						&amp;&amp; (baseRateBasis || rateInputObj.accessorials[i].supportedBasis)) {&#13;
					totalAmt = totalAmt + rateInputObj.accessorials[i].total;&#13;
				}&#13;
			}&#13;
		}&#13;
		if (rateInputObj.stopBands &amp;&amp; rateInputObj.stopOffTotal) {&#13;
			totalAmt = totalAmt + rateInputObj.stopOffTotal;&#13;
		}&#13;
		rateInputObj.total = parseFloat(totalAmt);&#13;
		return rateInputObj;&#13;
	};&#13;
	&#13;
	this.evaluateSMCRate = function(dimObj) {&#13;
		lbConvRate = rateInputObj.baseRate.lbConvRate;&#13;
		smcWeight = dimObj.dims.wtInKG * lbConvRate;&#13;
		smcRate = 0.0;&#13;
		smcDiscount = 0.0;&#13;
		smcFinalPrice = 0.0;&#13;
		&#13;
		if (inputObj.isdeficitpricing &amp;&amp; inputObj.isdeficitpricing === 'yes') {&#13;
			if (rateInputObj.rateBands&#13;
					&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
				for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
					if ((smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
							|| (smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; smcWeight &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
						if (rateInputObj.rateBands[i].upperbreak == 999999999) {&#13;
							smcRate = rateInputObj.rateBands[i].amount;&#13;
							smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
						} else {&#13;
							smcNextBandAmt = rateInputObj.rateBands[i + 1].amount;&#13;
							smcNextBandRate = smcNextBandAmt * dimObj.dims.wtInKG * 0.01;&#13;
							smcBandRate = rateInputObj.rateBands[i].amount * dimObj.dims.wtInKG * 0.01;&#13;
									&#13;
							if (smcNextBandRate &gt; smcBandRate) {&#13;
								smcRate = rateInputObj.rateBands[i+1].amount;&#13;
								smcDiscount = rateInputObj.rateBands[i+1].discountpercentage;&#13;
							} else {&#13;
								smcRate = rateInputObj.rateBands[i].amount;&#13;
								smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
							}&#13;
						}&#13;
						break;&#13;
					}&#13;
				}&#13;
			}&#13;
		} else {&#13;
			if (rateInputObj.rateBands &amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
				for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
					if ((smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
						|| (smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; smcWeight &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
							smcRate = rateInputObj.rateBands[i].amount;&#13;
							smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
							break;&#13;
					}&#13;
				}&#13;
			}		&#13;
		}		&#13;
		&#13;
		if (smcRate &gt; 0.0) {&#13;
			noOfCwts = dimObj.dims.wtInKG * 0.01;&#13;
			grossCharge = noOfCwts * smcRate;&#13;
			discountedCharge = 0.0;&#13;
			&#13;
			if (smcDiscount &gt; 0.0) {&#13;
				discountCharge = (grossCharge * smcDiscount) / 100;&#13;
				discountedCharge = grossCharge - discountCharge;				&#13;
			} else {&#13;
				discountedCharge = grossCharge;&#13;
			}&#13;
			&#13;
			minimumcharge = rateInputObj.baseRate.minimumcharge;&#13;
			minimumchargediscount = rateInputObj.baseRate.minimumchargediscount;&#13;
			discountedMinimumCharge = 0.0;&#13;
			&#13;
			if (minimumchargediscount &gt; 0.0) {&#13;
				minimumdiscountCharge = (minimumcharge * minimumchargediscount) / 100;&#13;
				discountedMinimumCharge = minimumcharge - minimumdiscountCharge;				&#13;
			} else {&#13;
				discountedMinimumCharge = minimumcharge;&#13;
			}&#13;
			&#13;
			smcTotalPrice = (discountedCharge &gt; discountedMinimumCharge) ? discountedCharge : discountedMinimumCharge;&#13;
			&#13;
			ltlsurchargepercentage = rateInputObj.baseRate.ltlsurchargepercentage;&#13;
			ltlsurchargeamount = (smcTotalPrice * ltlsurchargepercentage) / 100;&#13;
			&#13;
			smcCalculatedPrice = smcTotalPrice + ltlsurchargeamount;&#13;
			&#13;
			minimumfloorcharge = rateInputObj.baseRate.minimumfloorcharge;&#13;
			&#13;
			smcFinalPrice = (minimumfloorcharge &gt; smcCalculatedPrice) ? minimumfloorcharge : smcCalculatedPrice;			&#13;
		} &#13;
		&#13;
		rateInputObj.baseRate.supportedBasis = true;&#13;
		rateInputObj.baseRate.total = parseFloat(smcFinalPrice);&#13;
	};&#13;
&#13;
	this.evaluateBaseRate = function(dimObj) {&#13;
		inputObj = rateInputObj.baseRate;&#13;
		calculateCW = rateInputObj.calculateCW;&#13;
		supportedBasis = false;&#13;
		totalAmt = 0;&#13;
		quantity = 0;&#13;
		&#13;
		if (inputObj.isSMC) {&#13;
			this.evaluateSMCRate(dimObj);&#13;
			return;				&#13;
		}&#13;
		&#13;
		if (inputObj.basis === '/container') {&#13;
			supportedBasis = true;&#13;
			if (inputObj.equipmentType &amp;&amp; dimObj.dims[inputObj.equipmentType]) {&#13;
				totalAmt = inputObj.amount&#13;
						* dimObj.dims[inputObj.equipmentType];&#13;
				quantity = dimObj.dims[inputObj.equipmentType];&#13;
			} else {&#13;
				return;&#13;
			}&#13;
		}&#13;
&#13;
		if (inputObj.basis === '/package' || inputObj.basis === '/pallet'&#13;
				|| inputObj.basis === '/unit' || inputObj.basis === '/carton'&#13;
				|| inputObj.basis === '/LNM' || inputObj.basis === '/SQM'&#13;
				|| inputObj.basis === '/MBF' || inputObj.basis === '/MSF'&#13;
				|| inputObj.basis === '/LDM') {&#13;
			supportedBasis = true;&#13;
&#13;
			if (dimObj.dims.genericQty &amp;&amp; dimObj.dims.genericQtyUnit&#13;
					&amp;&amp; (dimObj.dims.genericQtyUnit === inputObj.basis)) {&#13;
				genericqty = dimObj.dims.genericQty;&#13;
				if (inputObj.minimumqty) {&#13;
					rateInputObj.baseRate.appliedMinQty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty : 0;&#13;
					genericqty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty&#13;
							: dimObj.dims.genericQty;							&#13;
				}&#13;
				totalAmt = inputObj.amount * genericqty;&#13;
				quantity = genericqty;&#13;
			} else if (dimObj.dims[inputObj.basis]) {&#13;
				genericqty = dimObj.dims[inputObj.basis];&#13;
				if (inputObj.minimumqty) {&#13;
					rateInputObj.baseRate.appliedMinQty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty : 0;&#13;
					genericqty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty&#13;
							: dimObj.dims.genericQty;&#13;
				}&#13;
				totalAmt = inputObj.amount * genericqty;&#13;
				quantity = genericqty;&#13;
			}&#13;
		}&#13;
&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == '/FLAT') {&#13;
			supportedBasis = true;&#13;
			totalAmt = inputObj.amount;&#13;
			quantity = 1;&#13;
		}&#13;
		&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == 'lps') {&#13;
			supportedBasis = true;&#13;
			totalAmt = inputObj.amount;&#13;
			quantity = 1;&#13;
	    }&#13;
	    &#13;
		if (dimObj.dims.wtInKG &amp;&amp; inputObj.wtConvRate) {&#13;
			supportedBasis = true;&#13;
			weight = dimObj.dims.wtInKG;&#13;
&#13;
			// GTN-25018 : Chargeable Weight scenario.&#13;
			volume = dimObj.dims.volInCBM;&#13;
			dimFactor = rateInputObj.dimFactor;&#13;
			dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
			volumetricWeight = 0.0;&#13;
			if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
				if (dimFactorConv === 'cm/kg') {&#13;
					volumetricWeight = (volume * 1000000) / dimFactor;&#13;
				} else if (dimFactorConv === 'in/lb') {&#13;
					volumetricWeight = (volume * 61024) / dimFactor;&#13;
					volumetricWeight = volumetricWeight * 0.45359237;&#13;
			    }&#13;
			}&#13;
			&#13;
			weight = (weight * inputObj.wtConvRate) &gt; (volumetricWeight  * inputObj.wtConvRate) ? weight&#13;
					: volumetricWeight;&#13;
&#13;
			if (inputObj.minWeight) {&#13;
				inputObj.appliedMinWeight = weight &lt; inputObj.minWeight ? inputObj.minWeight : 0;&#13;
				weight = weight &lt; inputObj.minWeight ? inputObj.minWeight&#13;
						: weight;&#13;
				inputObj.wtConvRate = 1;&#13;
			}&#13;
			quantity = weight * inputObj.wtConvRate;&#13;
			totalAmt = this.evaluateRateBands(weight, inputObj.amount,&#13;
					inputObj.wtConvRate);&#13;
		}&#13;
&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == '/WM') {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			volume = dimObj.dims.volInCBM;&#13;
			wmUnit = 0;&#13;
			supportedBasis = true;&#13;
			if (weight) {&#13;
				wmUnit = weight * inputObj.wtConvRate;&#13;
			}&#13;
			if (volume) {&#13;
				wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
			}&#13;
			if (inputObj.minWeight) {&#13;
				rateInputObj.baseRate.appliedMinWeight = wmUnit &lt; inputObj.minWeight ? inputObj.minWeight : 0;&#13;
				wmUnit = wmUnit &lt; inputObj.minWeight ? inputObj.minWeight&#13;
						: wmUnit;&#13;
				inputObj.wtConvRate = 1;&#13;
			}&#13;
			totalAmt = inputObj.amount * wmUnit;&#13;
			quantity = wmUnit;&#13;
		}&#13;
&#13;
		if (dimObj.dims.volInCBM &amp;&amp; inputObj.volConvRate) {&#13;
			supportedBasis = true;&#13;
			volume = dimObj.dims.volInCBM;&#13;
&#13;
			if (inputObj.minimumqty) {&#13;
				rateInputObj.baseRate.appliedMinQty = volume &lt; inputObj.minimumqty ? inputObj.minimumqty : 0;				&#13;
				volume = volume &lt; inputObj.minimumqty ? inputObj.minimumqty&#13;
						: volume;&#13;
				inputObj.volConvRate = 1;&#13;
			}&#13;
			tempAmt = this.evaluateRateBands(volume, inputObj.amount,&#13;
					inputObj.volConvRate);&#13;
			totalAmt = totalAmt &gt; tempAmt ? totalAmt : tempAmt;						&#13;
			quantity = volume * inputObj.volConvRate;&#13;
			&#13;
		} else if ((dimObj.dims.dstInMile&#13;
				|| (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) || rateInputObj.distance)&#13;
				&amp;&amp; inputObj.dstConvRate) {&#13;
			supportedBasis = true;&#13;
			distance = 0.0;&#13;
			if (dimObj.dims.dstInMile) {&#13;
				distance = dimObj.dims.dstInMile;&#13;
			} else if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {&#13;
				distance = this.getEffectiveDistance(dimObj);&#13;
			} else {&#13;
				distance = rateInputObj.distance;&#13;
			}&#13;
			quantity = distance * inputObj.dstConvRate;&#13;
			totalAmt = this.evaluateRateBands(distance, inputObj.amount,&#13;
					inputObj.dstConvRate);&#13;
		}&#13;
&#13;
		if (inputObj.basis === 'pricingbands') {&#13;
			supportedBasis = true;&#13;
			bandAmt = 0.0;&#13;
			mUnit = 0.0;&#13;
			convRate = 0.0;&#13;
			amount = 0.0;&#13;
			&#13;
			if (inputObj.isdeficitpricing) {&#13;
				if (inputObj.wtConvRate) {&#13;
					mUnit = dimObj.dims.wtInKG;&#13;
					convRate = inputObj.wtConvRate;&#13;
					&#13;
					// GTN-27410 : Chargeable Weight scenario for TL and LTL.&#13;
					volume = dimObj.dims.volInCBM;&#13;
					dimFactor = rateInputObj.dimFactor;&#13;
					dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
					volumetricWeight = 0.0;&#13;
					if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
						if (dimFactorConv === 'cm/kg') {&#13;
							volumetricWeight = (volume * 1000000) / dimFactor;&#13;
						} else if (dimFactorConv === 'in/lb') {&#13;
							volumetricWeight = (volume * 61024) / dimFactor;&#13;
							volumetricWeight = volumetricWeight * 0.45359237;&#13;
						}&#13;
					}&#13;
&#13;
					mUnit = (mUnit * inputObj.wtConvRate) &gt; (volumetricWeight * convRate) ? mUnit&#13;
							: volumetricWeight;&#13;
&#13;
					if (inputObj.minWeight) {&#13;
						mUnit = mUnit &lt; inputObj.minWeight ? inputObj.minWeight&#13;
								: mUnit;&#13;
						inputObj.wtConvRate = 1;&#13;
						convRate = 1;&#13;
					}&#13;
				} else if (inputObj.volConvRate) {&#13;
					mUnit = dimObj.dims.volInCBM;&#13;
					convRate = inputObj.volConvRate;&#13;
				} else if (inputObj.dstConvRate) {&#13;
					mUnit = dimObj.dims.dstInMile;&#13;
					convRate = inputObj.dstConvRate;&#13;
				} else {&#13;
					if (inputObj.weightbreakbasis&#13;
							&amp;&amp; (inputObj.weightbreakbasis === '/package'&#13;
									|| inputObj.weightbreakbasis === '/pallet'&#13;
									|| inputObj.weightbreakbasis === '/unit'&#13;
									|| inputObj.weightbreakbasis === '/carton'&#13;
									|| inputObj.weightbreakbasis === '/LNM'&#13;
									|| inputObj.weightbreakbasis === '/SQM'&#13;
									|| inputObj.weightbreakbasis === '/MBF'&#13;
									|| inputObj.weightbreakbasis === '/MSF' &#13;
									|| inputObj.weightbreakbasis === '/LDM')) {&#13;
						if (dimObj.dims.genericQty&#13;
								&amp;&amp; dimObj.dims.genericQtyUnit&#13;
								&amp;&amp; (dimObj.dims.genericQtyUnit === inputObj.weightbreakbasis)) {&#13;
							mUnit = dimObj.dims.genericQty;&#13;
							convRate = 1;&#13;
						} else if (dimObj.dims[inputObj.weightbreakbasis]) {&#13;
							mUnit = dimObj.dims[inputObj.weightbreakbasis];&#13;
							convRate = 1;&#13;
						}&#13;
					}&#13;
				}&#13;
&#13;
				if (inputObj.isdeficitpricing === 'yes') {&#13;
					if (rateInputObj.rateBands&#13;
							&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
						for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
							if (((mUnit * convRate) &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
									|| ((mUnit * convRate) &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; (mUnit * convRate) &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
								if (rateInputObj.rateBands[i].upperbreak == 999999999) {&#13;
								    if (inputObj.weightbreakbasis == 'lps') {&#13;
										bandAmt = rateInputObj.rateBands[i].amount;&#13;
									} else {&#13;
										bandAmt = rateInputObj.rateBands[i].amount&#13;
											* mUnit * convRate;																&#13;
									}&#13;
									quantity = mUnit * convRate;										&#13;
									amount = rateInputObj.rateBands[i].actualCost;&#13;
								} else {&#13;
									if (inputObj.weightbreakbasis == 'lps') {&#13;
										bandAmt = rateInputObj.rateBands[i + 1].amount;&#13;
									} else {&#13;
										bandAmt = rateInputObj.rateBands[i + 1].amount&#13;
												* rateInputObj.rateBands[i + 1].lowerbreak&#13;
												* convRate;							&#13;
									}&#13;
									actualPrice = 0.0;&#13;
									if (inputObj.weightbreakbasis == 'lps') {&#13;
										actualPrice = rateInputObj.rateBands[i].amount;&#13;
									} else {&#13;
										actualPrice = rateInputObj.rateBands[i].amount&#13;
												* mUnit * convRate;						&#13;
									}&#13;
									&#13;
									if (bandAmt &gt; actualPrice) {&#13;
										bandAmt = actualPrice;&#13;
										amount = rateInputObj.rateBands[i].actualCost;&#13;
									} else {&#13;
										amount = rateInputObj.rateBands[i + 1].actualCost;&#13;
									}&#13;
									quantity = mUnit * convRate;		&#13;
								}&#13;
								break;&#13;
							}&#13;
						}&#13;
					}&#13;
				} else {&#13;
					if (rateInputObj.rateBands&#13;
							&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
						for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
							if (((mUnit * convRate) &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
									|| ((mUnit * convRate) &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; (mUnit * convRate) &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
								if (inputObj.weightbreakbasis == 'lps') {&#13;
									bandAmt = rateInputObj.rateBands[i].amount;&#13;
								} else {&#13;
									bandAmt = rateInputObj.rateBands[i].amount&#13;
										* mUnit * convRate;								&#13;
								}&#13;
								quantity = mUnit * convRate;&#13;
								amount = rateInputObj.rateBands[i].actualCost;&#13;
								break;&#13;
							}&#13;
						}&#13;
					}&#13;
				}&#13;
			}		&#13;
			&#13;
			rateInputObj.baseRate.actualCost = parseFloat(amount);&#13;
			totalAmt = bandAmt;&#13;
		}&#13;
&#13;
		if (!supportedBasis) {&#13;
			switch (inputObj.basis) {&#13;
			case '/container':&#13;
			case '/CBM':&#13;
			case '/WM':&#13;
			case '/kg':&#13;
			case '/lb':&#13;
			case '/ton':&#13;
			case '/MI':&#13;
			case '/KM':&#13;
				rateInputObj.baseRate.supportedBasis = true;&#13;
				supportedBasis = true;&#13;
			}&#13;
		}&#13;
&#13;
		if (!supportedBasis) {&#13;
			totalAmt = inputObj.amount;&#13;
			rateInputObj.baseRate.quantity = 1;&#13;
		}&#13;
		&#13;
		if (quantity) {&#13;
			rateInputObj.baseRate.quantity = quantity;&#13;
		}		&#13;
&#13;
		if (inputObj.minAmount) {&#13;
			rateInputObj.baseRate.appliedMin = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount : 0;&#13;
			totalAmt = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount&#13;
					: totalAmt;&#13;
		}&#13;
		&#13;
		if (inputObj.maxAmount) {&#13;
			rateInputObj.baseRate.appliedMax = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount : 0;&#13;
			totalAmt = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount&#13;
					: totalAmt;&#13;
		}&#13;
	&#13;
		rateInputObj.baseRate.supportedBasis = supportedBasis;&#13;
		rateInputObj.baseRate.total = parseFloat(totalAmt);&#13;
	};&#13;
&#13;
	this.getEffectiveDistance = function(dimObj) {&#13;
		distance = 0.0;&#13;
		var jsonBaseRate = rateInputObj.baseRate;&#13;
		for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
			origStop = dimObj.stopOffs[i].stop;&#13;
			if (origStop.indexOf('__') &gt; 0) {&#13;
				origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
			}&#13;
			destStop = dimObj.stopOffs[i + 1].stop;&#13;
			if (destStop.indexOf('__') &gt; 0) {&#13;
				destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
			}&#13;
			if (origStop == destStop) {&#13;
				distance = distance + 0.01;&#13;
				continue;&#13;
			}&#13;
			if (!distanceMatrix[origStop]&#13;
					|| !distanceMatrix[origStop][destStop]) {&#13;
				if (rateInputObj.distance) {&#13;
					return rateInputObj.distance;&#13;
				} else {&#13;
					return 9999999;&#13;
				}&#13;
			}&#13;
			distval = distanceMatrix[origStop][destStop];&#13;
			distance = distance + distanceMatrix[origStop][destStop];&#13;
		}&#13;
		return distance;&#13;
	};&#13;
&#13;
	this.evaluateRateBands = function(totalDim, rateAmount, ConvRate) {&#13;
		totalBandAmt = 0.0;&#13;
		if (rateInputObj.rateBands &amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
			actualCost = 0.0;&#13;
			for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
				if ((totalDim &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
						|| (totalDim &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; totalDim &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
					totalBandAmt = (rateInputObj.baseRate.basis === '/FLAT') ? rateInputObj.rateBands[i].amount&#13;
							: (rateInputObj.rateBands[i].amount * totalDim * ConvRate);&#13;
					actualCost = rateInputObj.rateBands[i].actualCost;&#13;
					break;&#13;
				}&#13;
			}&#13;
			if (totalBandAmt == 0 &amp;&amp; rateInputObj.baseRate) {&#13;
				totalBandAmt = rateInputObj.baseRate.basis === '/kg' ? (rateInputObj.baseRate.amount&#13;
						* totalDim * ConvRate)&#13;
						: rateInputObj.baseRate.amount;&#13;
				actualCost = rateInputObj.baseRate.amount;&#13;
			}&#13;
			rateInputObj.baseRate.actualCost = actualCost;&#13;
		} else {&#13;
			totalBandAmt = (rateInputObj.baseRate.basis === '/FLAT') ? rateAmount&#13;
					: rateAmount * totalDim * ConvRate;&#13;
		}&#13;
		return parseFloat(totalBandAmt);&#13;
	};&#13;
&#13;
	this.evaluateAccessorials = function(dimObj) {&#13;
		if (rateInputObj.accessorials) {&#13;
			for (var i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				if (rateInputObj.accessorials[i]) {&#13;
					accObj = rateInputObj.accessorials[i];&#13;
					quantity = 0;&#13;
					totalAmt = 0;&#13;
					if (accObj.basis === '/container') {&#13;
						if (rateInputObj.baseRate.equipmentType&#13;
								&amp;&amp; dimObj.dims[rateInputObj.baseRate.equipmentType]) {&#13;
							totalAmt = accObj.amount&#13;
									* dimObj.dims[rateInputObj.baseRate.equipmentType];&#13;
							quantity =  dimObj.dims[rateInputObj.baseRate.equipmentType];&#13;
						} else {&#13;
							rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
							continue;&#13;
						}&#13;
					}&#13;
&#13;
					if (accObj.basis === '%') {&#13;
						netfreightcostelems = rateInputObj.netfreightcostelems;&#13;
						if (netfreightcostelems&#13;
								&amp;&amp; netfreightcostelems.length &gt; 0) {&#13;
							totalSurchargeAmount = 0;&#13;
							for (var j = 0; j &lt; netfreightcostelems.length; j++) {&#13;
								netFreightSurcharge = netfreightcostelems[j];&#13;
								surchargeAmount = this.getSurchargeAmount(&#13;
										dimObj, netFreightSurcharge);&#13;
								totalSurchargeAmount = totalSurchargeAmount&#13;
										+ surchargeAmount;&#13;
							}&#13;
&#13;
							baseRate = rateInputObj.baseRate.total;&#13;
							totalAmt = ((baseRate + totalSurchargeAmount) * accObj.amount) / 100;&#13;
						} else {&#13;
							baseRate = rateInputObj.baseRate.total;&#13;
							totalAmt = (baseRate * accObj.amount) / 100;&#13;
						}&#13;
					}&#13;
&#13;
					if (accObj.basis === '/delivery'&#13;
							|| accObj.basis === '/entry'&#13;
							|| accObj.basis === '/shipment') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
&#13;
					if (accObj.basis === '/package'&#13;
							|| accObj.basis === '/pallet'&#13;
							|| accObj.basis === '/unit'&#13;
							|| accObj.basis === '/carton'&#13;
							|| accObj.basis === '/LNM'&#13;
							|| accObj.basis === '/SQM'&#13;
							|| accObj.basis === '/MSF'&#13;
							|| accObj.basis === '/MBF'&#13;
							|| accObj.basis === '/LDM') {&#13;
						if (dimObj.dims.genericQty&#13;
								&amp;&amp; dimObj.dims.genericQtyUnit&#13;
								&amp;&amp; (dimObj.dims.genericQtyUnit === accObj.basis)) {&#13;
							totalAmt = accObj.amount * dimObj.dims.genericQty;&#13;
							quantity = dimObj.dims.genericQty;&#13;
						} else if (dimObj.dims[accObj.basis]) {&#13;
							totalAmt = accObj.amount&#13;
									* dimObj.dims[accObj.basis];&#13;
						}&#13;
					}&#13;
&#13;
					if (dimObj.dims.wtInKG &amp;&amp; accObj.wtConvRate) {&#13;
						weight = dimObj.dims.wtInKG;&#13;
&#13;
						// GTN-25018 : Chargeable Weight scenario.&#13;
						if (accObj.calculatedWeightBasis&#13;
								&amp;&amp; accObj.calculatedWeightBasis === 'Chargeable Weight') {&#13;
							dimFactor = rateInputObj.dimFactor;&#13;
							dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
							volumetricWeight = 0.0;&#13;
							if (dimFactor &gt; 0 &amp;&amp; dimFactorConv&#13;
									&amp;&amp; dimObj.dims.volInCBM) {&#13;
								if (dimFactorConv === 'cm/kg') {&#13;
									volumetricWeight = (dimObj.dims.volInCBM * 1000000)&#13;
											/ dimFactor;&#13;
								} else if (dimFactorConv === 'in/lb') {&#13;
									volumetricWeight = (dimObj.dims.volInCBM * 61024)&#13;
											/ dimFactor;&#13;
									volumetricWeight = volumetricWeight * 0.45359237;&#13;
								}&#13;
							}&#13;
							weight = (weight * accObj.wtConvRate) &gt; (volumetricWeight * accObj.wtConvRate) ? weight&#13;
									: volumetricWeight;&#13;
						}&#13;
&#13;
						if (accObj.minWeight) {&#13;
							weight = weight &lt; accObj.minWeight ? accObj.minWeight&#13;
									: weight;&#13;
						}&#13;
						totalAmt = accObj.amount * weight * accObj.wtConvRate;&#13;
						quantity = weight * accObj.wtConvRate;&#13;
					}&#13;
					if (dimObj.dims.volInCBM &amp;&amp; accObj.volConvRate) {&#13;
						volume = dimObj.dims.volInCBM;&#13;
						if (accObj.minVolume) {&#13;
							volume = volume &lt; accObj.minVolume ? accObj.minVolume&#13;
									: volume;&#13;
						}&#13;
						totalAmt = accObj.amount * volume * accObj.volConvRate;&#13;
						quantity = volume * accObj.volConvRate;&#13;
					}&#13;
&#13;
					if ((dimObj.dims.dstInMile || (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1))&#13;
							&amp;&amp; accObj.dstConvRate) {&#13;
						distance = 0.0;&#13;
						if (dimObj.dims.dstInMile) {&#13;
							distance = dimObj.dims.dstInMile;&#13;
						} else {&#13;
							distance = this.getEffectiveDistance(dimObj);&#13;
						}&#13;
						totalAmt = accObj.amount * distance&#13;
								* accObj.dstConvRate;&#13;
						quantity = distance * accObj.dstConvRate;&#13;
					}&#13;
&#13;
					if (accObj.basis == '/FLAT') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
					if (accObj.amount &amp;&amp; accObj.basis == '/WM') {&#13;
						weight = dimObj.dims.wtInKG;&#13;
						volume = dimObj.dims.volInCBM;&#13;
						wmUnit = 0;&#13;
						if (weight) {&#13;
							wmUnit = weight * accObj.wtConvRate;&#13;
						}&#13;
						if (volume) {&#13;
							wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
						}&#13;
						totalAmt = accObj.amount * wmUnit;&#13;
						quantity = wmUnit;&#13;
					}&#13;
&#13;
					if (rateInputObj.baseRate.basis == accObj.basis&#13;
							&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
						totalAmt = accObj.amount;&#13;
						accObj.supportedBasis = true;&#13;
					} else if (rateInputObj.baseRate.basis != accObj.basis&#13;
							&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
						totalAmt = 0;&#13;
					}&#13;
&#13;
					if (accObj.minAmount) {&#13;
						rateInputObj.accessorials[i].appliedMin = totalAmt &lt; accObj.minAmount ? accObj.minAmount : 0;&#13;
						totalAmt = totalAmt &lt; accObj.minAmount ? accObj.minAmount&#13;
								: totalAmt;&#13;
					}&#13;
					if (accObj.maxAmount) {&#13;
						rateInputObj.accessorials[i].appliedMax = totalAmt &gt; accObj.maxAmount ? accObj.maxAmount : 0;&#13;
						totalAmt = totalAmt &gt; accObj.maxAmount ? accObj.maxAmount&#13;
								: totalAmt;&#13;
					}&#13;
&#13;
					if (!dimObj.dims.isHazMat &amp;&amp; accObj.isHazMat) {&#13;
						totalAmt = 0;&#13;
					}&#13;
&#13;
					rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
					if (accObj.basis == '/stop') {&#13;
						rateInputObj.stopOffTotal = parseFloat(totalAmt);&#13;
						if(totalAmt &amp;&amp; totalAmt &gt;0) {&#13;
							rateInputObj.accessorials[i].quantity = 1;&#13;
						}&#13;
					} else{&#13;
						rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
						if(totalAmt &amp;&amp; totalAmt &gt;0) {&#13;
							rateInputObj.accessorials[i].quantity = quantity;&#13;
						}&#13;
					}&#13;
				}&#13;
			}&#13;
		}&#13;
	};&#13;
&#13;
	this.getSurchargeAmount = function(dimObj, surcharge) {&#13;
		surchargeAmount = 0;&#13;
		inputObj = rateInputObj.baseRate;&#13;
		quantity = 0;&#13;
		if (surcharge.basis === '/container') {&#13;
			if (inputObj.equipmentType &amp;&amp; dimObj.dims[inputObj.equipmentType]) {&#13;
				surchargeAmount = surcharge.amount&#13;
						* dimObj.dims[inputObj.equipmentType];&#13;
				quantity = dimObj.dims[inputObj.equipmentType];&#13;
			} else {&#13;
				quantity = 1;&#13;
				return surchargeAmount;&#13;
			}&#13;
		}&#13;
&#13;
		if (surcharge.basis === '/delivery' || surcharge.basis === '/entry'&#13;
				|| surcharge.basis === '/shipment') {&#13;
			surchargeAmount = surcharge.amount;&#13;
			quantity = 1;&#13;
		}&#13;
&#13;
		if (surcharge.basis === '/package' || surcharge.basis === '/pallet'&#13;
				|| surcharge.basis === '/unit' || surcharge.basis === '/carton'&#13;
				|| surcharge.basis === '/LNM' || surcharge.basis === '/SQM'&#13;
				|| surcharge.basis === '/MSF' || surcharge.basis === '/MBF'&#13;
				|| accObj.basis === '/LDM') {&#13;
			if (dimObj.dims.genericQty &amp;&amp; dimObj.dims.genericQtyUnit&#13;
					&amp;&amp; (dimObj.dims.genericQtyUnit === surcharge.basis)) {&#13;
				surchargeAmount = surcharge.amount * dimObj.dims.genericQty;&#13;
				quantity = dimObj.dims.genericQty;&#13;
			} else if (dimObj.dims[surcharge.basis]) {&#13;
				surchargeAmount = surcharge.amount&#13;
						* dimObj.dims[surcharge.basis];&#13;
				quantity = dimObj.dims[surcharge.basis];&#13;
			}&#13;
		}&#13;
&#13;
		if (surcharge.amount &amp;&amp; surcharge.basis == '/FLAT') {&#13;
			surchargeAmount = surcharge.amount;&#13;
			quantity = 1;&#13;
		}&#13;
&#13;
		if (dimObj.dims.wtInKG &amp;&amp; surcharge.wtConvRate) {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			// GTN-25018 : Chargeable Weight scenario.&#13;
			if (surcharge.calculatedWeightBasis&#13;
					&amp;&amp; surcharge.calculatedWeightBasis === 'Chargeable Weight') {&#13;
				dimFactor = rateInputObj.dimFactor;&#13;
				dimFactorConv = rateInputObj.dimFactorConv;&#13;
				volumetricWeight = 0.0;&#13;
				if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
					if (dimFactorConv === 'cm/kg') {&#13;
						volumetricWeight = (dimObj.dims.volInCBM * 1000000)&#13;
								/ dimFactor;&#13;
					} else if (dimFactorConv === 'in/lb') {&#13;
						volumetricWeight = (dimObj.dims.volInCBM * 61024)&#13;
								/ dimFactor;&#13;
						volumetricWeight = volumetricWeight * 0.45359237;&#13;
					}&#13;
				}&#13;
				weight = (weight * surcharge.wtConvRate) &gt; (volumetricWeight * surcharge.wtConvRate) ? weight&#13;
						: volumetricWeight;&#13;
			}&#13;
			if (surcharge.minWeight) {&#13;
				surcharge.appliedWeight = weight &lt; surcharge.minWeight ? surcharge.minWeight : weight;&#13;
				weight = weight &lt; surcharge.minWeight ? surcharge.minWeight&#13;
						: weight;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * weight * surcharge.wtConvRate;&#13;
			quantity = weight * surcharge.wtConvRate;&#13;
		}&#13;
&#13;
		if (dimObj.dims.volInCBM &amp;&amp; surcharge.volConvRate) {&#13;
			volume = dimObj.dims.volInCBM;&#13;
			if (surcharge.minVolume) {&#13;
				surcharge.appliedVolume = volume &lt; surcharge.minVolume ? surcharge.minVolume : volume;&#13;
				volume = volume &lt; surcharge.minVolume ? surcharge.minVolume&#13;
						: volume;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * volume * surcharge.volConvRate;&#13;
			quantity = volume * surcharge.volConvRate;&#13;
		}&#13;
&#13;
		if (surcharge.amount &amp;&amp; surcharge.basis == '/WM') {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			volume = dimObj.dims.volInCBM;&#13;
			wmUnit = 0;&#13;
			if (weight) {&#13;
				wmUnit = weight * surcharge.wtConvRate;&#13;
			}&#13;
			if (volume) {&#13;
				wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
			}&#13;
			if (surcharge.minWeight) {&#13;
				surcharge.appliedWeight = wmUnit &lt; surcharge.minWeight ? surcharge.minWeight : wmUnit;&#13;
				wmUnit = wmUnit &lt; surcharge.minWeight ? surcharge.minWeight&#13;
						: wmUnit;&#13;
				surcharge.wtConvRate = 1;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * wmUnit;&#13;
			quantity = wmUnit;&#13;
		}&#13;
&#13;
		if ((dimObj.dims.dstInMile || (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1))&#13;
				&amp;&amp; surcharge.dstConvRate) {&#13;
			if (surcharge.basis == '/stop') {&#13;
				surchargeAmount = surcharge.amount * dimObj.stopOffs.length&#13;
					* surcharge.dstConvRate;&#13;
				quantity = dimObj.stopOffs.length * surcharge.dstConvRate;&#13;
			} else {&#13;
				distance = 0.0;&#13;
				if (dimObj.dims.dstInMile) {&#13;
					distance = dimObj.dims.dstInMile;&#13;
				} else {&#13;
					distance = this.getEffectiveDistance(dimObj);&#13;
				}&#13;
				surchargeAmount = surcharge.amount * distance&#13;
						* surcharge.dstConvRate;&#13;
				quantity = distance * surcharge.dstConvRate;&#13;
			}&#13;
		}&#13;
&#13;
		if (rateInputObj.baseRate.basis == inputObj.basis&#13;
				&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
			surchargeAmount = surcharge.amount;&#13;
			surcharge.supportedBasis = true;&#13;
			rateInputObj.accessorials[i].quantity = quantity;&#13;
		} else if (rateInputObj.baseRate.basis != surcharge.basis&#13;
				&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
			surchargeAmount = 0;&#13;
		}&#13;
&#13;
		if (surcharge.minAmount) {&#13;
			surcharge.appliedMin = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount : 0;			&#13;
			surchargeAmount = surchargeAmount &lt; surcharge.minAmount ? surcharge.minAmount&#13;
					: surchargeAmount;&#13;
		}&#13;
		if (surcharge.maxAmount) {&#13;
			surcharge.appliedMax = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount : 0;&#13;
			surchargeAmount = surchargeAmount &gt; surcharge.maxAmount ? surcharge.maxAmount&#13;
					: surchargeAmount;&#13;
		}&#13;
		return surchargeAmount;&#13;
	}&#13;
&#13;
	this.evaluateStopOff = function(stopOffs) {&#13;
		stopOffAmt = 0.0;&#13;
		if (rateInputObj.stopBands &amp;&amp; stopOffs &amp;&amp; stopOffs.length &gt; 2) {&#13;
			numOfStopOffs = stopOffs.length - 2;&#13;
			remainingStopOffs = numOfStopOffs;&#13;
			previousEnd = 0;&#13;
&#13;
			for (i = 0; i &lt; rateInputObj.stopBands.length; i++) {&#13;
				start = rateInputObj.stopBands[i].start;&#13;
				end = rateInputObj.stopBands[i].stop;&#13;
				if (numOfStopOffs &gt; end) {&#13;
					stopOffAmt = stopOffAmt&#13;
							+ (rateInputObj.stopBands[i].costPerStop * (end - previousEnd));&#13;
					remainingStopOffs -= (end - previousEnd);&#13;
					previousEnd = end;&#13;
&#13;
				} else if (numOfStopOffs &gt;= start &amp;&amp; numOfStopOffs &lt;= end) {&#13;
					stopOffAmt = stopOffAmt&#13;
							+ (rateInputObj.stopBands[i].costPerStop * remainingStopOffs);&#13;
					break;&#13;
				}&#13;
			}&#13;
			rateInputObj.stopOffTotal = parseFloat(stopOffAmt);&#13;
		}&#13;
&#13;
	};&#13;
	&#13;
	this.getDistanceSplit = function(dimObj) {&#13;
		distance = 0.0;&#13;
		var distObj = [];&#13;
		var distArr = [];&#13;
		var jsonBaseRate = rateInputObj.baseRate;&#13;
		if(dimObj.stopOffs) {&#13;
			for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
				origStop = dimObj.stopOffs[i].stop;&#13;
				if (origStop.indexOf('__') &gt; 0) {&#13;
					origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
				}&#13;
				destStop = dimObj.stopOffs[i + 1].stop;&#13;
				if (destStop.indexOf('__') &gt; 0) {&#13;
					destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
				}&#13;
				if (origStop == destStop) {&#13;
					distance = distance + 0.01;&#13;
					distObj = {Distance:distance, OrigStop:origStop, DestStop:destStop};&#13;
					distArr.push(distObj);&#13;
					continue;&#13;
				}&#13;
				if (!distanceMatrix[origStop]&#13;
						|| !distanceMatrix[origStop][destStop]) {&#13;
					if (rateInputObj.distance) {&#13;
						return rateInputObj.distance;&#13;
					} else {&#13;
						return 9999999;&#13;
					}&#13;
				}&#13;
				distval = distanceMatrix[origStop][destStop];&#13;
				distObj = {Distance:distval, OrigStop:origStop, DestStop:destStop};&#13;
				distArr.push(distObj);&#13;
				distance = distance + distanceMatrix[origStop][destStop];&#13;
			}&#13;
		}&#13;
			jsonBaseRate["distArr"] = distArr;&#13;
		return jsonBaseRate;&#13;
	};&#13;
	&#13;
	this.evaluateTransitTime = function(dimObj) {&#13;
		transittime = 0.0;&#13;
		if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {		&#13;
			if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {&#13;
				for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
					origStop = dimObj.stopOffs[i].stop;&#13;
					if (origStop.indexOf('__') &gt; 0) {&#13;
						origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
					}&#13;
					destStop = dimObj.stopOffs[i + 1].stop;&#13;
					if (destStop.indexOf('__') &gt; 0) {&#13;
						destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
					}&#13;
					if (origStop == destStop) {&#13;
						transittime = transittime + 0.01;&#13;
						continue;&#13;
					}&#13;
					if (!transitTimeMatrix[origStop]&#13;
							|| !transitTimeMatrix[origStop][destStop]) {&#13;
							transittime = parseFloat(9999999);&#13;
							break;&#13;
					}&#13;
					transittime = transittime + transitTimeMatrix[origStop][destStop];&#13;
				}&#13;
			} &#13;
		}	&#13;
		rateInputObj.baseRate.transittime = parseFloat(transittime);		&#13;
	};&#13;
};var constraints = {/*##*/resources:{"9":{"max_weight":28250.0,"max_cube":28.0,"max_qty":1.0},"10":{"max_weight":28800.0,"max_cube":56.0,"max_qty":2.0},"11":{"max_cube":75.0,"max_qty":2.532,"max_weight":27700.0},"12":{"max_cube":90.0,"max_weight":30200.0,"max_qty":2.886},"13":{"max_qty":2.0},"17":{"max_qty":1.0},"18":{"max_weight":30200.0,"max_qty":2.25,"max_cube":65.0},"19":{"max_cube":75.0,"max_qty":2.532,"max_weight":27700.0},"20":{"max_weight":30200.0,"max_cube":90.0,"max_qty":2.886},"21":{"max_qty":2.0},"25":{"max_cube":28.0,"max_weight":27490.0,"max_qty":1.0},"26":{"max_cube":59.0,"max_qty":2.0,"max_weight":28600.0},"27":{"max_weight":27700.0,"max_cube":75.0,"max_qty":2.532},"34":{"max_cube":63.0,"max_weight":29700.0,"max_qty":2.25},"41":{"max_qty":1.0},"42":{"max_qty":2.0},"49":{"max_qty":1.0},"50":{"max_qty":2.0},"57":{"max_qty":1.0},"58":{"max_qty":2.0},"65":{"max_weight":27490.0,"max_cube":28.0,"max_qty":1.0},"66":{"max_qty":2.0,"max_weight":28600.0,"max_cube":59.0},"74":{"max_weight":29700.0,"max_cube":63.0,"max_qty":2.25},"83":{"max_qty":2.532},"84":{"max_weight":18100.0,"max_qty":2.886,"max_cube":85.0},"85":{"max_qty":2.65,"max_weight":20000.0,"max_cube":95.0},"137":{"max_qty":1.0},"138":{"max_qty":2.0},"146":{"max_qty":2.25},"147":{"max_qty":2.532},"153":{"max_cube":33.0},"154":{"max_cube":33.0},"798":{"max_weight":24000.0,"max_qty":2.0},"799":{"max_cube":20.0,"max_qty":2.0,"max_weight":25000.0},"901":{"max_qty":2.0,"max_weight":24000.0},"2057":{"max_cube":28.0,"max_weight":28250.0,"max_qty":1.0},"2065":{"max_qty":1.0},"2066":{"max_cube":65.0,"max_qty":2.25,"max_weight":30200.0},"2073":{"max_qty":1.0,"max_weight":28250.0,"max_cube":28.0},"2074":{"max_cube":59.0,"max_weight":28600.0,"max_qty":2.0},"2082":{"max_cube":65.0,"max_qty":2.25,"max_weight":30200.0}},/*##*/locations:{1073752374:{},1073752376:{},1073752375:{},1073752377:{},1073752373:{},1073752378:{},1073751324:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073751373:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073751374:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073746927:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073751323:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073753423:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},660684:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},660688:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},660685:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073752424:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073752425:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073750324:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073750323:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}}}}; evaluateConstraints = function evaluateConstraints(dimObj) {
	var resourceData = this.id.split("_");
	var resource = resourceData[1];
	if ((resource in constraints.resources)) {
		if ("max_weight" in constraints.resources[resource]
				&amp;&amp; dimObj.dims.wtInKG &gt; constraints.resources[resource].max_weight)
			return false;
		if ("max_cube" in constraints.resources[resource]
				&amp;&amp; dimObj.dims.volInCBM &gt; constraints.resources[resource].max_cube)
			return false;
	}
	return true;
};


var carrier = function(resourceInputObj){
	this.evaluateCarrierConstraint = function (dimObj){
	resource = resourceInputObj.id;
    if (!(resource in constraints.resources))
		return true;
	
	if ("maxstops" in constraints.resources[resource]
			&amp;&amp; dimObj.stopOffs.length  &gt; constraints.resources[resource].maxstops ){
		return false;
		}
	if ("max_distance" in constraints.resources[resource]
			&amp;&amp; isMaxDistanceCrossed(dimObj, resource)) {
		return false;
	}
	if ("maximum_single_hours" in constraints.resources[resource]
			&amp;&amp; isMaxDriveTimeCrossed(dimObj, resource)) {
		return false;
	}
	if ("maximum_out_of_route_miles" in constraints.resources[resource]
			&amp;&amp; isMaxOutOfRouteMile(dimObj, resource)) {
		return false;
	}
		return true;
	}
};



isMaxOutOfRouteMile = function isMaxOutOfRouteMile(dimObj, resourceid) {
	var totalDistance = 0;
	var maxOutOfRouteMile = 0;
	try {
		totalDistance = distanceMatrix[sliceStopOffData(dimObj.stopOffs[0].stop)][sliceStopOffData(dimObj.stopOffs[dimObj.stopOffs.length - 1].stop)];
	} catch (err) {
		warn('error distanceMatrix  does not exist in  isMaxOutOfRouteMile');
	}
	;

	try {
		maxOutOfRouteMile = constraints.resources[resourceid].maximum_out_of_route_miles;

	} catch (err) {
		warn('maxOutOfRouteMile  does not exist in  for resource' + resourceid);
		maxOutOfRouteMile = 0;
	}
	;

	var totalDriveDistance = getTotalDriveDistance(dimObj);
	
	if (constraints.resources[resourceid].maxoutofroutemilesunit == "%") {
		maxOutOfRouteMile = ((maxOutOfRouteMile / 100) * totalDistance)
				+ totalDistance;
	} else {
		maxOutOfRouteMile = maxOutOfRouteMile + totalDistance;
		
		if (!isNaN(maxOutOfRouteMile)) {
			// warn('maxOutOfRouteMile==' + maxOutOfRouteMile);
			// warn('totalDriveDistance=' + totalDriveDistance+' for
			// resourceid'+ resourceid);

		}
	}
	if (totalDriveDistance &gt; maxOutOfRouteMile) {
		// warn('totalDriveDistance =='+totalDriveDistance
		// +'-'+maxOutOfRouteMile);
		return true;
	}
	// warn('in else totalDriveDistance =='+totalDriveDistance
	// +'-'+maxOutOfRouteMile);
	return false;
};

isMaxDistanceCrossed = function isMaxDistanceCrossed(dimObj, resourceid) {
	var totalDriveDistance = getTotalDriveDistance(dimObj);
	if (totalDriveDistance &gt; constraints.resources[resourceid].max_distance) {
		return true;
	}
	return false;
};

isMaxDriveTimeCrossed = function isMaxDriveTimeCrossed(dimObj, resourceid) {
	var totalDriveTime = getTotalDriveTime(dimObj);
	if (totalDriveTime &gt; constraints.resources[resourceid].maximum_single_hours) {
		return true;
	}
	return false;
};

getTotalDriveDistance = function getTotalDriveDistance(dimObj) {
	var totalDriveDistance = 0;
	try {
		for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);
			var distance = distanceMatrix[stop1][stop2]
			if (!isNaN(distance)) {
				totalDriveDistance = totalDriveDistance + (distance);
			} else {
				warn('can give wrong data,since');
				warn(' no dtm between ' + stop1 + '-' + stop2);
			}
		}
	} catch (err) {
		warn('distanceMatrix  does not exist for ' + stop1 + '-' + stop2);
	}
	;
	return totalDriveDistance;
};

getTotalDriveTime = function getTotalDriveTime(dimObj) {
	var totalDriveTime = 0;
	try {
		for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);
			totalDriveTime = totalDriveTime + (transitTimeMatrix[stop1][stop2]);
		}
	} catch (err) {
		warn('transitTimeMatrix  does not exist for ' + stop1 + '-' + stop2);
	}
	;
	return totalDriveTime;
};

sliceStopOffData = function sliceStopOffData(stopOffData) {
	var stop = stopOffData;
	try {

		if (stopOffData.indexOf('__') &gt; 0) {
			stop = stopOffData.slice(0, stopOffData.indexOf('__'));
		}
	} catch (err) {
		warn('stopOffData incorrect for ' + stopOffData);
	}
	return JSON.parse(stop);
};

getProcessingTime = function getProcessingTime(dimObj) {

	if (typeof dimObj.stopOffs[1] == 'undefined') {
		return 1000000;
	}
	trasitTime = 0;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop
					.indexOf('TRANSPORT') &gt; -1))) {
		return 99999;
	}
	var finalloadthroughput = 0;
	finalloadthroughput = getFinalLoadThroughput(dimObj);
	if (isNaN(finalloadthroughput)) {
		finalloadthroughput = 0;
	}

	var finalunloadthroughput = 0;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);
	if (isNaN(finalunloadthroughput)) {
		finalunloadthroughput = 0;
	}

	try {
		trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]
				+ finalunloadthroughput;
		if (isNaN(trasitTime)) {
			warn('errcause no transittime for ' + stop1 + '-- ' + stop2);
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getOceanAirProcessingTime = function getOceanAirProcessingTime(dimObj) {
	return this.transitTime;
	};

getFinalThroughput = function getFinalThroughput(dimObj) {
	var finalTroughputResult = '';

	for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length); stopIndex++) {
		var stop = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
		if (dimObj.dims.wtInKG != 0) {
			if ((stop in constraints.locations)
					&amp;&amp; ("Throughput" in constraints.locations[stop])) {
				finalTroughputResult = finalTroughputResult + stop + '--'
						+ ((constraints.locations[stop].Throughput)) + '--';
			}
		}
	}
	return finalTroughputResult;
};

getDistanceBetweenStops = function getDistanceBetweenStops(dimObj) {
	var distancebetweenstops = "";
	for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
		try {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);

			distancebetweenstops = distancebetweenstops + "#" + stop1 + "_"
					+ stop2;
			distancebetweenstops = distancebetweenstops + "#"
					+ distanceMatrix[stop1][stop2];
		} catch (err) {
			warn('err cause no distancebetweenstops ' + stop1 + ' -- ' + stop2);
		}
	}
	return distancebetweenstops;
};

getFinalLoadThroughput = function getFinalLoadThroughput(dimObj) {
	var varloadthroughput = 0;
	stop1 = sliceStopOffData(dimObj.stopOffs[0].stop);
	try {
		if (stop1 in constraints.locations
				&amp;&amp; ("LOADING" in constraints.locations[stop1])) {

			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop1].LOADING["weight_time"].division_factor)
						* constraints.locations[stop1].LOADING["weight_time"].time_factor;
				varloadthroughput = varweightthrouput;
			}

			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop1].LOADING["volume_time"].division_factor)
						* constraints.locations[stop1].LOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varloadthroughput) {
					varloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop1].max_variable_time != 0) {
			if (constraints.locations[stop1].max_variable_time &lt; varloadthroughput) {
				varloadthroughput = constraints.locations[stop1].max_variable_time;
			}
		}
		return constraints.locations[stop1].fixed_time + varloadthroughput;
	} catch (err) {
		warn('err calculating load throughput for stop ' + stop1 + '-- '
				+ err.message);
		return 0;
	}
};

getFinalUnLoadThroughput = function getFinalUnLoadThroughput(dimObj) {
	var varunloadthroughput = 0;
	stop2 = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
	try {
		if (stop2 in constraints.locations
				&amp;&amp; "UNLOADING" in constraints.locations[stop2]) {
			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop2].UNLOADING["weight_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["weight_time"].time_factor;

				varunloadthroughput = varweightthrouput;
			}
			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop2].UNLOADING["volume_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varunloadthroughput) {
					varunloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop2].max_variable_time != 0) {
			if (constraints.locations[stop2].max_variable_time &lt; varunloadthroughput) {
				varunloadthroughput = constraints.locations[stop2].max_variable_time;
			}
		}
		// warn('Unloading varunloadthroughput ' + varunloadthroughput + ' stop2
		// ' + stop2+' fixed_time ' + constraints.locations[stop2].fixed_time);
		return constraints.locations[stop2].fixed_time + varunloadthroughput;
	} catch (err) {
		warn('err calculating Unload throughput for stop ' + stop2 + '-- '
				+ err.message);
		return 0;
	}
};

getOceanAirLoadingProcessingTime = function getOceanAirLoadingProcessingTime(dimObj) {

	trasitTime = 0;
	var finalloadthroughput = 0;
	finalloadthroughput = getFinalLoadThroughput(dimObj);
	if (isNaN(finalloadthroughput)) {
		finalloadthroughput = 0;
	}

	try {
		trasitTime = finalloadthroughput;
		if (isNaN(trasitTime)) {
			warn('failed');
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getOceanAirProcessingTime = function getOceanAirProcessingTime(dimObj) {
return this.transitTime;
};

getOceanAirUnloadingProcessingTime = function getOceanAirUnloadingProcessingTime(dimObj) {

trasitTime = 0;
	var finalunloadthroughput = 0;
	finalunloadthroughput = getFinalUnLoadThroughput1(dimObj);
	if (isNaN(finalunloadthroughput)) {
		finalunloadthroughput = 0;
	}

	/*
	 * warn('finalloadthroughput ' + finalloadthroughput + '
	 * finalunloadthroughput ' + finalunloadthroughput + ' matrix ' +
	 * transitTimeMatrix[stop1][stop2]);
	 */
	try {
		trasitTime = finalunloadthroughput;
		if (isNaN(trasitTime)) {
			warn('unloading failed');
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getFinalUnLoadThroughput1 = function getFinalUnLoadThroughput1(dimObj) {
	var varunloadthroughput = 0;
	var stop2;
	//warn(" calculating Unload throughput for stop ' + s");
	try {
	//warn(dimObj.stopOffs);
	stop2 = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
	if(typeof stop2 == 'undefined')
	  return 0;
	  
		if (stop2 in constraints.locations
				&amp;&amp; "UNLOADING" in constraints.locations[stop2]) {
			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop2].UNLOADING["weight_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["weight_time"].time_factor;

				varunloadthroughput = varweightthrouput;
			}
			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop2].UNLOADING["volume_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varunloadthroughput) {
					varunloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop2].max_variable_time != 0) {
			if (constraints.locations[stop2].max_variable_time &lt; varunloadthroughput) {
				varunloadthroughput = constraints.locations[stop2].max_variable_time;
			}
		}
		// warn('Unloading varunloadthroughput ' + varunloadthroughput + ' stop2
		// ' + stop2+' fixed_time ' + constraints.locations[stop2].fixed_time);
		return constraints.locations[stop2].fixed_time + varunloadthroughput;
	} catch (err) {
		//warn('err calculating Unload throughput for stop ' + stop2 + '-- '
				//+ err.message);
			//	warn("catch");
		return 0;
	}
};</globalScript><applyConsolidationRules ttype="STRING">Yes</applyConsolidationRules><requirementConsolidationLevel ttype="I32">0</requirementConsolidationLevel><resourceToAllocationMaps ttype="MAP"><item><key ttype="STRING">28290_9_SC</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">28290_85_SC</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">28290_19_S</key><value ttype="DOUBLE">2.532</value></item><item><key ttype="STRING">1012_10_SC</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1012_85_SC</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">28290_84_SC</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1003_10_S</key><value ttype="DOUBLE">2.0</value></item><item><key ttype="STRING">1003_256_A</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1003_10_SC</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1012_84_SC</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">28290_10_SC</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1003_901_LT</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1012_18_S</key><value ttype="DOUBLE">2.25</value></item><item><key ttype="STRING">28290_256_A</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1008_256_A</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1003_9_S</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1003_0_S</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1006_256_A</key><value ttype="DOUBLE">1.0</value></item><item><key ttype="STRING">1004_256_A</key><value ttype="DOUBLE">1.0</value></item></resourceToAllocationMaps></supplyChain><requirements ttype="MAP"><item><key ttype="STRING">2122313211</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">2122313211</id><name ttype="STRING">2122313211</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">10.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">54.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">1073752373__START_REQUIREMENT</source><destination ttype="STRING">1073752378__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1539496800</earliestDepartTime><earliestDeliveryTime ttype="I64">1539496860</earliestDeliveryTime><latestDepartTime ttype="I64">1540620000</latestDepartTime><latestDeliveryTime ttype="I64">1540965600</latestDeliveryTime><compatibilityClass ttype="STRING">20311</compatibilityClass><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">2122313198</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">2122313198</id><name ttype="STRING">2122313198</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">10.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">5.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">1073752374__START_REQUIREMENT</source><destination ttype="STRING">1073752376__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1539496800</earliestDepartTime><earliestDeliveryTime ttype="I64">1539496860</earliestDeliveryTime><latestDepartTime ttype="I64">1540620000</latestDepartTime><latestDeliveryTime ttype="I64">1540965600</latestDeliveryTime><compatibilityClass ttype="STRING">20311</compatibilityClass><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">2122313199</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">2122313199</id><name ttype="STRING">2122313199</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">10.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">5.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">16.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">1073752375__START_REQUIREMENT</source><destination ttype="STRING">1073752377__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1539496800</earliestDepartTime><earliestDeliveryTime ttype="I64">1539496860</earliestDeliveryTime><latestDepartTime ttype="I64">1540620000</latestDepartTime><latestDeliveryTime ttype="I64">1540965600</latestDeliveryTime><compatibilityClass ttype="STRING">20311</compatibilityClass><freightClass ttype="STRING">Class 50</freightClass></value></item></requirements><modelingLanguageVersion ttype="STRING">3.2</modelingLanguageVersion><resourceAllocationCheck ttype="I32">1</resourceAllocationCheck></OptimizationInstance>