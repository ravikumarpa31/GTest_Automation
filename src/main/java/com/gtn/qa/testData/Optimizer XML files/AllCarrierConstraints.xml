<OptimizationInstance struct="OptimizationInstance" ttype="STRUCT"><id ttype="STRING">Max_outofRoute_test_2122310963</id><supplyChain struct="SupplyChain" ttype="STRUCT"><id ttype="STRING">Network</id><name ttype="STRING">supplyChainName12345</name><steps ttype="MAP"><item><key ttype="STRING">660257__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__1073742873__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073742873__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073742873__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747985__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747985__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747985 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35305__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 35305__TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_35305_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">15280__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15280__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15280__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15207__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748025__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747987__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747987__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747987 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747978__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747978__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747978</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747978__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747978_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073747983__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747983__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747983__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747983_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747991__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747991__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747991__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747991_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073742875__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 15207__TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">15207__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_15207_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748026__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 15207</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">15207__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_15207_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073747982__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747982__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747982 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073747982__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748029__15280__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__15280__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__15280__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15280__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15280__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15280__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747992__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747992__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747992</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747992__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747992_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073748027__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__1073744926__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073744926__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073744926__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__15280__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__15280__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__15280__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747991__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747991__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747991 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748030__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__1073742873__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073742873__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073742873__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747993__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747993__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747993__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747993_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748027__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747978__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747978__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747978__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747978_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748026__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747980__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747980__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747980</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747980__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747980_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">35305__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747981__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747981__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747981 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073747981__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748025__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747979__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747979__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747979__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747979__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747979_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748025__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747986__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747986__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747986</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747986__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747986_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">35304__15280__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__15280__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__15280__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748025__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747981__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747981__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747981__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747981__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747981_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073742874__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742874__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742874__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747985__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747985__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747985__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747985__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747985_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660320__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15280__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15280__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15280__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742875__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747983__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747983__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747983__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747983__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747983_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35304__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747988__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747988__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747988</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747988__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747988_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">660318__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073744926__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073744926__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073744926__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073744926__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073744926__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073744926__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 660257 TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">660257__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748029__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073748029 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660320__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073748027</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073748027__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073748027_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073748030__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742873__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742873__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742873__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073744926__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073744926__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073744926__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747986__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747986__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747986__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747986__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747986_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747989__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747989__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747989 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073747989__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747984__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747984__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747984__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747984__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747984_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660314__1073742874__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073742874__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073742874__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742873__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742873__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742873__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073748030</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073748030__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073748030_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073747984__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747984__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747984</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747984__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747984_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">660314__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742875__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__15280__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__15280__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__15280__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">15207__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">15207__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747979__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747979__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747979__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747979_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747981__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747981__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747981__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747981_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35304__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">15207__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748030__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">15207__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__1073744926__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073744926__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073744926__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748025__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">35305__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748029__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">35305__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742873__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742873__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742873__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748029__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15280__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15280__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15280__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15207__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__15207__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__15207__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__15207__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748025__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073744926__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073744926__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073744926__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15280__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15280__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15280__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073744926__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073744926__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073744926__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742874__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742874__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742874__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__15207__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__15207__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__15207__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 15207__TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_15207_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35305__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742875__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747993__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747993__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747993__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747993__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747993_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747982__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747982__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747982__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747982_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748025__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747987__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747987__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747987</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747987__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747987_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073748029__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073748029</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073748029__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073748029_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073748026__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 660257__TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_660257_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeRanges ttype="LIST"><item struct="RestrictionAttributeRange" ttype="STRUCT"><name ttype="STRING">Temperature</name><min ttype="DOUBLE">10.0</min><max ttype="DOUBLE">30.0</max></item></attributeRanges></restrictionAttributes><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748024__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747981__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747981__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747981</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747981__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747981_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">660314__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747992__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747992__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747992__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747992_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660257__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742874__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742874__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742874__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15280__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15280__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15280__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742873__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742873__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742873__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747985__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747985__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747985</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747985__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747985_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073748027__15280__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__15280__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__15280__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">35305__HOLD_REQUIREMENT</item><item ttype="STRING">15207__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">15207__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">35305__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747980__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747980__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747980__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747980_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35304__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747990__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747990__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747990__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747990__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747990_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748027__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__15207__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__15207__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__15207__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742873__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742873__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742873__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">35305__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748027__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">35305__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073742873__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073742873__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073742873__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">2920__3044__121801116__SC______MULTI_STOP__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2920__3044__121801116__SC______MULTI_STOP__1003</id><narrativeDescription ttype="STRING">2920__3044__121801116__SC______MULTI_STOP__1003__42GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">_10</item><item ttype="STRING">1003_10_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":15.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[{"amount":0.016826518593303044,"wtConvRate":1.0,"calculatedWeightBasis":"Actual Weight","includeInNetFreight":null,"basis":"\/kg","isHazMat":null,"distArr":""}],"dimFactorConv":"cm\/kg","rateId":"121801116"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">3408249600</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742874__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742874__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742874__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742874__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742874__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742874__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742875__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748025__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747991__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747991__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747991</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747991__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747991_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073747978__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747978__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747978 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35305__1073742874__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073742874__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073742874__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748025__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">2920__1000092__121801114__SC______MULTI_STOP__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2920__1000092__121801114__SC______MULTI_STOP__1003</id><narrativeDescription ttype="STRING">2920__1000092__121801114__SC______MULTI_STOP__1003__42GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">_10</item><item ttype="STRING">1003_10_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":2.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[{"amount":0.016826518593303044,"wtConvRate":1.0,"calculatedWeightBasis":"Actual Weight","includeInNetFreight":null,"basis":"\/kg","isHazMat":null,"distArr":""}],"dimFactorConv":"cm\/kg","rateId":"121801114"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">3408249600</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15280__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15280__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15280__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073742874__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073742874__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073742874__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747993__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747993__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747993 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660295__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__1073744926__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073744926__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073744926__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747980__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747980__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747980 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660295__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">660257__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748029__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">660257__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__1073742873__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073742873__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073742873__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747989__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747989__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747989__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747989__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747989_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35305__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747983__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747983__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747983</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747983__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747983_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">35304__15207__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__15207__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__15207__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">15207__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748029__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">15207__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747988__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747988__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747988 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747988__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747988__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747988__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747988__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747988_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660310__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660310__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 660310</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">660310__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_660310_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073748029__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15280__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15280__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15280__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747979__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747979__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747979 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073747979__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747987__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747987__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747987__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747987__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747987_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35304__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073744926__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073744926__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073744926__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660310__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660310__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 660310__TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_660310_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747990__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747990__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747990__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747990_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660314__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747983__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747983__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747983 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660310__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660310__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 660310 TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748025__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747987__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747987__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747987__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747987_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35304__1073744926__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073744926__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073744926__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747979__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747979__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747979</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747979__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747979_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073748028__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 1073748028 </narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073748028_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/></value></item><item><key ttype="STRING">1073748027__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15207__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__1073742874__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073742874__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073742874__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">660257__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748030__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">660257__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15280__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15280__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15280__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15280__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15280__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15280__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747984__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747984__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747984 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073744926__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073744926__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073744926__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073744926__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073744926__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073744926__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748027__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15207__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747986__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747986__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747986__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747986_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073744926__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073744926__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073744926__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__1073742874__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073742874__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073742874__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 35305 TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35304__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__15280__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__15280__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__15280__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747989__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747989__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747989</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747989__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747989_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">660318__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__15207__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__15207__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__15207__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748030__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660318__1073742874__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660318__1073742874__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660318__1073742874__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">660257__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">35305__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">660257__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__15280__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__15280__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__15280__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">3044__1000092__121801115__SC______MULTI_STOP__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">3044__1000092__121801115__SC______MULTI_STOP__1003</id><narrativeDescription ttype="STRING">3044__1000092__121801115__SC______MULTI_STOP__1003__42GP</narrativeDescription><type ttype="I32">6</type><resourcesAvailable ttype="SET"><item ttype="STRING">_10</item><item ttype="STRING">1003_10_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[{"amount":0.016826518593303044,"wtConvRate":1.0,"calculatedWeightBasis":"Actual Weight","includeInNetFreight":null,"basis":"\/kg","isHazMat":null,"distArr":""}],"dimFactorConv":"cm\/kg","rateId":"121801115"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1483257600</rateValidityStart><rateValidityEnd ttype="I64">3408249600</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748025__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__1073742875__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073742875__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073742875__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742875__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">15207__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748027__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">15207__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__1073742873__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073742873__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073742873__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742874__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742874__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742874__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742875__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747993__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747993__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747993</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747993__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747993_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073748028__15207__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__15207__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__15207__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747988__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747988__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747988__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747988_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748030__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__1073742874__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073742874__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073742874__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747992__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747992__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747992 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073747992__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747991__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747991__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747991__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747991__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747991_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748024__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742873__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742873__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742873__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15207__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35305__1073744926__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__1073744926__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__1073744926__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742875__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073742873__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073742873__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073742873__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15207__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748025__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747980__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747980__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747980__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747980__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747980_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748029__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747982__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747982__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747982</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747982__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747982_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">660257__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747989__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747989__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747989__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747989_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747985__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747985__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747985__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747985_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748028__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747986__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747986__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747986 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073747986__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">35305__15207__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35305__15207__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35305__15207__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747990__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747990__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073747990</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073747990__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747990_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">660257__1073748027__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073748027__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073748027__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748025__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742875__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">35305__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748030__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">35305__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747982__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747982__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747982__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747982__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747982_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748025__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748025__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748025__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15207__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073748030 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073742875__1073748029__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__1073748029__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__1073748029__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748023__1073748024__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748023__1073748024__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748023__1073748024__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747990__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747990__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073747990 00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660295__35305__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__35305__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__35305__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747978__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747978__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747978__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747978__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747978_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748027__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__15280__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__15280__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__15280__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073748027 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">660320__15280__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__15280__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__15280__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073748028__END_REQUIREMENT</item><item ttype="STRING">660257__HOLD_REQUIREMENT</item></nextSteps><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073748027__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">660257__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742873__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742873__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742873__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__660314__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__660314__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__660314__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__660295__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__660295__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__660295__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073747984__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747984__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073747984__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073747984_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748028__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742875__660320__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742875__660320__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742875__660320__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">35304__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">35304__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">35304__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660295__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660295__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660295__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748029__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748029__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748029__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073742874__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073742874__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073742874__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660320__1073748030__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660320__1073748030__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660320__1073748030__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748030__1073748025__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748030__1073748025__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748030__1073748025__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__660318__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__660318__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">15207__660318__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748027__1073748023__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748027__1073748023__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748027__1073748023__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748028__1073748026__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__1073748026__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__1073748026__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">15207__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15207__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 15207 TR53,29PF,22GP,42GP,42UT,M5GP,22GH,00A0,45RN,22TD,22RN,ROOS,P2GP,42RT,49PF,TR48,L5GH,45GP,22RT,42RN,45GH,TR45,00B0,BBOS,42GH,25GP,42TD,L5GP,P5GP,LCOS,22UT,45RT</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">15207__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">35305__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__15207__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073748030__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748029__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__660257__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">15207__35305__2122310292__SC______MULTI_STOP__32314</item><item ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073747992__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073747992__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073747992__00B0,29PF,22GP,25GP,22RN,22UT,22RT,22GH,22TD,49PF,42RT,45GP,45GH,45RN,45RT,42RN,42UT,42GP,42GH,42TD,L5GP,L5GH,TR45,M5GP,TR48,P5GP,P2GP,TR53,BBOS,LCOS,ROOS,00A0,RAP0,RKN0,00A1,TERA,TORA,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073747992__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073747992_Operating_hour</item></operatingHours><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073748028__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748028__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748028__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748026__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748026__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748026__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660257__1073748028__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660257__1073748028__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660257__1073748028__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__1073742873__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__1073742873__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__1073742873__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">660314__15280__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">660314__15280__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">660314__15280__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073748024__35304__2122310292__SC______MULTI_STOP__32314</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073748024__35304__2122310292__SC______MULTI_STOP__32314</id><narrativeDescription ttype="STRING">1073748024__35304__2122310292__SC______MULTI_STOP__32314__45GP</narrativeDescription><type ttype="I32">6</type><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><resourcesAvailable ttype="SET"><item ttype="STRING">_18</item><item ttype="STRING">32314_18_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":5.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_18"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"2122310292"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><rateValidityStart ttype="I64">1925020800</rateValidityStart><rateValidityEnd ttype="I64">1956556800</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"32314_18"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item></steps><operatingTimes ttype="MAP"><item><key ttype="STRING">RECEIVING_1073747993_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747993_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_660257_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_660257_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747993_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747993_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073748029_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073748029_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747988_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747988_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747981_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747981_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747988_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747988_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747978_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747978_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073748027_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073748027_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747987_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747987_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747989_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747989_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747982_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747982_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747979_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747979_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747992_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747992_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_660310_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_660310_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747979_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747979_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747978_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747978_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747987_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747987_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747985_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747985_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747991_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747991_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_35305_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_35305_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747991_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747991_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747984_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747984_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747984_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747984_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747982_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747982_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747983_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747983_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747980_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747980_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073748030_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073748030_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747989_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747989_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747980_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747980_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747992_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747992_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747986_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747986_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073747990_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073747990_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747985_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747985_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747990_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747990_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073748028_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073748028_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747983_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747983_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747986_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747986_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_15207_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_15207_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_15207_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_15207_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073747981_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073747981_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_660310_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_660310_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">06:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">05:59:59</endTime></weekDayHours></item></openTimeRange></value></item></operatingTimes><unitDimensions ttype="MAP"><item><key ttype="STRING">LINEARMETER</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">LINEARMETER</id><dimension ttype="I32">10</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/LNM</id><name ttype="STRING">544</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">WEIGHT</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">WEIGHT</id><dimension ttype="I32">5</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">wtInKG</id><name ttype="STRING">33</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">PACKAGE</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">PACKAGE</id><dimension ttype="I32">12</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/package</id><name ttype="STRING">155</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CUSTOM</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CUSTOM</id><dimension ttype="I32">6</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">NumberOfTOS</id><name ttype="STRING">100001</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">VOLUME</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">VOLUME</id><dimension ttype="I32">4</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">volInCBM</id><name ttype="STRING">81</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CURRENCY</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CURRENCY</id><dimension ttype="I32">0</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">Dollar</id><name ttype="STRING">840</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">PALLET</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">PALLET</id><dimension ttype="I32">7</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/pallet</id><name ttype="STRING">169</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CARTON</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CARTON</id><dimension ttype="I32">8</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/carton</id><name ttype="STRING">159</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">SQUAREMETER</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">SQUAREMETER</id><dimension ttype="I32">11</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/SQM</id><name ttype="STRING">181</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">UNIT</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">UNIT</id><dimension ttype="I32">9</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/unit</id><name ttype="STRING">152</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item></unitDimensions><resources ttype="MAP"><item><key ttype="STRING">1003_10_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_10_SC</id><capacities ttype="LIST"/><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_10_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">_18</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_18</id><capacities ttype="LIST"/><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_18"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">_10</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_10</id><capacities ttype="LIST"/><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_10"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">32314_18_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">32314_18_SC</id><capacities ttype="LIST"/><restrictionAttributes struct="RestrictionAttributes" ttype="STRUCT"><attributeSets ttype="LIST"><item struct="RestrictionAttributeSet" ttype="STRUCT"><name ttype="STRING">Forklift</name><values ttype="LIST"><item ttype="STRING">Yes</item></values></item></attributeSets></restrictionAttributes><scriptedConstraint ttype="STRING">(resourceObj= {"id":"32314_18_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item></resources><globalScript ttype="STRING">distanceMatrix = {"6251":{"6251":0.01,"6253":1298.16,"660286":347.66,"660331":228.5,"15303":5283.78,"16169":5283.78,"16171":5283.78,"16986":5283.78,"16987":5283.78,"34825":398.0,"1073742876":5283.78,"1073744873":5283.78,"1073746923":5283.78},"6253":{"660331":620.0,"34825":620.0,"6251":1298.16,"6253":0.01,"660286":1098.3,"15303":5438.09,"16169":5438.09,"16171":5438.09,"16986":5438.09,"16987":5438.09,"1073742876":5438.09,"1073744873":5438.09,"1073746923":5438.09},"1073744873":{"6251":5283.78,"6253":5438.09,"15303":0.01,"16169":0.01,"16171":0.01,"16986":0.01,"16987":0.01,"34825":5161.07,"660286":5563.53,"660331":5383.25,"1073742876":0.01,"1073744873":0.01,"1073746923":0.01},"1073742873":{"35304":6109.4,"35305":7394.38,"660257":7817.0,"660295":4389.27,"660314":7815.83,"660318":6228.9,"660320":5259.29},"1073742874":{"35304":6109.4,"35305":7394.38,"660257":7817.0,"660295":4389.27,"660314":7815.83,"660318":6228.9,"660320":5259.29},"1073742875":{"35304":6109.4,"35305":7394.38,"660257":7817.0,"660295":4389.27,"660314":7815.83,"660318":6228.9,"660320":5259.29,"1073748027":5991.03,"1073748028":6225.07,"1073748029":6020.27,"1073748030":6046.66},"15280":{"660295":4389.27,"660314":7815.83,"660318":6228.9,"660320":5259.29,"35304":6109.4,"35305":7394.38,"1073748027":5991.03,"1073748028":6225.07,"1073748029":6020.27,"1073748030":6046.66},"16171":{"15303":0.01,"16169":0.01,"6251":5283.78,"6253":5438.09,"16171":0.01,"660286":5563.53,"660331":5383.25,"16986":0.01,"16987":0.01,"34825":5161.07,"1073742876":0.01,"1073744873":0.01,"1073746923":0.01},"1073742876":{"6251":5283.78,"6253":5438.09,"15303":0.01,"16169":0.01,"16171":0.01,"16986":0.01,"16987":0.01,"34825":5161.07,"660286":5563.53,"660331":5383.25,"1073744873":0.01,"1073746923":0.01},"1073744926":{"35304":6109.4,"35305":7394.38,"660257":7817.0,"660295":4389.27,"660314":7815.83,"660318":6228.9,"660320":5259.29},"660257":{"35304":1747.55,"35305":445.91,"1073742873":7817.0,"1073742874":7817.0,"1073742875":7817.0,"1073744926":7817.0,"1073748023":1833.21,"1073748024":1820.26,"1073748025":1825.23,"1073748026":1816.45,"1073748027":1827.3,"1073748028":1594.54,"1073748029":1805.33,"1073748030":1771.62},"660314":{"15207":7815.83,"15280":7815.83,"35304":6899.98,"35305":6569.56,"1073742873":7815.83,"1073742874":7815.83,"1073742875":7815.83,"1073744926":7815.83,"1073748023":7241.53,"1073748024":7262.43,"1073748025":7261.81,"1073748026":7263.72,"1073748027":7231.28,"1073748028":7117.81,"1073748029":7119.76,"1073748030":7338.53},"660331":{"34825":620.0,"6253":620.0,"660286":180.299512997,"6251":228.5,"15303":5383.25,"16169":5383.25,"16171":5383.25,"16986":5383.25,"16987":5383.25,"1073742876":5383.25,"1073744873":5383.25,"1073746923":5383.25},"15303":{"6251":5283.78,"6253":5438.09,"15303":0.01,"660286":5563.53,"660331":5383.25,"16169":0.01,"16171":0.01,"16986":0.01,"16987":0.01,"34825":5161.07,"1073742876":0.01,"1073744873":0.01,"1073746923":0.01},"34825":{"660331":620.0,"6253":620.0,"6251":398.0,"15303":5161.07,"16169":5161.07,"16171":5161.07,"16986":5161.07,"16987":5161.07,"34825":0.01,"660286":439.24,"1073742876":5161.07,"1073744873":5161.07,"1073746923":5161.07},"15207":{"660295":4389.27,"660314":7815.83,"660318":6228.9,"660320":5259.29,"35304":6109.4,"35305":7394.38,"1073748027":5991.03,"1073748028":6225.07,"1073748029":6020.27,"1073748030":6046.66},"1073748030":{"1073748027":176.0,"1073748028":305.0,"1073748029":289.0,"1073748023":145.81,"1073748024":115.32,"1073748025":119.98,"1073748026":111.02,"15207":6046.66,"15280":6046.66,"35304":454.78,"35305":1365.21,"660257":1771.62,"660295":5297.15,"660314":7338.53,"660318":7700.81,"660320":6834.46,"1073742875":6046.66,"1073748030":0.01},"660318":{"15207":6228.9,"15280":6228.9,"35304":7250.96,"35305":7420.58,"1073742873":6228.9,"1073742874":6228.9,"1073742875":6228.9,"1073744926":6228.9,"1073748023":7567.78,"1073748024":7595.93,"1073748025":7593.07,"1073748026":7598.99,"1073748027":7559.4,"1073748028":7538.78,"1073748029":7451.1,"1073748030":7700.81},"1073748025":{"1073748024":5.64,"1073748023":26.2,"1073748026":11.9,"35304":362.85,"35305":1406.73,"660257":1825.23,"660295":5177.17,"660314":7261.81,"660318":7593.07,"660320":6717.36,"1073748027":33.68,"1073748028":239.54,"1073748029":145.17,"1073748030":119.98},"1073748024":{"1073748023":30.5,"1073748025":5.64,"1073748026":6.5,"35304":363.94,"35305":1402.05,"660257":1820.26,"660295":5181.85,"660314":7262.43,"660318":7595.93,"660320":6721.27,"1073748027":36.93,"1073748028":235.45,"1073748029":147.05,"1073748030":115.32},"1073748023":{"1073748024":30.5,"1073748025":26.2,"1073748026":43.3,"35304":341.71,"35305":1412.27,"660257":1833.21,"660295":5151.39,"660314":7241.53,"660318":7567.78,"660320":6691.16,"1073748027":10.53,"1073748028":242.21,"1073748029":122.49,"1073748030":145.81},"16169":{"15303":0.01,"6251":5283.78,"6253":5438.09,"16169":0.01,"16171":0.01,"660286":5563.53,"660331":5383.25,"16986":0.01,"16987":0.01,"34825":5161.07,"1073742876":0.01,"1073744873":0.01,"1073746923":0.01},"1073748029":{"1073748028":240.0,"1073748027":114.0,"1073748030":289.0,"1073748023":122.49,"1073748024":147.05,"1073748025":145.17,"1073748026":149.47,"15207":6020.27,"15280":6020.27,"35304":219.8,"35305":1374.41,"660257":1805.33,"660295":5062.53,"660314":7119.76,"660318":7451.1,"660320":6586.33,"1073742875":6020.27,"1073748029":0.01},"1073748028":{"1073748027":256.0,"1073748029":240.0,"1073748030":305.0,"1073748023":242.21,"1073748024":235.45,"1073748025":239.54,"1073748026":232.59,"15207":6225.07,"15280":6225.07,"35304":310.1,"35305":1170.7,"660257":1594.54,"660295":5233.01,"660314":7117.81,"660318":7538.78,"660320":6720.31,"1073742875":6225.07,"1073748028":0.01},"1073748027":{"1073748028":256.0,"1073748029":114.0,"1073748030":176.0,"1073748023":10.53,"1073748024":36.93,"1073748025":33.68,"1073748026":40.63,"15207":5991.03,"15280":5991.03,"35304":331.55,"35305":1405.57,"660257":1827.3,"660295":5146.56,"660314":7231.28,"660318":7559.4,"660320":6684.48,"1073742875":5991.03,"1073748027":0.01},"1073748026":{"1073748023":43.3,"1073748024":6.5,"1073748025":11.9,"35304":365.67,"35305":1398.55,"660257":1816.45,"660295":5186.21,"660314":7263.72,"660318":7598.99,"660320":6725.11,"1073748027":40.63,"1073748028":232.59,"1073748029":149.47,"1073748030":111.02},"1073743873":{"1073743873":0.01,"1073743874":942.71,"1073743875":633.32},"1073743875":{"1073743873":633.32,"1073743874":314.79,"1073743875":0.01},"660295":{"15207":4389.27,"15280":4389.27,"35304":4924.37,"35305":5751.05,"1073742873":4389.27,"1073742874":4389.27,"1073742875":4389.27,"1073744926":4389.27,"1073748023":5151.39,"1073748024":5181.85,"1073748025":5177.17,"1073748026":5186.21,"1073748027":5146.56,"1073748028":5233.01,"1073748029":5062.53,"1073748030":5297.15},"1073743874":{"1073743873":942.71,"1073743874":0.01,"1073743875":314.79},"1073746923":{"6251":5283.78,"6253":5438.09,"15303":0.01,"16169":0.01,"16171":0.01,"16986":0.01,"16987":0.01,"34825":5161.07,"660286":5563.53,"660331":5383.25,"1073742876":0.01,"1073744873":0.01,"1073746923":0.01},"35306":{"35308":70.07,"35306":0.01},"34832":{"34850":154.27,"34832":0.01},"34854":{"34852":54.12,"34854":0.01},"35305":{"35304":1304.85,"15207":7394.38,"15280":7394.38,"35305":0.01,"660257":445.91,"660295":5751.05,"660314":6569.56,"660318":7420.58,"660320":6923.96,"1073742873":7394.38,"1073742874":7394.38,"1073742875":7394.38,"1073744926":7394.38,"1073748023":1412.27,"1073748024":1402.05,"1073748025":1406.73,"1073748026":1398.55,"1073748027":1405.57,"1073748028":1170.7,"1073748029":1374.41,"1073748030":1365.21},"35304":{"660257":1747.55,"35305":1304.85,"15207":6109.4,"15280":6109.4,"35304":0.01,"660295":4924.37,"660314":6899.98,"660318":7250.96,"660320":6413.17,"1073742873":6109.4,"1073742874":6109.4,"1073742875":6109.4,"1073744926":6109.4,"1073748023":341.71,"1073748024":363.94,"1073748025":362.85,"1073748026":365.67,"1073748027":331.55,"1073748028":310.1,"1073748029":219.8,"1073748030":454.78},"34852":{"34854":54.12,"34852":0.01},"660320":{"15207":5259.29,"15280":5259.29,"35304":6413.17,"35305":6923.96,"1073742873":5259.29,"1073742874":5259.29,"1073742875":5259.29,"1073744926":5259.29,"1073748023":6691.16,"1073748024":6721.27,"1073748025":6717.36,"1073748026":6725.11,"1073748027":6684.48,"1073748028":6720.31,"1073748029":6586.33,"1073748030":6834.46},"660286":{"660331":180.299512997,"6251":347.66,"6253":1098.3,"15303":5563.53,"16169":5563.53,"16171":5563.53,"16986":5563.53,"16987":5563.53,"34825":439.24,"1073742876":5563.53,"1073744873":5563.53,"1073746923":5563.53},"34850":{"34832":154.27,"34850":0.01},"16987":{"15303":0.01,"16169":0.01,"16171":0.01,"16986":0.01,"6251":5283.78,"6253":5438.09,"16987":0.01,"660286":5563.53,"660331":5383.25,"34825":5161.07,"1073742876":0.01,"1073744873":0.01,"1073746923":0.01},"16986":{"15303":0.01,"16169":0.01,"16171":0.01,"6251":5283.78,"6253":5438.09,"16986":0.01,"16987":0.01,"660286":5563.53,"660331":5383.25,"34825":5161.07,"1073742876":0.01,"1073744873":0.01,"1073746923":0.01},"35308":{"35306":70.07,"35308":0.01}}
transitTimeMatrix = {"6251":{"6251":60,"6253":93420,"660286":25020,"660331":16440,"15303":380400,"16169":380400,"16171":380400,"16986":380400,"16987":380400,"34825":28620,"1073742876":380400,"1073744873":380400,"1073746923":380400},"6253":{"660331":30000,"34825":30000,"6251":93420,"6253":60,"660286":79020,"15303":391500,"16169":391500,"16171":391500,"16986":391500,"16987":391500,"1073742876":391500,"1073744873":391500,"1073746923":391500},"1073744873":{"6251":380400,"6253":391500,"15303":60,"16169":60,"16171":60,"16986":60,"16987":60,"34825":371580,"660286":400560,"660331":387540,"1073742876":60,"1073744873":60,"1073746923":60},"1073742873":{"35304":439860,"35305":532380,"660257":562800,"660295":316020,"660314":562680,"660318":448440,"660320":378660},"1073742874":{"35304":439860,"35305":532380,"660257":562800,"660295":316020,"660314":562680,"660318":448440,"660320":378660},"1073742875":{"35304":439860,"35305":532380,"660257":562800,"660295":316020,"660314":562680,"660318":448440,"660320":378660,"1073748027":431340,"1073748028":448200,"1073748029":433440,"1073748030":435300},"15280":{"660295":316020,"660314":562680,"660318":448440,"660320":378660,"35304":439860,"35305":532380,"1073748027":431340,"1073748028":448200,"1073748029":433440,"1073748030":435300},"16171":{"15303":60,"16169":60,"6251":380400,"6253":391500,"16171":60,"660286":400560,"660331":387540,"16986":60,"16987":60,"34825":371580,"1073742876":60,"1073744873":60,"1073746923":60},"1073742876":{"6251":380400,"6253":391500,"15303":60,"16169":60,"16171":60,"16986":60,"16987":60,"34825":371580,"660286":400560,"660331":387540,"1073744873":60,"1073746923":60},"1073744926":{"35304":439860,"35305":532380,"660257":562800,"660295":316020,"660314":562680,"660318":448440,"660320":378660},"660257":{"35304":125820,"35305":32100,"1073742873":562800,"1073742874":562800,"1073742875":562800,"1073744926":562800,"1073748023":131940,"1073748024":131040,"1073748025":131400,"1073748026":130740,"1073748027":131520,"1073748028":114780,"1073748029":129960,"1073748030":127500},"660314":{"15207":562680,"15280":562680,"35304":496740,"35305":472980,"1073742873":562680,"1073742874":562680,"1073742875":562680,"1073744926":562680,"1073748023":521340,"1073748024":522840,"1073748025":522840,"1073748026":522960,"1073748027":520620,"1073748028":512460,"1073748029":512580,"1073748030":528360},"660331":{"34825":30000,"6253":30000,"660286":12960,"6251":16440,"15303":387540,"16169":387540,"16171":387540,"16986":387540,"16987":387540,"1073742876":387540,"1073744873":387540,"1073746923":387540},"15303":{"6251":380400,"6253":391500,"15303":60,"660286":400560,"660331":387540,"16169":60,"16171":60,"16986":60,"16987":60,"34825":371580,"1073742876":60,"1073744873":60,"1073746923":60},"34825":{"660331":30000,"6253":30000,"6251":28620,"15303":371580,"16169":371580,"16171":371580,"16986":371580,"16987":371580,"34825":60,"660286":31620,"1073742876":371580,"1073744873":371580,"1073746923":371580},"15207":{"660295":316020,"660314":562680,"660318":448440,"660320":378660,"35304":439860,"35305":532380,"1073748027":431340,"1073748028":448200,"1073748029":433440,"1073748030":435300},"1073748030":{"1073748027":9780,"1073748028":16200,"1073748029":15660,"1073748023":10440,"1073748024":8280,"1073748025":8580,"1073748026":7980,"15207":435300,"15280":435300,"35304":32700,"35305":98280,"660257":127500,"660295":381360,"660314":528360,"660318":554400,"660320":492060,"1073742875":435300,"1073748030":60},"660318":{"15207":448440,"15280":448440,"35304":522060,"35305":534240,"1073742873":448440,"1073742874":448440,"1073742875":448440,"1073744926":448440,"1073748023":544860,"1073748024":546900,"1073748025":546660,"1073748026":547080,"1073748027":544260,"1073748028":542760,"1073748029":536460,"1073748030":554400},"1073748025":{"1073748024":600,"1073748023":1860,"1073748026":1080,"35304":26100,"35305":101280,"660257":131400,"660295":372720,"660314":522840,"660318":546660,"660320":483600,"1073748027":2400,"1073748028":17220,"1073748029":10440,"1073748030":8580},"1073748024":{"1073748023":2160,"1073748025":600,"1073748026":540,"35304":26160,"35305":100920,"660257":131040,"660295":373080,"660314":522840,"660318":546900,"660320":483900,"1073748027":2640,"1073748028":16920,"1073748029":10560,"1073748030":8280},"1073748023":{"1073748024":2160,"1073748025":1860,"1073748026":2580,"35304":24600,"35305":101640,"660257":131940,"660295":370860,"660314":521340,"660318":544860,"660320":481740,"1073748027":720,"1073748028":17400,"1073748029":8760,"1073748030":10440},"16169":{"15303":60,"6251":380400,"6253":391500,"16169":60,"16171":60,"660286":400560,"660331":387540,"16986":60,"16987":60,"34825":371580,"1073742876":60,"1073744873":60,"1073746923":60},"1073748029":{"1073748028":13080,"1073748027":6480,"1073748030":15660,"1073748023":8760,"1073748024":10560,"1073748025":10440,"1073748026":10740,"15207":433440,"15280":433440,"35304":15780,"35305":98940,"660257":129960,"660295":364500,"660314":512580,"660318":536460,"660320":474180,"1073742875":433440,"1073748029":60},"1073748028":{"1073748027":13800,"1073748029":13080,"1073748030":16200,"1073748023":17400,"1073748024":16920,"1073748025":17220,"1073748026":16740,"15207":448200,"15280":448200,"35304":22320,"35305":84240,"660257":114780,"660295":376740,"660314":512460,"660318":542760,"660320":483840,"1073742875":448200,"1073748028":60},"1073748027":{"1073748028":13800,"1073748029":6480,"1073748030":9780,"1073748023":720,"1073748024":2640,"1073748025":2400,"1073748026":2880,"15207":431340,"15280":431340,"35304":23820,"35305":101160,"660257":131520,"660295":370500,"660314":520620,"660318":544260,"660320":481260,"1073742875":431340,"1073748027":60},"1073748026":{"1073748023":2580,"1073748024":540,"1073748025":1080,"35304":26280,"35305":100680,"660257":130740,"660295":373380,"660314":522960,"660318":547080,"660320":484200,"1073748027":2880,"1073748028":16740,"1073748029":10740,"1073748030":7980},"1073743873":{"1073743873":60,"1073743874":67860,"1073743875":45540},"1073743875":{"1073743873":45540,"1073743874":22620,"1073743875":60},"660295":{"15207":316020,"15280":316020,"35304":354540,"35305":414060,"1073742873":316020,"1073742874":316020,"1073742875":316020,"1073744926":316020,"1073748023":370860,"1073748024":373080,"1073748025":372720,"1073748026":373380,"1073748027":370500,"1073748028":376740,"1073748029":364500,"1073748030":381360},"1073743874":{"1073743873":67860,"1073743874":60,"1073743875":22620},"1073746923":{"6251":380400,"6253":391500,"15303":60,"16169":60,"16171":60,"16986":60,"16987":60,"34825":371580,"660286":400560,"660331":387540,"1073742876":60,"1073744873":60,"1073746923":60},"35306":{"35308":5040,"35306":60},"34832":{"34850":11100,"34832":60},"34854":{"34852":3840,"34854":60},"35305":{"35304":93900,"15207":532380,"15280":532380,"35305":60,"660257":32100,"660295":414060,"660314":472980,"660318":534240,"660320":498480,"1073742873":532380,"1073742874":532380,"1073742875":532380,"1073744926":532380,"1073748023":101640,"1073748024":100920,"1073748025":101280,"1073748026":100680,"1073748027":101160,"1073748028":84240,"1073748029":98940,"1073748030":98280},"35304":{"660257":125820,"35305":93900,"15207":439860,"15280":439860,"35304":60,"660295":354540,"660314":496740,"660318":522060,"660320":461700,"1073742873":439860,"1073742874":439860,"1073742875":439860,"1073744926":439860,"1073748023":24600,"1073748024":26160,"1073748025":26100,"1073748026":26280,"1073748027":23820,"1073748028":22320,"1073748029":15780,"1073748030":32700},"34852":{"34854":3840,"34852":60},"660320":{"15207":378660,"15280":378660,"35304":461700,"35305":498480,"1073742873":378660,"1073742874":378660,"1073742875":378660,"1073744926":378660,"1073748023":481740,"1073748024":483900,"1073748025":483600,"1073748026":484200,"1073748027":481260,"1073748028":483840,"1073748029":474180,"1073748030":492060},"660286":{"660331":12960,"6251":25020,"6253":79020,"15303":400560,"16169":400560,"16171":400560,"16986":400560,"16987":400560,"34825":31620,"1073742876":400560,"1073744873":400560,"1073746923":400560},"34850":{"34832":11100,"34850":60},"16987":{"15303":60,"16169":60,"16171":60,"16986":60,"6251":380400,"6253":391500,"16987":60,"660286":400560,"660331":387540,"34825":371580,"1073742876":60,"1073744873":60,"1073746923":60},"16986":{"15303":60,"16169":60,"16171":60,"6251":380400,"6253":391500,"16986":60,"16987":60,"660286":400560,"660331":387540,"34825":371580,"1073742876":60,"1073744873":60,"1073746923":60},"35308":{"35306":5040,"35308":60}}
var rate = function(rateInputObj) {&#13;
&#13;
	this.evaluateByObj = function(dimObj) {&#13;
		result = this.evaluate(dimObj);&#13;
		if (!result || result.total &lt;= 0 || !rateInputObj.baseRate.total&#13;
				|| rateInputObj.baseRate.total &lt;= 0) {&#13;
			// warn(rateInputObj.rateId+':FinalTotalAmt='+result.total);&#13;
			// warn(rateInputObj.rateId+':Dimensions: '+JSON.stringify(dimObj));&#13;
			return 9999999;&#13;
		}&#13;
		return parseFloat(result.total);&#13;
	};&#13;
&#13;
	this.evaluate = function(dimObj) {&#13;
		this.evaluateBaseRate(dimObj);&#13;
		this.evaluateAccessorials(dimObj);&#13;
		this.evaluateStopOff(dimObj.stopOffs);&#13;
		this.getDistanceSplit(dimObj);&#13;
		this.evaluateTransitTime(dimObj);&#13;
		totalAmt = 0;&#13;
		baseRateBasis = rateInputObj.baseRate.basis;&#13;
		supportedBasis = rateInputObj.baseRate.supportedBasis;&#13;
		if (rateInputObj.baseRate.total) {&#13;
			totalAmt = rateInputObj.baseRate.total;&#13;
		}&#13;
		if (rateInputObj.accessorials) {&#13;
			for (i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				if (rateInputObj.accessorials[i]&#13;
						&amp;&amp; rateInputObj.accessorials[i].total&#13;
						&amp;&amp; (baseRateBasis || rateInputObj.accessorials[i].supportedBasis)) {&#13;
					totalAmt = totalAmt + rateInputObj.accessorials[i].total;&#13;
				}&#13;
			}&#13;
		}&#13;
		if (rateInputObj.stopBands &amp;&amp; rateInputObj.stopOffTotal) {&#13;
			totalAmt = totalAmt + rateInputObj.stopOffTotal;&#13;
		}&#13;
		rateInputObj.total = parseFloat(totalAmt);&#13;
		return rateInputObj;&#13;
	};&#13;
&#13;
	this.evaluateBaseRate = function(dimObj) {&#13;
		inputObj = rateInputObj.baseRate;&#13;
		calculateCW = rateInputObj.calculateCW;&#13;
		supportedBasis = false;&#13;
		totalAmt = 0;&#13;
		quantity = 0;&#13;
		if (inputObj.basis === '/container') {&#13;
			supportedBasis = true;&#13;
			if (inputObj.equipmentType &amp;&amp; dimObj.dims[inputObj.equipmentType]) {&#13;
				totalAmt = inputObj.amount&#13;
						* dimObj.dims[inputObj.equipmentType];&#13;
				quantity = dimObj.dims[inputObj.equipmentType];&#13;
			} else {&#13;
				return;&#13;
			}&#13;
		}&#13;
&#13;
		if (inputObj.basis === '/package' || inputObj.basis === '/pallet'&#13;
				|| inputObj.basis === '/unit' || inputObj.basis === '/carton'&#13;
				|| inputObj.basis === '/LNM' || inputObj.basis === '/SQM'&#13;
				|| inputObj.basis === '/MBF' || inputObj.basis === '/MSF'&#13;
				|| inputObj.basis === '/LDM') {&#13;
			supportedBasis = true;&#13;
&#13;
			if (dimObj.dims.genericQty &amp;&amp; dimObj.dims.genericQtyUnit&#13;
					&amp;&amp; (dimObj.dims.genericQtyUnit === inputObj.basis)) {&#13;
				genericqty = dimObj.dims.genericQty;&#13;
				if (inputObj.minimumqty) {&#13;
					rateInputObj.baseRate.appliedMinQty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty : 0;&#13;
					genericqty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty&#13;
							: dimObj.dims.genericQty;							&#13;
				}&#13;
				totalAmt = inputObj.amount * genericqty;&#13;
				quantity = genericqty;&#13;
			} else if (dimObj.dims[inputObj.basis]) {&#13;
				genericqty = dimObj.dims[inputObj.basis];&#13;
				if (inputObj.minimumqty) {&#13;
					rateInputObj.baseRate.appliedMinQty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty : 0;&#13;
					genericqty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty&#13;
							: dimObj.dims.genericQty;&#13;
				}&#13;
				totalAmt = inputObj.amount * genericqty;&#13;
				quantity = genericqty;&#13;
			}&#13;
		}&#13;
&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == '/FLAT') {&#13;
			supportedBasis = true;&#13;
			totalAmt = inputObj.amount;&#13;
			quantity = 1;&#13;
		}&#13;
		if (dimObj.dims.wtInKG &amp;&amp; inputObj.wtConvRate) {&#13;
			supportedBasis = true;&#13;
			weight = dimObj.dims.wtInKG;&#13;
&#13;
			// GTN-25018 : Chargeable Weight scenario.&#13;
			volume = dimObj.dims.volInCBM;&#13;
			dimFactor = rateInputObj.dimFactor;&#13;
			dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
			volumetricWeight = 0.0;&#13;
			if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
				if (dimFactorConv === 'cm/kg') {&#13;
					volumetricWeight = (volume * 1000000) / dimFactor;&#13;
				} else if (dimFactorConv === 'in/lb') {&#13;
					volumetricWeight = (volume * 61024) / dimFactor;&#13;
					volumetricWeight = volumetricWeight * 0.45359237;&#13;
			    }&#13;
			}&#13;
			&#13;
			weight = (weight * inputObj.wtConvRate) &gt; (volumetricWeight  * inputObj.wtConvRate) ? weight&#13;
					: volumetricWeight;&#13;
&#13;
			if (inputObj.minWeight) {&#13;
				inputObj.appliedMinWeight = weight &lt; inputObj.minWeight ? inputObj.minWeight : 0;&#13;
				weight = weight &lt; inputObj.minWeight ? inputObj.minWeight&#13;
						: weight;&#13;
				inputObj.wtConvRate = 1;&#13;
			}&#13;
			quantity = weight * inputObj.wtConvRate;&#13;
			totalAmt = this.evaluateRateBands(weight, inputObj.amount,&#13;
					inputObj.wtConvRate);&#13;
		}&#13;
&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == '/WM') {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			volume = dimObj.dims.volInCBM;&#13;
			wmUnit = 0;&#13;
			supportedBasis = true;&#13;
			if (weight) {&#13;
				wmUnit = weight * inputObj.wtConvRate;&#13;
			}&#13;
			if (volume) {&#13;
				wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
			}&#13;
			if (inputObj.minWeight) {&#13;
				rateInputObj.baseRate.appliedMinWeight = wmUnit &lt; inputObj.minWeight ? inputObj.minWeight : 0;&#13;
				wmUnit = wmUnit &lt; inputObj.minWeight ? inputObj.minWeight&#13;
						: wmUnit;&#13;
				inputObj.wtConvRate = 1;&#13;
			}&#13;
			totalAmt = inputObj.amount * wmUnit;&#13;
			quantity = wmUnit;&#13;
		}&#13;
&#13;
		if (dimObj.dims.volInCBM &amp;&amp; inputObj.volConvRate) {&#13;
			supportedBasis = true;&#13;
			volume = dimObj.dims.volInCBM;&#13;
&#13;
			if (inputObj.minimumqty) {&#13;
				rateInputObj.baseRate.appliedMinQty = volume &lt; inputObj.minimumqty ? inputObj.minimumqty : 0;				&#13;
				volume = volume &lt; inputObj.minimumqty ? inputObj.minimumqty&#13;
						: volume;&#13;
				inputObj.volConvRate = 1;&#13;
			}&#13;
			tempAmt = this.evaluateRateBands(volume, inputObj.amount,&#13;
					inputObj.volConvRate);&#13;
			totalAmt = totalAmt &gt; tempAmt ? totalAmt : tempAmt;						&#13;
			quantity = volume * inputObj.volConvRate;&#13;
			&#13;
		} else if ((dimObj.dims.dstInMile&#13;
				|| (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) || rateInputObj.distance)&#13;
				&amp;&amp; inputObj.dstConvRate) {&#13;
			supportedBasis = true;&#13;
			distance = 0.0;&#13;
			if (dimObj.dims.dstInMile) {&#13;
				distance = dimObj.dims.dstInMile;&#13;
			} else if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {&#13;
				distance = this.getEffectiveDistance(dimObj);&#13;
			} else {&#13;
				distance = rateInputObj.distance;&#13;
			}&#13;
			quantity = distance * inputObj.dstConvRate;&#13;
			totalAmt = this.evaluateRateBands(distance, inputObj.amount,&#13;
					inputObj.dstConvRate);&#13;
		}&#13;
&#13;
		if (inputObj.basis === 'pricingbands') {&#13;
			supportedBasis = true;&#13;
			bandAmt = 0.0;&#13;
			mUnit = 0.0;&#13;
			convRate = 0.0;&#13;
			amount = 0.0;&#13;
			if (inputObj.isdeficitpricing) {&#13;
				if (inputObj.wtConvRate) {&#13;
					mUnit = dimObj.dims.wtInKG;&#13;
					convRate = inputObj.wtConvRate;&#13;
					&#13;
					// GTN-27410 : Chargeable Weight scenario for TL and LTL.&#13;
					volume = dimObj.dims.volInCBM;&#13;
					dimFactor = rateInputObj.dimFactor;&#13;
					dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
					volumetricWeight = 0.0;&#13;
					if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
						if (dimFactorConv === 'cm/kg') {&#13;
							volumetricWeight = (volume * 1000000) / dimFactor;&#13;
						} else if (dimFactorConv === 'in/lb') {&#13;
							volumetricWeight = (volume * 61024) / dimFactor;&#13;
							volumetricWeight = volumetricWeight * 0.45359237;&#13;
						}&#13;
					}&#13;
&#13;
					weight = (weight * inputObj.wtConvRate) &gt; (volumetricWeight * convRate) ? weight&#13;
							: volumetricWeight;&#13;
&#13;
					if (inputObj.minWeight) {&#13;
						weight = weight &lt; inputObj.minWeight ? inputObj.minWeight&#13;
								: weight;&#13;
						inputObj.wtConvRate = 1;&#13;
						convRate = 1;&#13;
					}&#13;
				} else if (inputObj.volConvRate) {&#13;
					mUnit = dimObj.dims.volInCBM;&#13;
					convRate = inputObj.volConvRate;&#13;
				} else if (inputObj.dstConvRate) {&#13;
					mUnit = dimObj.dims.dstInMile;&#13;
					convRate = inputObj.dstConvRate;&#13;
				} else {&#13;
					if (inputObj.weightbreakbasis&#13;
							&amp;&amp; (inputObj.weightbreakbasis === '/package'&#13;
									|| inputObj.weightbreakbasis === '/pallet'&#13;
									|| inputObj.weightbreakbasis === '/unit'&#13;
									|| inputObj.weightbreakbasis === '/carton'&#13;
									|| inputObj.weightbreakbasis === '/LNM'&#13;
									|| inputObj.weightbreakbasis === '/SQM'&#13;
									|| inputObj.weightbreakbasis === '/MBF'&#13;
									|| inputObj.weightbreakbasis === '/MSF' || inputObj.weightbreakbasis === '/LDM')) {&#13;
						if (dimObj.dims.genericQty&#13;
								&amp;&amp; dimObj.dims.genericQtyUnit&#13;
								&amp;&amp; (dimObj.dims.genericQtyUnit === inputObj.weightbreakbasis)) {&#13;
							mUnit = dimObj.dims.genericQty;&#13;
							convRate = 1;&#13;
						} else if (dimObj.dims[inputObj.weightbreakbasis]) {&#13;
							mUnit = dimObj.dims[inputObj.weightbreakbasis];&#13;
							convRate = 1;&#13;
						}&#13;
					}&#13;
				}&#13;
&#13;
				if (inputObj.isdeficitpricing === 'yes') {&#13;
					if (rateInputObj.rateBands&#13;
							&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
						for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
							if ((mUnit &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
									|| (mUnit &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; mUnit &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
								if (rateInputObj.rateBands[i].upperbreak == 999999999) {&#13;
									bandAmt = rateInputObj.rateBands[i].amount&#13;
											* mUnit * convRate;&#13;
									quantity = mUnit * convRate;&#13;
									amount = rateInputObj.rateBands[i].amount;&#13;
								} else {&#13;
									bandAmt = rateInputObj.rateBands[i + 1].amount&#13;
											* rateInputObj.rateBands[i + 1].lowerbreak&#13;
											* convRate;&#13;
									actualPrice = rateInputObj.rateBands[i].amount&#13;
											* mUnit * convRate;&#13;
									&#13;
									if (bandAmt &gt; actualPrice) {&#13;
										bandAmt = actualPrice;&#13;
										amount = rateInputObj.rateBands[i].amount;&#13;
									} else {&#13;
										amount = rateInputObj.rateBands[i + 1].amount;&#13;
									}&#13;
								}&#13;
								break;&#13;
							}&#13;
						}&#13;
					}&#13;
				} else {&#13;
					if (rateInputObj.rateBands&#13;
							&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
						for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
							if ((mUnit &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
									|| (mUnit &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; mUnit &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
								bandAmt = rateInputObj.rateBands[i].amount&#13;
										* mUnit * convRate;&#13;
								quantity = mUnit * convRate;&#13;
								amount = rateInputObj.rateBands[i].amount;&#13;
								break;&#13;
							}&#13;
						}&#13;
					}&#13;
				}&#13;
			}&#13;
			rateInputObj.amount = parseFloat(amount);&#13;
			totalAmt = bandAmt;&#13;
		}&#13;
&#13;
		if (!supportedBasis) {&#13;
			switch (inputObj.basis) {&#13;
			case '/container':&#13;
			case '/CBM':&#13;
			case '/WM':&#13;
			case '/kg':&#13;
			case '/lb':&#13;
			case '/ton':&#13;
			case '/MI':&#13;
			case '/KM':&#13;
				rateInputObj.baseRate.supportedBasis = true;&#13;
				supportedBasis = true;&#13;
			}&#13;
		}&#13;
&#13;
		if (!supportedBasis) {&#13;
			totalAmt = inputObj.amount;&#13;
			rateInputObj.baseRate.quantity = 1;&#13;
		}&#13;
		if(quantity) {&#13;
			rateInputObj.baseRate.quantity = quantity;&#13;
		}&#13;
		&#13;
&#13;
		if (inputObj.minAmount) {&#13;
			rateInputObj.baseRate.appliedMin = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount : 0;&#13;
			totalAmt = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount&#13;
					: totalAmt;&#13;
		}&#13;
		if (inputObj.maxAmount) {&#13;
			rateInputObj.baseRate.appliedMax = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount : 0;&#13;
			totalAmt = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount&#13;
					: totalAmt;&#13;
		}&#13;
	&#13;
		rateInputObj.baseRate.supportedBasis = supportedBasis;&#13;
		rateInputObj.baseRate.total = parseFloat(totalAmt);&#13;
	};&#13;
&#13;
	this.getEffectiveDistance = function(dimObj) {&#13;
		distance = 0.0;&#13;
		var jsonBaseRate = rateInputObj.baseRate;&#13;
		for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
			origStop = dimObj.stopOffs[i].stop;&#13;
			if (origStop.indexOf('__') &gt; 0) {&#13;
				origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
			}&#13;
			destStop = dimObj.stopOffs[i + 1].stop;&#13;
			if (destStop.indexOf('__') &gt; 0) {&#13;
				destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
			}&#13;
			if (origStop == destStop) {&#13;
				distance = distance + 0.01;&#13;
				continue;&#13;
			}&#13;
			if (!distanceMatrix[origStop]&#13;
					|| !distanceMatrix[origStop][destStop]) {&#13;
				if (rateInputObj.distance) {&#13;
					return rateInputObj.distance;&#13;
				} else {&#13;
					return 9999999;&#13;
				}&#13;
			}&#13;
			distval = distanceMatrix[origStop][destStop];&#13;
			distance = distance + distanceMatrix[origStop][destStop];&#13;
		}&#13;
		return distance;&#13;
	};&#13;
&#13;
	this.evaluateRateBands = function(totalDim, rateAmount, ConvRate) {&#13;
		totalBandAmt = 0.0;&#13;
		if (rateInputObj.rateBands &amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
			for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
				if ((totalDim &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
						|| (totalDim &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; totalDim &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
					totalBandAmt = (rateInputObj.baseRate.basis === '/FLAT') ? rateInputObj.rateBands[i].amount&#13;
							: (rateInputObj.rateBands[i].amount * totalDim * ConvRate);&#13;
					break;&#13;
				}&#13;
			}&#13;
			if (totalBandAmt == 0 &amp;&amp; rateInputObj.baseRate) {&#13;
				totalBandAmt = rateInputObj.baseRate.basis === '/kg' ? (rateInputObj.baseRate.amount&#13;
						* totalDim * ConvRate)&#13;
						: rateInputObj.baseRate.amount;&#13;
			}&#13;
		} else {&#13;
			totalBandAmt = (rateInputObj.baseRate.basis === '/FLAT') ? rateAmount&#13;
					: rateAmount * totalDim * ConvRate;&#13;
		}&#13;
		return parseFloat(totalBandAmt);&#13;
	};&#13;
&#13;
	this.evaluateAccessorials = function(dimObj) {&#13;
		if (rateInputObj.accessorials) {&#13;
			for (var i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				if (rateInputObj.accessorials[i]) {&#13;
					accObj = rateInputObj.accessorials[i];&#13;
					quantity = 0;&#13;
					totalAmt = 0;&#13;
					if (accObj.basis === '/container') {&#13;
						if (rateInputObj.baseRate.equipmentType&#13;
								&amp;&amp; dimObj.dims[rateInputObj.baseRate.equipmentType]) {&#13;
							totalAmt = accObj.amount&#13;
									* dimObj.dims[rateInputObj.baseRate.equipmentType];&#13;
							quantity =  dimObj.dims[rateInputObj.baseRate.equipmentType];&#13;
						} else {&#13;
							rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
							continue;&#13;
						}&#13;
					}&#13;
&#13;
					if (accObj.basis === '%') {&#13;
						netfreightcostelems = rateInputObj.netfreightcostelems;&#13;
						if (netfreightcostelems&#13;
								&amp;&amp; netfreightcostelems.length &gt; 0) {&#13;
							totalSurchargeAmount = 0;&#13;
							for (var j = 0; j &lt; netfreightcostelems.length; j++) {&#13;
								netFreightSurcharge = netfreightcostelems[j];&#13;
								surchargeAmount = this.getSurchargeAmount(&#13;
										dimObj, netFreightSurcharge);&#13;
								totalSurchargeAmount = totalSurchargeAmount&#13;
										+ surchargeAmount;&#13;
							}&#13;
&#13;
							baseRate = rateInputObj.baseRate.total;&#13;
							totalAmt = ((baseRate + totalSurchargeAmount) * accObj.amount) / 100;&#13;
						} else {&#13;
							baseRate = rateInputObj.baseRate.total;&#13;
							totalAmt = (baseRate * accObj.amount) / 100;&#13;
						}&#13;
					}&#13;
&#13;
					if (accObj.basis === '/delivery'&#13;
							|| accObj.basis === '/entry'&#13;
							|| accObj.basis === '/shipment') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
&#13;
					if (accObj.basis === '/package'&#13;
							|| accObj.basis === '/pallet'&#13;
							|| accObj.basis === '/unit'&#13;
							|| accObj.basis === '/carton'&#13;
							|| accObj.basis === '/LNM'&#13;
							|| accObj.basis === '/SQM'&#13;
							|| accObj.basis === '/MSF'&#13;
							|| accObj.basis === '/MBF'&#13;
							|| accObj.basis === '/LDM') {&#13;
						if (dimObj.dims.genericQty&#13;
								&amp;&amp; dimObj.dims.genericQtyUnit&#13;
								&amp;&amp; (dimObj.dims.genericQtyUnit === accObj.basis)) {&#13;
							totalAmt = accObj.amount * dimObj.dims.genericQty;&#13;
							quantity = dimObj.dims.genericQty;&#13;
						} else if (dimObj.dims[accObj.basis]) {&#13;
							totalAmt = accObj.amount&#13;
									* dimObj.dims[accObj.basis];&#13;
						}&#13;
					}&#13;
&#13;
					if (dimObj.dims.wtInKG &amp;&amp; accObj.wtConvRate) {&#13;
						weight = dimObj.dims.wtInKG;&#13;
&#13;
						// GTN-25018 : Chargeable Weight scenario.&#13;
						if (accObj.calculatedWeightBasis&#13;
								&amp;&amp; accObj.calculatedWeightBasis === 'Chargeable Weight') {&#13;
							dimFactor = rateInputObj.dimFactor;&#13;
							dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
							volumetricWeight = 0.0;&#13;
							if (dimFactor &gt; 0 &amp;&amp; dimFactorConv&#13;
									&amp;&amp; dimObj.dims.volInCBM) {&#13;
								if (dimFactorConv === 'cm/kg') {&#13;
									volumetricWeight = (dimObj.dims.volInCBM * 1000000)&#13;
											/ dimFactor;&#13;
								} else if (dimFactorConv === 'in/lb') {&#13;
									volumetricWeight = (dimObj.dims.volInCBM * 61024)&#13;
											/ dimFactor;&#13;
									volumetricWeight = volumetricWeight * 0.45359237;&#13;
								}&#13;
							}&#13;
							weight = (weight * accObj.wtConvRate) &gt; (volumetricWeight * accObj.wtConvRate) ? weight&#13;
									: volumetricWeight;&#13;
						}&#13;
&#13;
						if (accObj.minWeight) {&#13;
							weight = weight &lt; accObj.minWeight ? accObj.minWeight&#13;
									: weight;&#13;
						}&#13;
						totalAmt = accObj.amount * weight * accObj.wtConvRate;&#13;
						quantity = weight * accObj.wtConvRate;&#13;
					}&#13;
					if (dimObj.dims.volInCBM &amp;&amp; accObj.volConvRate) {&#13;
						volume = dimObj.dims.volInCBM;&#13;
						if (accObj.minVolume) {&#13;
							volume = volume &lt; accObj.minVolume ? accObj.minVolume&#13;
									: volume;&#13;
						}&#13;
						totalAmt = accObj.amount * volume * accObj.volConvRate;&#13;
						quantity = volume * accObj.volConvRate;&#13;
					}&#13;
&#13;
					if ((dimObj.dims.dstInMile || (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1))&#13;
							&amp;&amp; accObj.dstConvRate) {&#13;
						distance = 0.0;&#13;
						if (dimObj.dims.dstInMile) {&#13;
							distance = dimObj.dims.dstInMile;&#13;
						} else {&#13;
							distance = this.getEffectiveDistance(dimObj);&#13;
						}&#13;
						totalAmt = accObj.amount * distance&#13;
								* accObj.dstConvRate;&#13;
						quantity = distance * accObj.dstConvRate;&#13;
					}&#13;
&#13;
					if (accObj.basis == '/FLAT') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
					if (accObj.amount &amp;&amp; accObj.basis == '/WM') {&#13;
						weight = dimObj.dims.wtInKG;&#13;
						volume = dimObj.dims.volInCBM;&#13;
						wmUnit = 0;&#13;
						if (weight) {&#13;
							wmUnit = weight * accObj.wtConvRate;&#13;
						}&#13;
						if (volume) {&#13;
							wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
						}&#13;
						totalAmt = accObj.amount * wmUnit;&#13;
						quantity = wmUnit;&#13;
					}&#13;
&#13;
					if (rateInputObj.baseRate.basis == accObj.basis&#13;
							&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
						totalAmt = accObj.amount;&#13;
						accObj.supportedBasis = true;&#13;
					} else if (rateInputObj.baseRate.basis != accObj.basis&#13;
							&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
						totalAmt = 0;&#13;
					}&#13;
&#13;
					if (accObj.minAmount) {&#13;
						rateInputObj.accessorials[i].appliedMin = totalAmt &lt; accObj.minAmount ? accObj.minAmount : 0;&#13;
						totalAmt = totalAmt &lt; accObj.minAmount ? accObj.minAmount&#13;
								: totalAmt;&#13;
					}&#13;
					if (accObj.maxAmount) {&#13;
						rateInputObj.accessorials[i].appliedMax = totalAmt &gt; accObj.maxAmount ? accObj.maxAmount : 0;&#13;
						totalAmt = totalAmt &gt; accObj.maxAmount ? accObj.maxAmount&#13;
								: totalAmt;&#13;
					}&#13;
&#13;
					if (!dimObj.dims.isHazMat &amp;&amp; accObj.isHazMat) {&#13;
						totalAmt = 0;&#13;
					}&#13;
&#13;
					rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
					if (accObj.basis == '/stop') {&#13;
						rateInputObj.stopOffTotal = parseFloat(totalAmt);&#13;
						if(totalAmt &amp;&amp; totalAmt &gt;0) {&#13;
							rateInputObj.accessorials[i].quantity = 1;&#13;
						}&#13;
					} else{&#13;
						rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
						if(totalAmt &amp;&amp; totalAmt &gt;0) {&#13;
							rateInputObj.accessorials[i].quantity = quantity;&#13;
						}&#13;
					}&#13;
				}&#13;
			}&#13;
		}&#13;
	};&#13;
&#13;
	this.getSurchargeAmount = function(dimObj, surcharge) {&#13;
		surchargeAmount = 0;&#13;
		inputObj = rateInputObj.baseRate;&#13;
		quantity = 0;&#13;
		if (surcharge.basis === '/container') {&#13;
			if (inputObj.equipmentType &amp;&amp; dimObj.dims[inputObj.equipmentType]) {&#13;
				surchargeAmount = surcharge.amount&#13;
						* dimObj.dims[inputObj.equipmentType];&#13;
				quantity = dimObj.dims[inputObj.equipmentType];&#13;
			} else {&#13;
				quantity = 1;&#13;
				return surchargeAmount;&#13;
			}&#13;
		}&#13;
&#13;
		if (surcharge.basis === '/delivery' || surcharge.basis === '/entry'&#13;
				|| surcharge.basis === '/shipment') {&#13;
			surchargeAmount = surcharge.amount;&#13;
			quantity = 1;&#13;
		}&#13;
&#13;
		if (surcharge.basis === '/package' || surcharge.basis === '/pallet'&#13;
				|| surcharge.basis === '/unit' || surcharge.basis === '/carton'&#13;
				|| surcharge.basis === '/LNM' || surcharge.basis === '/SQM'&#13;
				|| surcharge.basis === '/MSF' || surcharge.basis === '/MBF'&#13;
				|| accObj.basis === '/LDM') {&#13;
			if (dimObj.dims.genericQty &amp;&amp; dimObj.dims.genericQtyUnit&#13;
					&amp;&amp; (dimObj.dims.genericQtyUnit === surcharge.basis)) {&#13;
				surchargeAmount = surcharge.amount * dimObj.dims.genericQty;&#13;
				quantity = dimObj.dims.genericQty;&#13;
			} else if (dimObj.dims[surcharge.basis]) {&#13;
				surchargeAmount = surcharge.amount&#13;
						* dimObj.dims[surcharge.basis];&#13;
				quantity = dimObj.dims[surcharge.basis];&#13;
			}&#13;
		}&#13;
&#13;
		if (surcharge.amount &amp;&amp; surcharge.basis == '/FLAT') {&#13;
			surchargeAmount = surcharge.amount;&#13;
			quantity = 1;&#13;
		}&#13;
&#13;
		if (dimObj.dims.wtInKG &amp;&amp; surcharge.wtConvRate) {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			// GTN-25018 : Chargeable Weight scenario.&#13;
			if (surcharge.calculatedWeightBasis&#13;
					&amp;&amp; surcharge.calculatedWeightBasis === 'Chargeable Weight') {&#13;
				dimFactor = rateInputObj.dimFactor;&#13;
				dimFactorConv = rateInputObj.dimFactorConv;&#13;
				volumetricWeight = 0.0;&#13;
				if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
					if (dimFactorConv === 'cm/kg') {&#13;
						volumetricWeight = (dimObj.dims.volInCBM * 1000000)&#13;
								/ dimFactor;&#13;
					} else if (dimFactorConv === 'in/lb') {&#13;
						volumetricWeight = (dimObj.dims.volInCBM * 61024)&#13;
								/ dimFactor;&#13;
						volumetricWeight = volumetricWeight * 0.45359237;&#13;
					}&#13;
				}&#13;
				weight = (weight * surcharge.wtConvRate) &gt; (volumetricWeight * surcharge.wtConvRate) ? weight&#13;
						: volumetricWeight;&#13;
			}&#13;
			if (surcharge.minWeight) {&#13;
				surcharge.appliedWeight = weight &lt; surcharge.minWeight ? surcharge.minWeight : weight;&#13;
				weight = weight &lt; surcharge.minWeight ? surcharge.minWeight&#13;
						: weight;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * weight * surcharge.wtConvRate;&#13;
			quantity = weight * surcharge.wtConvRate;&#13;
		}&#13;
&#13;
		if (dimObj.dims.volInCBM &amp;&amp; surcharge.volConvRate) {&#13;
			volume = dimObj.dims.volInCBM;&#13;
			if (surcharge.minVolume) {&#13;
				surcharge.appliedVolume = volume &lt; surcharge.minVolume ? surcharge.minVolume : volume;&#13;
				volume = volume &lt; surcharge.minVolume ? surcharge.minVolume&#13;
						: volume;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * volume * surcharge.volConvRate;&#13;
			quantity = volume * surcharge.volConvRate;&#13;
		}&#13;
&#13;
		if (surcharge.amount &amp;&amp; surcharge.basis == '/WM') {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			volume = dimObj.dims.volInCBM;&#13;
			wmUnit = 0;&#13;
			if (weight) {&#13;
				wmUnit = weight * surcharge.wtConvRate;&#13;
			}&#13;
			if (volume) {&#13;
				wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
			}&#13;
			if (surcharge.minWeight) {&#13;
				surcharge.appliedWeight = wmUnit &lt; surcharge.minWeight ? surcharge.minWeight : wmUnit;&#13;
				wmUnit = wmUnit &lt; surcharge.minWeight ? surcharge.minWeight&#13;
						: wmUnit;&#13;
				surcharge.wtConvRate = 1;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * wmUnit;&#13;
			quantity = wmUnit;&#13;
		}&#13;
&#13;
		if ((dimObj.dims.dstInMile || (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1))&#13;
				&amp;&amp; surcharge.dstConvRate) {&#13;
			if (surcharge.basis == '/stop') {&#13;
				surchargeAmount = surcharge.amount * dimObj.stopOffs.length&#13;
					* surcharge.dstConvRate;&#13;
				quantity = dimObj.stopOffs.length * surcharge.dstConvRate;&#13;
			} else {&#13;
				distance = 0.0;&#13;
				if (dimObj.dims.dstInMile) {&#13;
					distance = dimObj.dims.dstInMile;&#13;
				} else {&#13;
					distance = this.getEffectiveDistance(dimObj);&#13;
				}&#13;
				surchargeAmount = surcharge.amount * distance&#13;
						* surcharge.dstConvRate;&#13;
				quantity = distance * surcharge.dstConvRate;&#13;
			}&#13;
		}&#13;
&#13;
		if (rateInputObj.baseRate.basis == inputObj.basis&#13;
				&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
			surchargeAmount = surcharge.amount;&#13;
			surcharge.supportedBasis = true;&#13;
			rateInputObj.accessorials[i].quantity = quantity;&#13;
		} else if (rateInputObj.baseRate.basis != surcharge.basis&#13;
				&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
			surchargeAmount = 0;&#13;
		}&#13;
&#13;
		if (surcharge.minAmount) {&#13;
			surcharge.appliedMin = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount : 0;			&#13;
			surchargeAmount = surchargeAmount &lt; surcharge.minAmount ? surcharge.minAmount&#13;
					: surchargeAmount;&#13;
		}&#13;
		if (surcharge.maxAmount) {&#13;
			surcharge.appliedMax = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount : 0;&#13;
			surchargeAmount = surchargeAmount &gt; surcharge.maxAmount ? surcharge.maxAmount&#13;
					: surchargeAmount;&#13;
		}&#13;
		return surchargeAmount;&#13;
	}&#13;
&#13;
	this.evaluateStopOff = function(stopOffs) {&#13;
		stopOffAmt = 0.0;&#13;
		if (rateInputObj.stopBands &amp;&amp; stopOffs &amp;&amp; stopOffs.length &gt; 2) {&#13;
			numOfStopOffs = stopOffs.length - 2;&#13;
			remainingStopOffs = numOfStopOffs;&#13;
			previousEnd = 0;&#13;
&#13;
			for (i = 0; i &lt; rateInputObj.stopBands.length; i++) {&#13;
				start = rateInputObj.stopBands[i].start;&#13;
				end = rateInputObj.stopBands[i].stop;&#13;
				if (numOfStopOffs &gt; end) {&#13;
					stopOffAmt = stopOffAmt&#13;
							+ (rateInputObj.stopBands[i].costPerStop * (end - previousEnd));&#13;
					remainingStopOffs -= (end - previousEnd);&#13;
					previousEnd = end;&#13;
&#13;
				} else if (numOfStopOffs &gt;= start &amp;&amp; numOfStopOffs &lt;= end) {&#13;
					stopOffAmt = stopOffAmt&#13;
							+ (rateInputObj.stopBands[i].costPerStop * remainingStopOffs);&#13;
					break;&#13;
				}&#13;
			}&#13;
			rateInputObj.stopOffTotal = parseFloat(stopOffAmt);&#13;
		}&#13;
&#13;
	};&#13;
	&#13;
	this.getDistanceSplit = function(dimObj) {&#13;
		distance = 0.0;&#13;
		var distObj = [];&#13;
		var distArr = [];&#13;
		var jsonBaseRate = rateInputObj.baseRate;&#13;
		if(dimObj.stopOffs) {&#13;
			for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
				origStop = dimObj.stopOffs[i].stop;&#13;
				if (origStop.indexOf('__') &gt; 0) {&#13;
					origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
				}&#13;
				destStop = dimObj.stopOffs[i + 1].stop;&#13;
				if (destStop.indexOf('__') &gt; 0) {&#13;
					destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
				}&#13;
				if (origStop == destStop) {&#13;
					distance = distance + 0.01;&#13;
					distObj = {Distance:distance, OrigStop:origStop, DestStop:destStop};&#13;
					distArr.push(distObj);&#13;
					continue;&#13;
				}&#13;
				if (!distanceMatrix[origStop]&#13;
						|| !distanceMatrix[origStop][destStop]) {&#13;
					if (rateInputObj.distance) {&#13;
						return rateInputObj.distance;&#13;
					} else {&#13;
						return 9999999;&#13;
					}&#13;
				}&#13;
				distval = distanceMatrix[origStop][destStop];&#13;
				distObj = {Distance:distval, OrigStop:origStop, DestStop:destStop};&#13;
				distArr.push(distObj);&#13;
				distance = distance + distanceMatrix[origStop][destStop];&#13;
			}&#13;
		}&#13;
			jsonBaseRate["distArr"] = distArr;&#13;
		return jsonBaseRate;&#13;
	};&#13;
	&#13;
	this.evaluateTransitTime = function(dimObj) {&#13;
		transittime = 0.0;&#13;
		if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {		&#13;
			if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {&#13;
				for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
					origStop = dimObj.stopOffs[i].stop;&#13;
					if (origStop.indexOf('__') &gt; 0) {&#13;
						origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
					}&#13;
					destStop = dimObj.stopOffs[i + 1].stop;&#13;
					if (destStop.indexOf('__') &gt; 0) {&#13;
						destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
					}&#13;
					if (origStop == destStop) {&#13;
						transittime = transittime + 0.01;&#13;
						continue;&#13;
					}&#13;
					if (!transitTimeMatrix[origStop]&#13;
							|| !transitTimeMatrix[origStop][destStop]) {&#13;
							transittime = parseFloat(9999999);&#13;
							break;&#13;
					}&#13;
					transittime = transittime + transitTimeMatrix[origStop][destStop];&#13;
				}&#13;
			} &#13;
		}	&#13;
		rateInputObj.baseRate.transittime = parseFloat(transittime);		&#13;
	};&#13;
};var constraints = {/*##*/resources:{"9":{"max_weight":28250.0,"max_cube":28.0,"max_qty":1.0},"10":{"max_weight":28800.0,"max_cube":56.0,"max_qty":2.0},"11":{"max_cube":75.0,"max_qty":2.532,"max_weight":27700.0},"12":{"max_cube":90.0,"max_weight":30200.0,"max_qty":2.886},"13":{"max_qty":2.0},"17":{"max_qty":1.0},"18":{"max_weight":30200.0,"max_qty":2.25,"max_cube":65.0},"19":{"max_cube":75.0,"max_qty":2.532,"max_weight":27700.0},"20":{"max_weight":30200.0,"max_cube":90.0,"max_qty":2.886},"21":{"max_qty":2.0},"25":{"max_cube":28.0,"max_weight":27490.0,"max_qty":1.0},"26":{"max_cube":59.0,"max_qty":2.0,"max_weight":28600.0},"27":{"max_weight":27700.0,"max_cube":75.0,"max_qty":2.532},"34":{"max_cube":63.0,"max_weight":29700.0,"max_qty":2.25},"41":{"max_qty":1.0},"42":{"max_qty":2.0},"49":{"max_qty":1.0},"50":{"max_qty":2.0},"57":{"max_qty":1.0},"58":{"max_qty":2.0},"65":{"max_weight":27490.0,"max_cube":28.0,"max_qty":1.0},"66":{"max_qty":2.0,"max_weight":28600.0,"max_cube":59.0},"74":{"max_weight":29700.0,"max_cube":63.0,"max_qty":2.25},"83":{"max_qty":2.532},"84":{"max_weight":18100.0,"max_qty":2.886,"max_cube":85.0},"85":{"max_qty":2.0,"max_weight":20000.0,"max_cube":95.0},"137":{"max_qty":1.0},"138":{"max_qty":2.0},"146":{"max_qty":2.25},"147":{"max_qty":2.532},"153":{"max_cube":33.0},"154":{"max_cube":33.0},"256":{"max_weight":1500.0,"max_cube":1000.0},"798":{"max_weight":24000.0,"max_qty":2.0},"2057":{"max_cube":28.0,"max_weight":28250.0,"max_qty":1.0},"2065":{"max_qty":1.0},"2066":{"max_cube":65.0,"max_qty":2.25,"max_weight":30200.0},"2073":{"max_qty":1.0,"max_weight":28250.0,"max_cube":28.0},"2074":{"max_cube":59.0,"max_weight":28600.0,"max_qty":2.0},"2082":{"max_cube":65.0,"max_qty":2.25,"max_weight":30200.0},"32314_9":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_10":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_11":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_12":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_13":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_17":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_18":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_19":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_20":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_21":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_25":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_26":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_27":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_34":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_41":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_42":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_49":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_50":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_57":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_58":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_65":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_66":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_74":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_83":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_84":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_85":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_137":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_138":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_146":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_147":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_153":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_154":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_256":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_798":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_2057":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_2065":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_2066":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_2073":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_2074":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129},"32314_2082":{"max_distance":600,"maxstops":4,"maximum_out_of_route_miles":0,"maxoutofroutemilesunit":129}},/*##*/locations:{1073748027:{},1073748028:{},1073748029:{},1073748030:{},1073747981:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747992:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747991:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747983:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747982:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747993:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747985:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747984:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747987:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747986:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747978:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747989:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747988:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},660310:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747980:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747979:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073747990:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},35305:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},15207:{fixed_time:300,max_variable_time:600,LOADING:{weight_time:{time_factor:900,division_factor:50.0},volume_time:{time_factor:900,division_factor:50.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},660257:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}}}}; evaluateConstraints = function evaluateConstraints(dimObj) {
	var resourceData = this.id.split("_");
	var resource = resourceData[1];
	if ((resource in constraints.resources)) {
		if ("max_weight" in constraints.resources[resource]
				&amp;&amp; dimObj.dims.wtInKG &gt; constraints.resources[resource].max_weight)
			return false;
		if ("max_cube" in constraints.resources[resource]
				&amp;&amp; dimObj.dims.volInCBM &gt; constraints.resources[resource].max_cube)
			return false;
	}
	return true;
};


var carrier = function(resourceInputObj){
	this.evaluateCarrierConstraint = function (dimObj){
	resource = resourceInputObj.id;
    if (!(resource in constraints.resources))
		return true;
	
	if ("maxstops" in constraints.resources[resource]
			&amp;&amp; dimObj.stopOffs.length  &gt; constraints.resources[resource].maxstops ){
		return false;
		}
	if ("max_distance" in constraints.resources[resource]
			&amp;&amp; isMaxDistanceCrossed(dimObj, resource)) {
		return false;
	}
	if ("maximum_single_hours" in constraints.resources[resource]
			&amp;&amp; isMaxDriveTimeCrossed(dimObj, resource)) {
		return false;
	}
	if ("maximum_out_of_route_miles" in constraints.resources[resource]
			&amp;&amp; isMaxOutOfRouteMile(dimObj, resource)) {
		return false;
	}
		return true;
	}
};



isMaxOutOfRouteMile = function isMaxOutOfRouteMile(dimObj, resourceid) {
	var totalDistance = 0;
	var maxOutOfRouteMile = 0;
	try {
		totalDistance = distanceMatrix[sliceStopOffData(dimObj.stopOffs[0].stop)][sliceStopOffData(dimObj.stopOffs[dimObj.stopOffs.length - 1].stop)];
	} catch (err) {
		warn('error distanceMatrix  does not exist in  isMaxOutOfRouteMile');
	}
	;

	try {
		maxOutOfRouteMile = constraints.resources[resourceid].maximum_out_of_route_miles;

	} catch (err) {
		warn('maxOutOfRouteMile  does not exist in  for resource' + resourceid);
		maxOutOfRouteMile = 0;
	}
	;

	var totalDriveDistance = getTotalDriveDistance(dimObj);
	
	if (constraints.resources[resourceid].maxoutofroutemilesunit == "%") {
		maxOutOfRouteMile = ((maxOutOfRouteMile / 100) * totalDistance)
				+ totalDistance;
	} else {
		maxOutOfRouteMile = maxOutOfRouteMile + totalDistance;
		
		if (!isNaN(maxOutOfRouteMile)) {
			// warn('maxOutOfRouteMile==' + maxOutOfRouteMile);
			// warn('totalDriveDistance=' + totalDriveDistance+' for
			// resourceid'+ resourceid);

		}
	}
	if (totalDriveDistance &gt; maxOutOfRouteMile) {
		// warn('totalDriveDistance =='+totalDriveDistance
		// +'-'+maxOutOfRouteMile);
		return true;
	}
	// warn('in else totalDriveDistance =='+totalDriveDistance
	// +'-'+maxOutOfRouteMile);
	return false;
};

isMaxDistanceCrossed = function isMaxDistanceCrossed(dimObj, resourceid) {
	var totalDriveDistance = getTotalDriveDistance(dimObj);
	if (totalDriveDistance &gt; constraints.resources[resourceid].max_distance) {
		return true;
	}
	return false;
};

isMaxDriveTimeCrossed = function isMaxDriveTimeCrossed(dimObj, resourceid) {
	var totalDriveTime = getTotalDriveTime(dimObj);
	if (totalDriveTime &gt; constraints.resources[resourceid].maximum_single_hours) {
		return true;
	}
	return false;
};

getTotalDriveDistance = function getTotalDriveDistance(dimObj) {
	var totalDriveDistance = 0;
	try {
		for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);
			var distance = distanceMatrix[stop1][stop2]
			if (!isNaN(distance)) {
				totalDriveDistance = totalDriveDistance + (distance);
			} else {
				warn('can give wrong data,since');
				warn(' no dtm between ' + stop1 + '-' + stop2);
			}
		}
	} catch (err) {
		warn('distanceMatrix  does not exist for ' + stop1 + '-' + stop2);
	}
	;
	return totalDriveDistance;
};

getTotalDriveTime = function getTotalDriveTime(dimObj) {
	var totalDriveTime = 0;
	try {
		for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);
			totalDriveTime = totalDriveTime + (transitTimeMatrix[stop1][stop2]);
		}
	} catch (err) {
		warn('transitTimeMatrix  does not exist for ' + stop1 + '-' + stop2);
	}
	;
	return totalDriveTime;
};

sliceStopOffData = function sliceStopOffData(stopOffData) {
	var stop = stopOffData;
	try {

		if (stopOffData.indexOf('__') &gt; 0) {
			stop = stopOffData.slice(0, stopOffData.indexOf('__'));
		}
	} catch (err) {
		warn('stopOffData incorrect for ' + stopOffData);
	}
	return JSON.parse(stop);
};

getProcessingTime = function getProcessingTime(dimObj) {

	if (typeof dimObj.stopOffs[1] == 'undefined') {
		return 1000000;
	}
	trasitTime = 0;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop
					.indexOf('TRANSPORT') &gt; -1))) {
		return 99999;
	}
	var finalloadthroughput = 0;
	finalloadthroughput = getFinalLoadThroughput(dimObj);
	if (isNaN(finalloadthroughput)) {
		finalloadthroughput = 0;
	}

	var finalunloadthroughput = 0;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);
	if (isNaN(finalunloadthroughput)) {
		finalunloadthroughput = 0;
	}

	try {
		trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]
				+ finalunloadthroughput;
		if (isNaN(trasitTime)) {
			warn('errcause no transittime for ' + stop1 + '-- ' + stop2);
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getOceanAirProcessingTime = function getOceanAirProcessingTime(dimObj) {
	return this.transitTime;
	};

getFinalThroughput = function getFinalThroughput(dimObj) {
	var finalTroughputResult = '';

	for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length); stopIndex++) {
		var stop = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
		if (dimObj.dims.wtInKG != 0) {
			if ((stop in constraints.locations)
					&amp;&amp; ("Throughput" in constraints.locations[stop])) {
				finalTroughputResult = finalTroughputResult + stop + '--'
						+ ((constraints.locations[stop].Throughput)) + '--';
			}
		}
	}
	return finalTroughputResult;
};

getDistanceBetweenStops = function getDistanceBetweenStops(dimObj) {
	var distancebetweenstops = "";
	for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
		try {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);

			distancebetweenstops = distancebetweenstops + "#" + stop1 + "_"
					+ stop2;
			distancebetweenstops = distancebetweenstops + "#"
					+ distanceMatrix[stop1][stop2];
		} catch (err) {
			warn('err cause no distancebetweenstops ' + stop1 + ' -- ' + stop2);
		}
	}
	return distancebetweenstops;
};

getFinalLoadThroughput = function getFinalLoadThroughput(dimObj) {
	var varloadthroughput = 0;
	stop1 = sliceStopOffData(dimObj.stopOffs[0].stop);
	try {
		if (stop1 in constraints.locations
				&amp;&amp; ("LOADING" in constraints.locations[stop1])) {

			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop1].LOADING["weight_time"].division_factor)
						* constraints.locations[stop1].LOADING["weight_time"].time_factor;
				varloadthroughput = varweightthrouput;
			}

			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop1].LOADING["volume_time"].division_factor)
						* constraints.locations[stop1].LOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varloadthroughput) {
					varloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop1].max_variable_time != 0) {
			if (constraints.locations[stop1].max_variable_time &lt; varloadthroughput) {
				varloadthroughput = constraints.locations[stop1].max_variable_time;
			}
		}
		return constraints.locations[stop1].fixed_time + varloadthroughput;
	} catch (err) {
		warn('err calculating load throughput for stop ' + stop1 + '-- '
				+ err.message);
		return 0;
	}
};

getFinalUnLoadThroughput = function getFinalUnLoadThroughput(dimObj) {
	var varunloadthroughput = 0;
	stop2 = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
	try {
		if (stop2 in constraints.locations
				&amp;&amp; "UNLOADING" in constraints.locations[stop2]) {
			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop2].UNLOADING["weight_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["weight_time"].time_factor;

				varunloadthroughput = varweightthrouput;
			}
			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop2].UNLOADING["volume_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varunloadthroughput) {
					varunloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop2].max_variable_time != 0) {
			if (constraints.locations[stop2].max_variable_time &lt; varunloadthroughput) {
				varunloadthroughput = constraints.locations[stop2].max_variable_time;
			}
		}
		// warn('Unloading varunloadthroughput ' + varunloadthroughput + ' stop2
		// ' + stop2+' fixed_time ' + constraints.locations[stop2].fixed_time);
		return constraints.locations[stop2].fixed_time + varunloadthroughput;
	} catch (err) {
		warn('err calculating Unload throughput for stop ' + stop2 + '-- '
				+ err.message);
		return 0;
	}
};

getOceanAirLoadingProcessingTime = function getOceanAirLoadingProcessingTime(dimObj) {

	trasitTime = 0;
	var finalloadthroughput = 0;
	finalloadthroughput = getFinalLoadThroughput(dimObj);
	if (isNaN(finalloadthroughput)) {
		finalloadthroughput = 0;
	}

	try {
		trasitTime = finalloadthroughput;
		if (isNaN(trasitTime)) {
			warn('failed');
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getOceanAirProcessingTime = function getOceanAirProcessingTime(dimObj) {
return this.transitTime;
};

getOceanAirUnloadingProcessingTime = function getOceanAirUnloadingProcessingTime(dimObj) {

trasitTime = 0;
	var finalunloadthroughput = 0;
	finalunloadthroughput = getFinalUnLoadThroughput1(dimObj);
	if (isNaN(finalunloadthroughput)) {
		finalunloadthroughput = 0;
	}

	/*
	 * warn('finalloadthroughput ' + finalloadthroughput + '
	 * finalunloadthroughput ' + finalunloadthroughput + ' matrix ' +
	 * transitTimeMatrix[stop1][stop2]);
	 */
	try {
		trasitTime = finalunloadthroughput;
		if (isNaN(trasitTime)) {
			warn('unloading failed');
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getFinalUnLoadThroughput1 = function getFinalUnLoadThroughput1(dimObj) {
	var varunloadthroughput = 0;
	var stop2;
	//warn(" calculating Unload throughput for stop ' + s");
	try {
	//warn(dimObj.stopOffs);
	stop2 = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
	if(typeof stop2 == 'undefined')
	  return 0;
	  
		if (stop2 in constraints.locations
				&amp;&amp; "UNLOADING" in constraints.locations[stop2]) {
			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop2].UNLOADING["weight_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["weight_time"].time_factor;

				varunloadthroughput = varweightthrouput;
			}
			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop2].UNLOADING["volume_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varunloadthroughput) {
					varunloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop2].max_variable_time != 0) {
			if (constraints.locations[stop2].max_variable_time &lt; varunloadthroughput) {
				varunloadthroughput = constraints.locations[stop2].max_variable_time;
			}
		}
		// warn('Unloading varunloadthroughput ' + varunloadthroughput + ' stop2
		// ' + stop2+' fixed_time ' + constraints.locations[stop2].fixed_time);
		return constraints.locations[stop2].fixed_time + varunloadthroughput;
	} catch (err) {
		//warn('err calculating Unload throughput for stop ' + stop2 + '-- '
				//+ err.message);
			//	warn("catch");
		return 0;
	}
};</globalScript><applyConsolidationRules ttype="STRING">Yes</applyConsolidationRules><requirementConsolidationLevel ttype="I32">0</requirementConsolidationLevel></supplyChain><requirements ttype="MAP"><item><key ttype="STRING">2122305396</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">2122305396</id><name ttype="STRING">2122305396</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">2000.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">9.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">1073748030__START_REQUIREMENT</source><destination ttype="STRING">1073748028__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1935428400</earliestDepartTime><earliestDeliveryTime ttype="I64">1935428460</earliestDeliveryTime><latestDepartTime ttype="I64">1935601200</latestDepartTime><latestDeliveryTime ttype="I64">1938538800</latestDeliveryTime></value></item><item><key ttype="STRING">2122305395</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">2122305395</id><name ttype="STRING">2122305395</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">2000.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">9.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">1073748029__START_REQUIREMENT</source><destination ttype="STRING">1073748028__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1935428400</earliestDepartTime><earliestDeliveryTime ttype="I64">1935428460</earliestDeliveryTime><latestDepartTime ttype="I64">1935601200</latestDepartTime><latestDeliveryTime ttype="I64">1938538800</latestDeliveryTime></value></item><item><key ttype="STRING">2122305394</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">2122305394</id><name ttype="STRING">2122305394</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">2000.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">9.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">2.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">1073748027__START_REQUIREMENT</source><destination ttype="STRING">1073748028__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1935428400</earliestDepartTime><earliestDeliveryTime ttype="I64">1935428460</earliestDeliveryTime><latestDepartTime ttype="I64">1935601200</latestDepartTime><latestDeliveryTime ttype="I64">1938538800</latestDeliveryTime></value></item></requirements><solutions ttype="LIST"><item struct="Solution" ttype="STRUCT"><id ttype="STRING">GTN_22moDE6lEei66QZhf8Zzug</id><assignments ttype="MAP"><item><key ttype="STRING">GTN_22o5Fk6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22o5Fk6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">0.0</expectedTotalCost><step ttype="STRING">1073748027__START_REQUIREMENT</step><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935428400</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":2,"wtInKG":2000,"None":1,"NumberOfTOS":1,"volInCBM":9,"/SQM":2,"/package":2,"Dollar":0,"/LNM":2,"1003_10_SC":0,"/carton":2,"/pallet":2,"_10":0,"_18":0,"32314_18_SC":0},"stops":[{"stop":"1073748027__HOLD_REQUIREMENT"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item><item><key ttype="STRING">GTN_22pCsk6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22pCsk6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">0.0</expectedTotalCost><step ttype="STRING">1073748030__START_REQUIREMENT</step><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935428400</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":2,"wtInKG":2000,"None":1,"NumberOfTOS":1,"volInCBM":9,"/SQM":2,"/package":2,"Dollar":0,"/LNM":2,"1003_10_SC":0,"/carton":2,"/pallet":2,"_10":0,"_18":0,"32314_18_SC":0},"stops":[{"stop":"1073748030__HOLD_REQUIREMENT"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item><item><key ttype="STRING">GTN_22najk6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22najk6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">0.0</expectedTotalCost><step ttype="STRING">1073748027__HOLD_REQUIREMENT</step><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935428400</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":2,"wtInKG":2000,"None":1,"NumberOfTOS":1,"volInCBM":9,"/SQM":2,"/package":2,"Dollar":0,"/LNM":2,"1003_10_SC":0,"/carton":2,"/pallet":2,"_10":0,"_18":0,"32314_18_SC":0},"stops":[{"stop":"1073748027__1073748028__2122310292__SC______MULTI_STOP__32314"},{"stop":"1073748027__START_REQUIREMENT"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item><item><key ttype="STRING">GTN_22m1ck6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22m1ck6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">0.0</expectedTotalCost><step ttype="STRING">1073748029__HOLD_REQUIREMENT</step><startTimeStamp ttype="I64">1935434880</startTimeStamp><endTimeStamp ttype="I64">1935434880</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":2,"wtInKG":2000,"None":1,"NumberOfTOS":1,"volInCBM":9,"/SQM":2,"/package":2,"Dollar":0,"/LNM":2,"1003_10_SC":0,"/carton":2,"/pallet":2,"_10":0,"_18":0,"32314_18_SC":0},"stops":[{"stop":"1073748027__1073748028__2122310292__SC______MULTI_STOP__32314"},{"stop":"1073748029__START_REQUIREMENT"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item><item><key ttype="STRING">GTN_22mrmk6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22mrmk6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">0.0</expectedTotalCost><step ttype="STRING">1073748028__END_REQUIREMENT</step><startTimeStamp ttype="I64">1935447960</startTimeStamp><endTimeStamp ttype="I64">1935447960</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":2,"wtInKG":2000,"None":1,"NumberOfTOS":1,"volInCBM":9,"/SQM":2,"/package":2,"Dollar":0,"/LNM":2,"1003_10_SC":0,"/carton":2,"/pallet":2,"_10":0,"_18":0,"32314_18_SC":0},"stops":[{"stop":"1073748027__1073748028__2122310292__SC______MULTI_STOP__32314"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item><item><key ttype="STRING">GTN_22nsmk6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22nsmk6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">0.0</expectedTotalCost><step ttype="STRING">1073748029__START_REQUIREMENT</step><startTimeStamp ttype="I64">1935434880</startTimeStamp><endTimeStamp ttype="I64">1935434880</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":2,"wtInKG":2000,"None":1,"NumberOfTOS":1,"volInCBM":9,"/SQM":2,"/package":2,"Dollar":0,"/LNM":2,"1003_10_SC":0,"/carton":2,"/pallet":2,"_10":0,"_18":0,"32314_18_SC":0},"stops":[{"stop":"1073748029__HOLD_REQUIREMENT"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item><item><key ttype="STRING">GTN_22pMqE6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22pMqE6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">0.0</expectedTotalCost><step ttype="STRING">1073748028__END_REQUIREMENT</step><startTimeStamp ttype="I64">1935444600</startTimeStamp><endTimeStamp ttype="I64">1935444600</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":2,"wtInKG":2000,"None":1,"NumberOfTOS":1,"volInCBM":9,"/SQM":2,"/package":2,"Dollar":0,"/LNM":2,"1003_10_SC":0,"/carton":2,"/pallet":2,"_10":0,"_18":0,"32314_18_SC":0},"stops":[{"stop":"1073748030__1073748028__2122310292__SC______MULTI_STOP__32314"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item><item><key ttype="STRING">GTN_22nkXE6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22nkXE6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">0.0</expectedTotalCost><step ttype="STRING">1073748030__HOLD_REQUIREMENT</step><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935428400</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":2,"wtInKG":2000,"None":1,"NumberOfTOS":1,"volInCBM":9,"/SQM":2,"/package":2,"Dollar":0,"/LNM":2,"1003_10_SC":0,"/carton":2,"/pallet":2,"_10":0,"_18":0,"32314_18_SC":0},"stops":[{"stop":"1073748030__1073748028__2122310292__SC______MULTI_STOP__32314"},{"stop":"1073748030__START_REQUIREMENT"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item><item><key ttype="STRING">GTN_22ocdE6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22ocdE6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">0.0</expectedTotalCost><step ttype="STRING">1073748028__END_REQUIREMENT</step><startTimeStamp ttype="I64">1935447960</startTimeStamp><endTimeStamp ttype="I64">1935447960</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":2,"wtInKG":2000,"None":1,"NumberOfTOS":1,"volInCBM":9,"/SQM":2,"/package":2,"Dollar":0,"/LNM":2,"1003_10_SC":0,"/carton":2,"/pallet":2,"_10":0,"_18":0,"32314_18_SC":0},"stops":[{"stop":"1073748027__1073748028__2122310292__SC______MULTI_STOP__32314"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item><item><key ttype="STRING">GTN_22nJBE6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22nJBE6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">1770.0</expectedTotalCost><step ttype="STRING">1073748027__1073748028__2122310292__SC______MULTI_STOP__32314</step><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935447960</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":4,"wtInKG":4000,"None":0,"NumberOfTOS":2,"volInCBM":18,"/SQM":4,"/package":4,"Dollar":0,"/LNM":4,"1003_10_SC":0,"/carton":4,"/pallet":4,"_10":0,"_18":1},"stops":[{"stop":"1073748027__HOLD_REQUIREMENT"},{"stop":"1073748029__HOLD_REQUIREMENT"},{"stop":"1073748028__END_REQUIREMENT"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item><item><key ttype="STRING">GTN_22nATk6lEei66QZhf8Zzug</key><value struct="Assignment" ttype="STRUCT"><id ttype="STRING">GTN_22nATk6lEei66QZhf8Zzug</id><expectedTotalCost ttype="DOUBLE">1525.0</expectedTotalCost><step ttype="STRING">1073748030__1073748028__2122310292__SC______MULTI_STOP__32314</step><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935444600</endTimeStamp><assignmentDetail ttype="STRING">{"units":{"/unit":2,"wtInKG":2000,"None":0,"NumberOfTOS":1,"volInCBM":9,"/SQM":2,"/package":2,"Dollar":0,"/LNM":2,"1003_10_SC":0,"/carton":2,"/pallet":2,"_10":0,"_18":1},"stops":[{"stop":"1073748030__HOLD_REQUIREMENT"},{"stop":"1073748028__END_REQUIREMENT"}],"rate_details":[]}</assignmentDetail><isStatic ttype="BOOL">False</isStatic></value></item></assignments><assigned_requirements ttype="MAP"><item><key ttype="STRING">2122305396</key><value ttype="LIST"><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305396</requirementID><quantity ttype="I32">1</quantity><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22pCsk6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935428400</endTimeStamp><resourceInstance ttype="STRING">GTN_21wtME6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cLunE6lEeiV8QZhf8Zzug</pathID></item><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305396</requirementID><quantity ttype="I32">1</quantity><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22nkXE6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935428400</endTimeStamp><resourceInstance ttype="STRING">GTN_21wtME6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cLunE6lEeiV8QZhf8Zzug</pathID></item><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305396</requirementID><quantity ttype="I32">1</quantity><resourceID ttype="STRING">32314_18_SC</resourceID><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22nATk6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935444600</endTimeStamp><resourceInstance ttype="STRING">GTN_21xnFE6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cLunE6lEeiV8QZhf8Zzug</pathID></item><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305396</requirementID><quantity ttype="I32">1</quantity><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22pMqE6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935444600</startTimeStamp><endTimeStamp ttype="I64">1935444600</endTimeStamp><resourceInstance ttype="STRING">GTN_21yEGk6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cLunE6lEeiV8QZhf8Zzug</pathID></item></value></item><item><key ttype="STRING">2122305395</key><value ttype="LIST"><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305395</requirementID><quantity ttype="I32">1</quantity><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22nsmk6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935434880</startTimeStamp><endTimeStamp ttype="I64">1935434880</endTimeStamp><resourceInstance ttype="STRING">GTN_22hpiE6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cL08E6lEeiV8QZhf8Zzug</pathID></item><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305395</requirementID><quantity ttype="I32">1</quantity><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22m1ck6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935434880</startTimeStamp><endTimeStamp ttype="I64">1935434880</endTimeStamp><resourceInstance ttype="STRING">GTN_22hpiE6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cL08E6lEeiV8QZhf8Zzug</pathID></item><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305395</requirementID><quantity ttype="I32">1</quantity><resourceID ttype="STRING">32314_18_SC</resourceID><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22nJBE6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935434880</startTimeStamp><endTimeStamp ttype="I64">1935447960</endTimeStamp><resourceInstance ttype="STRING">GTN_22fnEE6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cL08E6lEeiV8QZhf8Zzug</pathID></item><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305395</requirementID><quantity ttype="I32">1</quantity><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22mrmk6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935447960</startTimeStamp><endTimeStamp ttype="I64">1935447960</endTimeStamp><resourceInstance ttype="STRING">GTN_22jock6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cL08E6lEeiV8QZhf8Zzug</pathID></item></value></item><item><key ttype="STRING">2122305394</key><value ttype="LIST"><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305394</requirementID><quantity ttype="I32">1</quantity><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22o5Fk6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935428400</endTimeStamp><resourceInstance ttype="STRING">GTN_22efTk6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cLloE6lEeiV8QZhf8Zzug</pathID></item><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305394</requirementID><quantity ttype="I32">1</quantity><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22najk6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935428400</endTimeStamp><resourceInstance ttype="STRING">GTN_22efTk6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cLloE6lEeiV8QZhf8Zzug</pathID></item><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305394</requirementID><quantity ttype="I32">1</quantity><resourceID ttype="STRING">32314_18_SC</resourceID><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22nJBE6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935428400</startTimeStamp><endTimeStamp ttype="I64">1935447960</endTimeStamp><resourceInstance ttype="STRING">GTN_22fnEE6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cLloE6lEeiV8QZhf8Zzug</pathID></item><item struct="AssignedRequirements" ttype="STRUCT"><requirementID ttype="STRING">2122305394</requirementID><quantity ttype="I32">1</quantity><isStatic ttype="BOOL">False</isStatic><assignmentID ttype="STRING">GTN_22ocdE6lEei66QZhf8Zzug</assignmentID><startTimeStamp ttype="I64">1935447960</startTimeStamp><endTimeStamp ttype="I64">1935447960</endTimeStamp><resourceInstance ttype="STRING">GTN_22gC_k6lEei66QZhf8Zzug</resourceInstance><pathID ttype="STRING">GTN_8cLloE6lEeiV8QZhf8Zzug</pathID></item></value></item></assigned_requirements></item></solutions><modelingLanguageVersion ttype="STRING">3.2</modelingLanguageVersion></OptimizationInstance>