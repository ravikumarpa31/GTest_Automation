<OptimizationInstance struct="OptimizationInstance" ttype="STRUCT"><id ttype="STRING">GTN_11047_Truck_LTL_Truck_60064246246</id><supplyChain struct="SupplyChain" ttype="STRUCT"><id ttype="STRING">Network</id><name ttype="STRING">supplyChainName12345</name><steps ttype="MAP"><item><key ttype="STRING">1073793401__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793401__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073793401 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073792349__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073792349__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073792349 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073792349__INTERCHANGE_REQUIREMENT_XCHG</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">10864_9_SC</item><item ttype="STRING">_9</item></resourcesAvailable><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793407__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793407__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073793407</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073793407__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">15898__1002035__60063587131__A__D__D__TRANSPORT_REQUIREMENT__1010</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15898__1002035__60063587131__A__D__D__TRANSPORT_REQUIREMENT__1010</id><narrativeDescription ttype="STRING">Transport from 15898__1002035__60063587131__A__D__D__TRANSPORT_REQUIREMENT__1010__00A0</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073780592__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_256</item><item ttype="STRING">1010_256_A</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"minAmount":500.0,"amount":2.0,"wtConvRate":1.0,"includeInNetFreight":null,"basis":"\/kg","isHazMat":null,"distArr":""},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"60063587131"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":25320});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1514793600</rateValidityStart><rateValidityEnd ttype="I64">1577865600</rateValidityEnd></value></item><item><key ttype="STRING">1073793404__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793404__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073793404 LCOS,25GP,L5GP,M5GP,BBOS,45GP,TRSM,00A0,42GP,P2GP,22GP,TR48</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073793404__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073793412__1073793413__60064246242__SC______MULTI_STOP__1010</item><item ttype="STRING">2000262__1000578__60063955763__SC______MULTI_STOP__1003</item><item ttype="STRING">1073793414__1073793415__60064246241__SC______MULTI_STOP__1010</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793404__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793404__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073793404__LCOS,25GP,L5GP,M5GP,BBOS,45GP,TRSM,00A0,42GP,P2GP,22GP,TR48</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1073793404__1073793403__60063660709__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793404__1073793403__60063660708__SMC______LTL_REQUIREMENT__1003</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073793404_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793404__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793404__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073793404</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073793404__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073793404_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073793414__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793414__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073793414 LCOS,25GP,L5GP,M5GP,BBOS,45GP,TRSM,00A0,42GP,P2GP,22GP,TR48</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073793414__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073793412__1073793413__60064246242__SC______MULTI_STOP__1010</item><item ttype="STRING">1073793414__1073793415__60064246241__SC______MULTI_STOP__1010</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793400__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793400__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073793400</narrativeDescription><type ttype="I32">3</type><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">1073793398__1073793404__60063660691__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793398__1073793404__60063660691__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073793398__1073793404__60063660691__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073793404__HOLD_REQUIREMENT</item><item ttype="STRING">1073793404__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":181.1,"wtConvRate":0.0220462,"minimumcharge":189.59,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":113.77,"discountpercentage":40.0,"lowerbreak":0,"actualCost":113.77},{"upperbreak":999,"unit":"CWT","amount":113.77,"discountpercentage":45.0,"lowerbreak":500,"actualCost":113.77},{"upperbreak":1999,"unit":"CWT","amount":113.77,"discountpercentage":50.0,"lowerbreak":1000,"actualCost":113.77},{"upperbreak":4999,"unit":"CWT","amount":113.77,"discountpercentage":55.0,"lowerbreak":2000,"actualCost":113.77},{"upperbreak":9999,"unit":"CWT","amount":113.77,"discountpercentage":60.0,"lowerbreak":5000,"actualCost":113.77},{"upperbreak":19999,"unit":"CWT","amount":113.77,"discountpercentage":65.0,"lowerbreak":10000,"actualCost":113.77},{"upperbreak":29999,"unit":"CWT","amount":113.77,"discountpercentage":70.0,"lowerbreak":20000,"actualCost":113.77},{"upperbreak":39999,"unit":"CWT","amount":113.77,"discountpercentage":75.0,"lowerbreak":30000,"actualCost":113.77},{"upperbreak":999999999,"unit":"CWT","amount":113.77,"discountpercentage":80.0,"lowerbreak":40000,"actualCost":113.77}],"accessorials":[],"rateId":"60063660691"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":135060});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073793404__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1514808000</rateValidityStart><rateValidityEnd ttype="I64">1609329600</rateValidityEnd><freightClass ttype="STRING">Class 400</freightClass></value></item><item><key ttype="STRING">1073792350__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073792350__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073792350__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1002895__1003135__60061792397__S__P__P__TRANSPORT_REQUIREMENT__10864</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073792350_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">10864_10_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793398__1073793400__60063587134__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793398__1073793400__60063587134__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073793398__1073793400__60063587134__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":181.1,"wtConvRate":0.0220462,"minimumcharge":189.59,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":100.69,"discountpercentage":40.0,"lowerbreak":0,"actualCost":100.69},{"upperbreak":999,"unit":"CWT","amount":100.69,"discountpercentage":45.0,"lowerbreak":500,"actualCost":100.69},{"upperbreak":1999,"unit":"CWT","amount":100.69,"discountpercentage":50.0,"lowerbreak":1000,"actualCost":100.69},{"upperbreak":4999,"unit":"CWT","amount":100.69,"discountpercentage":55.0,"lowerbreak":2000,"actualCost":100.69},{"upperbreak":9999,"unit":"CWT","amount":100.69,"discountpercentage":60.0,"lowerbreak":5000,"actualCost":100.69},{"upperbreak":19999,"unit":"CWT","amount":100.69,"discountpercentage":65.0,"lowerbreak":10000,"actualCost":100.69},{"upperbreak":29999,"unit":"CWT","amount":100.69,"discountpercentage":70.0,"lowerbreak":20000,"actualCost":100.69},{"upperbreak":39999,"unit":"CWT","amount":100.69,"discountpercentage":75.0,"lowerbreak":30000,"actualCost":100.69},{"upperbreak":999999999,"unit":"CWT","amount":100.69,"discountpercentage":80.0,"lowerbreak":40000,"actualCost":100.69}],"accessorials":[],"rateId":"60063587134"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":135060});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></origins><rateValidityStart ttype="I64">1514808000</rateValidityStart><rateValidityEnd ttype="I64">1609329600</rateValidityEnd><freightClass ttype="STRING">Class 400</freightClass></value></item><item><key ttype="STRING">1073780590__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073780590__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073780590__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073780590_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793407__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793407__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073793407__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073793407_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">2000100__1002035__53837006155__S__CY__P__TRANSPORT_REQUIREMENT__28858</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000100__1002035__53837006155__S__CY__P__TRANSPORT_REQUIREMENT__28858</id><narrativeDescription ttype="STRING">Transport from 2000100__1002035__53837006155__S__CY__P__TRANSPORT_REQUIREMENT__28858__42GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073780592__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_10</item><item ttype="STRING">28858_10_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":350.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"rateId":"53837006155"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":1468860});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1520064000</rateValidityStart><rateValidityEnd ttype="I64">1546329600</rateValidityEnd></value></item><item><key ttype="STRING">15898__1002035__60063723570__S__P__P__TRANSPORT_REQUIREMENT__1010</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">15898__1002035__60063723570__S__P__P__TRANSPORT_REQUIREMENT__1010</id><narrativeDescription ttype="STRING">Transport from 15898__1002035__60063723570__S__P__P__TRANSPORT_REQUIREMENT__1010__22GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073780592__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1010_9_S</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":250.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[],"rateId":"60063723570"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":604920});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1514793600</rateValidityStart><rateValidityEnd ttype="I64">1577865600</rateValidityEnd></value></item><item><key ttype="STRING">1002444__1000121__53623150593__S__P__P__TRANSPORT_REQUIREMENT__28858</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1002444__1000121__53623150593__S__P__P__TRANSPORT_REQUIREMENT__28858</id><narrativeDescription ttype="STRING">Transport from 1002444__1000121__53623150593__S__P__P__TRANSPORT_REQUIREMENT__28858__42GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073779541__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_10</item><item ttype="STRING">28858_10_S</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":250.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"rateId":"53623150593"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":864120});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1528268400</rateValidityStart><rateValidityEnd ttype="I64">1559804400</rateValidityEnd></value></item><item><key ttype="STRING">1073793403__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793403__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073793403 1003_901_LT</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073793407__1073793398__60064085687__SC______MULTI_STOP__1010</item><item ttype="STRING">1073793403__CONSOLIDATE_REQUIREMENT_XDOC</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793415__END_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793415__END_REQUIREMENT</id><narrativeDescription ttype="STRING">End at 1073793415 </narrativeDescription><type ttype="I32">5</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073793415_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073793398__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793398__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073793398</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1073793398__1073793400__60063587133__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793398__1073793405__60063723593__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793398__1073793400__60063587134__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793398__1073793404__60063660690__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793398__1073793404__60063660691__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793398__1073793405__60063723592__SMC______LTL_REQUIREMENT__1003</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">1073793398__1073793405__60063723593__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793398__1073793405__60063723593__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073793398__1073793405__60063723593__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073793405__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item><item ttype="STRING">1073793405__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":179.2,"wtConvRate":0.0220462,"minimumcharge":239.27,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":347.33,"discountpercentage":45.0,"lowerbreak":0,"actualCost":347.33},{"upperbreak":999,"unit":"CWT","amount":347.33,"discountpercentage":50.0,"lowerbreak":500,"actualCost":347.33},{"upperbreak":1999,"unit":"CWT","amount":347.33,"discountpercentage":55.0,"lowerbreak":1000,"actualCost":347.33},{"upperbreak":4999,"unit":"CWT","amount":347.33,"discountpercentage":60.0,"lowerbreak":2000,"actualCost":347.33},{"upperbreak":9999,"unit":"CWT","amount":347.33,"discountpercentage":65.0,"lowerbreak":5000,"actualCost":347.33},{"upperbreak":19999,"unit":"CWT","amount":347.33,"discountpercentage":70.0,"lowerbreak":10000,"actualCost":347.33},{"upperbreak":29999,"unit":"CWT","amount":347.33,"discountpercentage":75.0,"lowerbreak":20000,"actualCost":347.33},{"upperbreak":39999,"unit":"CWT","amount":347.33,"discountpercentage":80.0,"lowerbreak":30000,"actualCost":347.33},{"upperbreak":999999999,"unit":"CWT","amount":347.33,"discountpercentage":85.0,"lowerbreak":40000,"actualCost":347.33}],"accessorials":[],"rateId":"60063723593"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":133920});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073793405__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1451649600</rateValidityStart><rateValidityEnd ttype="I64">1609329600</rateValidityEnd><freightClass ttype="STRING">Class 500</freightClass></value></item><item><key ttype="STRING">1073793404__1073793403__60063660709__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793404__1073793403__60063660709__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073793404__1073793403__60063660709__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":181.1,"wtConvRate":0.0220462,"minimumcharge":227.69,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":252.45,"discountpercentage":40.0,"lowerbreak":0,"actualCost":252.45},{"upperbreak":999,"unit":"CWT","amount":252.45,"discountpercentage":45.0,"lowerbreak":500,"actualCost":252.45},{"upperbreak":1999,"unit":"CWT","amount":252.45,"discountpercentage":50.0,"lowerbreak":1000,"actualCost":252.45},{"upperbreak":4999,"unit":"CWT","amount":252.45,"discountpercentage":55.0,"lowerbreak":2000,"actualCost":252.45},{"upperbreak":9999,"unit":"CWT","amount":252.45,"discountpercentage":60.0,"lowerbreak":5000,"actualCost":252.45},{"upperbreak":19999,"unit":"CWT","amount":252.45,"discountpercentage":65.0,"lowerbreak":10000,"actualCost":252.45},{"upperbreak":29999,"unit":"CWT","amount":252.45,"discountpercentage":70.0,"lowerbreak":20000,"actualCost":252.45},{"upperbreak":39999,"unit":"CWT","amount":252.45,"discountpercentage":75.0,"lowerbreak":30000,"actualCost":252.45},{"upperbreak":999999999,"unit":"CWT","amount":252.45,"discountpercentage":80.0,"lowerbreak":40000,"actualCost":252.45}],"accessorials":[],"rateId":"60063660709"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":135060});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1514808000</rateValidityStart><rateValidityEnd ttype="I64">1609329600</rateValidityEnd><freightClass ttype="STRING">Class 400</freightClass></value></item><item><key ttype="STRING">1073793403__1073793407__60064085689__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793403__1073793407__60064085689__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073793403__1073793407__60064085689__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073793407__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">1073793407__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":179.2,"wtConvRate":0.0220462,"minimumcharge":177.65,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":9.54,"discountpercentage":45.0,"lowerbreak":0,"actualCost":9.54},{"upperbreak":999,"unit":"CWT","amount":9.54,"discountpercentage":50.0,"lowerbreak":500,"actualCost":9.54},{"upperbreak":1999,"unit":"CWT","amount":9.54,"discountpercentage":55.0,"lowerbreak":1000,"actualCost":9.54},{"upperbreak":4999,"unit":"CWT","amount":9.54,"discountpercentage":60.0,"lowerbreak":2000,"actualCost":9.54},{"upperbreak":9999,"unit":"CWT","amount":9.54,"discountpercentage":65.0,"lowerbreak":5000,"actualCost":9.54},{"upperbreak":19999,"unit":"CWT","amount":9.54,"discountpercentage":70.0,"lowerbreak":10000,"actualCost":9.54},{"upperbreak":29999,"unit":"CWT","amount":9.54,"discountpercentage":75.0,"lowerbreak":20000,"actualCost":9.54},{"upperbreak":39999,"unit":"CWT","amount":9.54,"discountpercentage":80.0,"lowerbreak":30000,"actualCost":9.54},{"upperbreak":999999999,"unit":"CWT","amount":9.54,"discountpercentage":85.0,"lowerbreak":40000,"actualCost":9.54}],"accessorials":[],"rateId":"60064085689"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":133920});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><destinations ttype="SET"><item ttype="STRING">1073793407__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1514808000</rateValidityStart><rateValidityEnd ttype="I64">1544616000</rateValidityEnd><freightClass ttype="STRING">Class 50</freightClass></value></item><item><key ttype="STRING">1073793403__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793403__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073793403</narrativeDescription><type ttype="I32">3</type><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">1002895__1003135__60061792397__S__P__P__TRANSPORT_REQUIREMENT__10864</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1002895__1003135__60061792397__S__P__P__TRANSPORT_REQUIREMENT__10864</id><narrativeDescription ttype="STRING">Transport from 1002895__1003135__60061792397__S__P__P__TRANSPORT_REQUIREMENT__10864__42GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073792353__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">10864_10_S</item><item ttype="STRING">_10</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":1280.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[{"amount":2.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":0.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":2.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":0.0,"includeInNetFreight":null,"basis":"\/shipment","isHazMat":null,"distArr":""},{"amount":0.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":10.0,"includeInNetFreight":null,"basis":"\/shipment","isHazMat":null,"distArr":""},{"amount":18.0,"includeInNetFreight":null,"basis":"%","isHazMat":null,"distArr":""},{"amount":0.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":0.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":200.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":""},{"amount":225.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":""},{"amount":5.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""}],"rateId":"60061792397"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":1036920});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1514793600</rateValidityStart><rateValidityEnd ttype="I64">1546243200</rateValidityEnd></value></item><item><key ttype="STRING">1073792351__INTERCHANGE_REQUIREMENT_XCHG</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073792351__INTERCHANGE_REQUIREMENT_XCHG</id><narrativeDescription ttype="STRING">XCHG  at 1073792351__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">7</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073792351_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item></resourcesAvailable><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793398__1073793405__60063723592__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793398__1073793405__60063723592__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073793398__1073793405__60063723592__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073793405__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item><item ttype="STRING">1073793405__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":181.1,"wtConvRate":0.0220462,"minimumcharge":239.27,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":277.86,"discountpercentage":40.0,"lowerbreak":0,"actualCost":277.86},{"upperbreak":999,"unit":"CWT","amount":277.86,"discountpercentage":45.0,"lowerbreak":500,"actualCost":277.86},{"upperbreak":1999,"unit":"CWT","amount":277.86,"discountpercentage":50.0,"lowerbreak":1000,"actualCost":277.86},{"upperbreak":4999,"unit":"CWT","amount":277.86,"discountpercentage":55.0,"lowerbreak":2000,"actualCost":277.86},{"upperbreak":9999,"unit":"CWT","amount":277.86,"discountpercentage":60.0,"lowerbreak":5000,"actualCost":277.86},{"upperbreak":19999,"unit":"CWT","amount":277.86,"discountpercentage":65.0,"lowerbreak":10000,"actualCost":277.86},{"upperbreak":29999,"unit":"CWT","amount":277.86,"discountpercentage":70.0,"lowerbreak":20000,"actualCost":277.86},{"upperbreak":39999,"unit":"CWT","amount":277.86,"discountpercentage":75.0,"lowerbreak":30000,"actualCost":277.86},{"upperbreak":999999999,"unit":"CWT","amount":277.86,"discountpercentage":80.0,"lowerbreak":40000,"actualCost":277.86}],"accessorials":[],"rateId":"60063723592"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":135060});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073793405__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1451649600</rateValidityStart><rateValidityEnd ttype="I64">1609329600</rateValidityEnd><freightClass ttype="STRING">Class 400</freightClass></value></item><item><key ttype="STRING">1073793412__1073793413__60064246242__SC______MULTI_STOP__1010</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793412__1073793413__60064246242__SC______MULTI_STOP__1010</id><narrativeDescription ttype="STRING">1073793412__1073793413__60064246242__SC______MULTI_STOP__1010__42GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073793415__END_REQUIREMENT</item><item ttype="STRING">1073793413__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_10</item><item ttype="STRING">1010_10_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"60064246242"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793412__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073793413__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1514793600</rateValidityStart><rateValidityEnd ttype="I64">1546243200</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1010_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073793401__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793401__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073793401__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073793401__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073793401_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793412__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793412__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073793412 </narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073793412__1073793413__60064246242__SC______MULTI_STOP__1010</item><item ttype="STRING">1073793414__1073793415__60064246241__SC______MULTI_STOP__1010</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793398__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793398__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073793398 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073793398__1073793400__60063587133__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793398__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073793398__1073793404__60063660691__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793398__1073793400__60063587134__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793398__1073793404__60063660690__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793407__1073793398__60064085687__SC______MULTI_STOP__1010</item><item ttype="STRING">1073793398__1073793405__60063723592__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793398__1073793405__60063723593__SMC______LTL_REQUIREMENT__1003</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793414__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793414__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073793414</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073793414__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">1073792351__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073792351__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073792351 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073792351__INTERCHANGE_REQUIREMENT_XCHG</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_9</item></resourcesAvailable><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793405__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793405__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073793405 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073793407__1073793398__60064085687__SC______MULTI_STOP__1010</item><item ttype="STRING">1073793405__CONSOLIDATE_REQUIREMENT_XDOC</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793404__1073793403__60063660708__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793404__1073793403__60063660708__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073793404__1073793403__60063660708__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073793403__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":179.2,"wtConvRate":0.0220462,"minimumcharge":227.69,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":315.56,"discountpercentage":45.0,"lowerbreak":0,"actualCost":315.56},{"upperbreak":999,"unit":"CWT","amount":315.56,"discountpercentage":50.0,"lowerbreak":500,"actualCost":315.56},{"upperbreak":1999,"unit":"CWT","amount":315.56,"discountpercentage":55.0,"lowerbreak":1000,"actualCost":315.56},{"upperbreak":4999,"unit":"CWT","amount":315.56,"discountpercentage":60.0,"lowerbreak":2000,"actualCost":315.56},{"upperbreak":9999,"unit":"CWT","amount":315.56,"discountpercentage":65.0,"lowerbreak":5000,"actualCost":315.56},{"upperbreak":19999,"unit":"CWT","amount":315.56,"discountpercentage":70.0,"lowerbreak":10000,"actualCost":315.56},{"upperbreak":29999,"unit":"CWT","amount":315.56,"discountpercentage":75.0,"lowerbreak":20000,"actualCost":315.56},{"upperbreak":39999,"unit":"CWT","amount":315.56,"discountpercentage":80.0,"lowerbreak":30000,"actualCost":315.56},{"upperbreak":999999999,"unit":"CWT","amount":315.56,"discountpercentage":85.0,"lowerbreak":40000,"actualCost":315.56}],"accessorials":[],"rateId":"60063660708"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":133920});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1514808000</rateValidityStart><rateValidityEnd ttype="I64">1609329600</rateValidityEnd><freightClass ttype="STRING">Class 500</freightClass></value></item><item><key ttype="STRING">1073793398__1073793400__60063587133__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793398__1073793400__60063587133__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073793398__1073793400__60063587133__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item><item ttype="STRING">1073793400__DECONSOLIDATE_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":179.2,"wtConvRate":0.0220462,"minimumcharge":189.59,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":126.94,"discountpercentage":45.0,"lowerbreak":0,"actualCost":126.94},{"upperbreak":999,"unit":"CWT","amount":126.94,"discountpercentage":50.0,"lowerbreak":500,"actualCost":126.94},{"upperbreak":1999,"unit":"CWT","amount":126.94,"discountpercentage":55.0,"lowerbreak":1000,"actualCost":126.94},{"upperbreak":4999,"unit":"CWT","amount":126.94,"discountpercentage":60.0,"lowerbreak":2000,"actualCost":126.94},{"upperbreak":9999,"unit":"CWT","amount":126.94,"discountpercentage":65.0,"lowerbreak":5000,"actualCost":126.94},{"upperbreak":19999,"unit":"CWT","amount":126.94,"discountpercentage":70.0,"lowerbreak":10000,"actualCost":126.94},{"upperbreak":29999,"unit":"CWT","amount":126.94,"discountpercentage":75.0,"lowerbreak":20000,"actualCost":126.94},{"upperbreak":39999,"unit":"CWT","amount":126.94,"discountpercentage":80.0,"lowerbreak":30000,"actualCost":126.94},{"upperbreak":999999999,"unit":"CWT","amount":126.94,"discountpercentage":85.0,"lowerbreak":40000,"actualCost":126.94}],"accessorials":[],"rateId":"60063587133"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":133920});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></origins><rateValidityStart ttype="I64">1514808000</rateValidityStart><rateValidityEnd ttype="I64">1609329600</rateValidityEnd><freightClass ttype="STRING">Class 500</freightClass></value></item><item><key ttype="STRING">1073780590__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073780590__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073780590 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073793412__1073793413__60064246242__SC______MULTI_STOP__1010</item><item ttype="STRING">1073780590__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073793414__1073793415__60064246241__SC______MULTI_STOP__1010</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1003130__141536__60061792396__S__CY__CY__TRANSPORT_REQUIREMENT__28858</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1003130__141536__60061792396__S__CY__CY__TRANSPORT_REQUIREMENT__28858</id><narrativeDescription ttype="STRING">Transport from 1003130__141536__60061792396__S__CY__CY__TRANSPORT_REQUIREMENT__28858__22GP</narrativeDescription><type ttype="I32">1</type><nextSteps ttype="SET"><item ttype="STRING">1073792351__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">28858_9_S</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"amount":1600.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[{"amount":2.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":0.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":2.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":0.0,"includeInNetFreight":null,"basis":"\/shipment","isHazMat":null,"distArr":""},{"amount":0.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":10.0,"includeInNetFreight":null,"basis":"\/shipment","isHazMat":null,"distArr":""},{"amount":18.0,"includeInNetFreight":null,"basis":"%","isHazMat":null,"distArr":""},{"amount":0.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":0.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""},{"amount":200.0,"includeInNetFreight":null,"basis":"\/container","isHazMat":null,"distArr":""},{"amount":225.0,"includeInNetFreight":null,"basis":"\/FLAT","isHazMat":null,"distArr":""},{"amount":5.0,"wtConvRate":0.001,"includeInNetFreight":null,"basis":"\/WM","isHazMat":null,"distArr":""}],"rateId":"60061792396"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":864120});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><rateValidityStart ttype="I64">1514793600</rateValidityStart><rateValidityEnd ttype="I64">1546243200</rateValidityEnd></value></item><item><key ttype="STRING">1073780591__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073780591__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073780591 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073780591__INTERCHANGE_REQUIREMENT_XCHG</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">10864_9_SC</item><item ttype="STRING">_10</item><item ttype="STRING">10864_10_SC</item><item ttype="STRING">_9</item><item ttype="STRING">28858_10_S</item></resourcesAvailable><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793404__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793404__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073793404</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073793404__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">1073792353__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073792353__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073792353 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793414__1073793415__60064246241__SC______MULTI_STOP__1010</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793414__1073793415__60064246241__SC______MULTI_STOP__1010</id><narrativeDescription ttype="STRING">1073793414__1073793415__60064246241__SC______MULTI_STOP__1010__42GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073793415__END_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_10</item><item ttype="STRING">1010_10_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_10"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"60064246241"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793414__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073793415__END_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1514793600</rateValidityStart><rateValidityEnd ttype="I64">1546243200</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1010_10"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073793412__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793412__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073793412</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073793412__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073793412_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073793413__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793413__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073793413 LCOS,25GP,L5GP,M5GP,BBOS,45GP,TRSM,00A0,42GP,P2GP,22GP,TR48</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073793412__1073793413__60064246242__SC______MULTI_STOP__1010</item><item ttype="STRING">1073793413__CONSOLIDATE_REQUIREMENT_XDOC</item><item ttype="STRING">1073793413__1073793414__60064246245__SMC______LTL_REQUIREMENT__1003</item><item ttype="STRING">1073793414__1073793415__60064246241__SC______MULTI_STOP__1010</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793413__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793413__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073793413</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1073793413__1073793414__60064246245__SMC______LTL_REQUIREMENT__1003</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">1073793405__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793405__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073793405__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">15898__1002035__60063723570__S__P__P__TRANSPORT_REQUIREMENT__1010</item><item ttype="STRING">15898__1002035__60063587131__A__D__D__TRANSPORT_REQUIREMENT__1010</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073793405_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1010_256_A</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793414__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793414__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073793414</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073793414__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073793414_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073793398__1073793404__60063660690__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793398__1073793404__60063660690__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073793398__1073793404__60063660690__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073793404__HOLD_REQUIREMENT</item><item ttype="STRING">1073793404__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":179.2,"wtConvRate":0.0220462,"minimumcharge":189.59,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":143.43,"discountpercentage":45.0,"lowerbreak":0,"actualCost":143.43},{"upperbreak":999,"unit":"CWT","amount":143.43,"discountpercentage":50.0,"lowerbreak":500,"actualCost":143.43},{"upperbreak":1999,"unit":"CWT","amount":143.43,"discountpercentage":55.0,"lowerbreak":1000,"actualCost":143.43},{"upperbreak":4999,"unit":"CWT","amount":143.43,"discountpercentage":60.0,"lowerbreak":2000,"actualCost":143.43},{"upperbreak":9999,"unit":"CWT","amount":143.43,"discountpercentage":65.0,"lowerbreak":5000,"actualCost":143.43},{"upperbreak":19999,"unit":"CWT","amount":143.43,"discountpercentage":70.0,"lowerbreak":10000,"actualCost":143.43},{"upperbreak":29999,"unit":"CWT","amount":143.43,"discountpercentage":75.0,"lowerbreak":20000,"actualCost":143.43},{"upperbreak":39999,"unit":"CWT","amount":143.43,"discountpercentage":80.0,"lowerbreak":30000,"actualCost":143.43},{"upperbreak":999999999,"unit":"CWT","amount":143.43,"discountpercentage":85.0,"lowerbreak":40000,"actualCost":143.43}],"accessorials":[],"rateId":"60063660690"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":133920});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073793404__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1514808000</rateValidityStart><rateValidityEnd ttype="I64">1609329600</rateValidityEnd><freightClass ttype="STRING">Class 500</freightClass></value></item><item><key ttype="STRING">1073793413__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793413__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073793413__LCOS,25GP,L5GP,M5GP,BBOS,45GP,TRSM,00A0,42GP,P2GP,22GP,TR48</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073793413__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073793413_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793407__1073793398__60064085687__SC______MULTI_STOP__1010</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793407__1073793398__60064085687__SC______MULTI_STOP__1010</id><narrativeDescription ttype="STRING">1073793407__1073793398__60064085687__SC______MULTI_STOP__1010__22GP</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">1010_9_SC</item><item ttype="STRING">_9</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":10.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_9"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"60064085687"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793407__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1514793600</rateValidityStart><rateValidityEnd ttype="I64">1546243200</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1010_9"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073793407__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793407__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073793407</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073793407__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073793407_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">2000262__1000578__60063955763__SC______MULTI_STOP__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">2000262__1000578__60063955763__SC______MULTI_STOP__1003</id><narrativeDescription ttype="STRING">2000262__1000578__60063955763__SC______MULTI_STOP__1003__TR48</narrativeDescription><type ttype="I32">6</type><nextSteps ttype="SET"><item ttype="STRING">1073793403__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_84</item><item ttype="STRING">1003_84_SC</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"dimFactor":0.0,"baseRate":{"amount":1.0,"includeInNetFreight":null,"dstConvRate":1.0,"basis":"\/MI","isHazMat":null,"distArr":"","equipmentType":"_84"},"netfreightcostelems":[],"accessorials":[],"dimFactorConv":"cm\/kg","rateId":"60063955763"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(function getProcessingTime(dimObj) {&#13;
&#13;
	if (typeof dimObj.stopOffs[1] == 'undefined') {&#13;
		return 1000000;&#13;
	}&#13;
	trasitTime = 0;&#13;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);&#13;
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)&#13;
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop&#13;
					.indexOf('TRANSPORT') &gt; -1))) {&#13;
		return 99999;&#13;
	}&#13;
	var finalloadthroughput = 0;&#13;
	finalloadthroughput = getFinalLoadThroughput(dimObj);&#13;
	if(isNaN(finalloadthroughput)){&#13;
		finalloadthroughput=0;&#13;
	}&#13;
		&#13;
	var finalunloadthroughput = 0;&#13;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);&#13;
	if(isNaN(finalunloadthroughput)){&#13;
		finalunloadthroughput=0;&#13;
	}	&#13;
&#13;
	/*warn('finalloadthroughput ' + finalloadthroughput&#13;
			+ ' finalunloadthroughput ' + finalunloadthroughput + ' matrix '&#13;
			+ transitTimeMatrix[stop1][stop2]);*/&#13;
	try {&#13;
		&#13;
		if(transitTimeMatrix[stop1] &amp;&amp; transitTimeMatrix[stop1][stop2]) {&#13;
			trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]&#13;
			+ finalunloadthroughput;&#13;
		}&#13;
		&#13;
		if (isNaN(trasitTime)) {&#13;
			warn('errcause no transittime for' + stop1 + '-- ' + stop2);&#13;
			return 0;&#13;
		}&#13;
	} catch (err) {&#13;
		warn('err cause-- ' + err.message);&#13;
		return 0;&#13;
		&#13;
	}&#13;
	//warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);&#13;
	return (trasitTime);&#13;
})</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793404__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073793403__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1514793600</rateValidityStart><rateValidityEnd ttype="I64">1577865600</rateValidityEnd><scriptedCarrierConstraints ttype="STRING">resourceObj = new carrier({"id":"1003_84"}); resourceObj.evaluateCarrierConstraint.bind(resourceObj)</scriptedCarrierConstraints></value></item><item><key ttype="STRING">1073780591__INTERCHANGE_REQUIREMENT_XCHG</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073780591__INTERCHANGE_REQUIREMENT_XCHG</id><narrativeDescription ttype="STRING">XCHG  at 1073780591__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">7</type><nextSteps ttype="SET"><item ttype="STRING">2000100__1002035__53837006155__S__CY__P__TRANSPORT_REQUIREMENT__28858</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073780591_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">10864_9_SC</item><item ttype="STRING">_10</item><item ttype="STRING">10864_10_SC</item><item ttype="STRING">_9</item><item ttype="STRING">28858_10_S</item></resourcesAvailable><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793414__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793414__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073793414__LCOS,25GP,L5GP,M5GP,BBOS,45GP,TRSM,00A0,42GP,P2GP,22GP,TR48</narrativeDescription><type ttype="I32">2</type><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073793414_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793398__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793398__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073793398__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073793398__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073793398_Operating_hour</item></operatingHours><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073792350__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073792350__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073792350 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073792350__CONSOLIDATE_REQUIREMENT_XDOC</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073779541__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073779541__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073779541__TRSM,25GP,45GP,22GP,P2GP,42GP,L5GP,LCOS,TR48,M5GP,00A0,BBOS</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073779541__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073779541_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">28858_10_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793405__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793405__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073793405</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073793405__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">1073792349__INTERCHANGE_REQUIREMENT_XCHG</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073792349__INTERCHANGE_REQUIREMENT_XCHG</id><narrativeDescription ttype="STRING">XCHG  at 1073792349__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">7</type><nextSteps ttype="SET"><item ttype="STRING">1003130__141536__60061792396__S__CY__CY__TRANSPORT_REQUIREMENT__28858</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073792349_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">10864_9_SC</item><item ttype="STRING">_9</item></resourcesAvailable><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073779541__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073779541__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073779541 TRSM,25GP,45GP,22GP,P2GP,42GP,L5GP,LCOS,TR48,M5GP,00A0,BBOS</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073792353__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073792353__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073792353__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073792353__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073792353_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">10864_10_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073780592__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073780592__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073780592 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"/><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073780592__DECONSOLIDATE_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073780592__DECONSOLIDATE_REQUIREMENT</id><narrativeDescription ttype="STRING">XDOC  at 1073780592__L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">3</type><nextSteps ttype="SET"><item ttype="STRING">1073780592__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073780592_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">1010_256_A</item><item ttype="STRING">_9</item><item ttype="STRING">28858_10_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirUnloadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793407__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793407__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073793407 L5GP,45GP,M5GP,TR48,LCOS,00A0,25GP,BBOS,22GP,P2GP,42GP,TRSM</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073793407__1073793398__60064085687__SC______MULTI_STOP__1010</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793403__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793403__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073793403</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1073793403__1073793407__60064085689__SMC______LTL_REQUIREMENT__1003</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime></value></item><item><key ttype="STRING">1073779540__HOLD_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073779540__HOLD_REQUIREMENT</id><narrativeDescription ttype="STRING">Hold at 1073779540 TRSM,25GP,45GP,22GP,P2GP,42GP,L5GP,LCOS,TR48,M5GP,00A0,BBOS</narrativeDescription><type ttype="I32">4</type><nextSteps ttype="SET"><item ttype="STRING">1073779540__CONSOLIDATE_REQUIREMENT_XDOC</item></nextSteps><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073780590__START_REQUIREMENT</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073780590__START_REQUIREMENT</id><narrativeDescription ttype="STRING">start at 1073780590</narrativeDescription><type ttype="I32">0</type><nextSteps ttype="SET"><item ttype="STRING">1073780590__HOLD_REQUIREMENT</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">SHIPPING_1073780590_Operating_hour</item></operatingHours></value></item><item><key ttype="STRING">1073779540__CONSOLIDATE_REQUIREMENT_XDOC</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073779540__CONSOLIDATE_REQUIREMENT_XDOC</id><narrativeDescription ttype="STRING">XDOC  at 1073779540__TRSM,25GP,45GP,22GP,P2GP,42GP,L5GP,LCOS,TR48,M5GP,00A0,BBOS</narrativeDescription><type ttype="I32">2</type><nextSteps ttype="SET"><item ttype="STRING">1002444__1000121__53623150593__S__P__P__TRANSPORT_REQUIREMENT__28858</item></nextSteps><operatingHours ttype="LIST"><item ttype="STRING">RECEIVING_1073779540_Operating_hour</item></operatingHours><resourcesAvailable ttype="SET"><item ttype="STRING">28858_10_S</item></resourcesAvailable><scriptedProcessingTime ttype="STRING">(processingTimeObj= {});getOceanAirLoadingProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><maxHours ttype="DOUBLE">0.0</maxHours></value></item><item><key ttype="STRING">1073793413__1073793414__60064246245__SMC______LTL_REQUIREMENT__1003</key><value struct="Step" ttype="STRUCT"><id ttype="STRING">1073793413__1073793414__60064246245__SMC______LTL_REQUIREMENT__1003</id><narrativeDescription ttype="STRING">Transport from 1073793413__1073793414__60064246245__SMC______LTL_REQUIREMENT__1003__TRSM</narrativeDescription><type ttype="I32">8</type><nextSteps ttype="SET"><item ttype="STRING">1073793414__DECONSOLIDATE_REQUIREMENT</item><item ttype="STRING">1073793413__HOLD_REQUIREMENT</item><item ttype="STRING">1073793414__HOLD_REQUIREMENT</item></nextSteps><resourcesAvailable ttype="SET"><item ttype="STRING">_901</item><item ttype="STRING">1003_901_LT</item></resourcesAvailable><scriptedRate ttype="STRING">rateObj = new rate({"baseRate":{"minimumchargediscount":10.0,"isdeficitpricing":"no","lbConvRate":2.20462,"ltlsurchargepercentage":null,"isSMC":"yes","minimumfloorcharge":181.3,"wtConvRate":0.0220462,"minimumcharge":194.94,"includeInNetFreight":null,"basis":"\/CWT","isHazMat":null,"distArr":""},"netfreightcostelems":[],"rateBands":[{"upperbreak":499,"unit":"CWT","amount":14.9,"discountpercentage":35.0,"lowerbreak":0,"actualCost":14.9},{"upperbreak":999,"unit":"CWT","amount":14.9,"discountpercentage":40.0,"lowerbreak":500,"actualCost":14.9},{"upperbreak":1999,"unit":"CWT","amount":14.9,"discountpercentage":45.0,"lowerbreak":1000,"actualCost":14.9},{"upperbreak":4999,"unit":"CWT","amount":14.9,"discountpercentage":50.0,"lowerbreak":2000,"actualCost":14.9},{"upperbreak":9999,"unit":"CWT","amount":14.9,"discountpercentage":55.0,"lowerbreak":5000,"actualCost":14.9},{"upperbreak":19999,"unit":"CWT","amount":14.9,"discountpercentage":60.0,"lowerbreak":10000,"actualCost":14.9},{"upperbreak":29999,"unit":"CWT","amount":14.9,"discountpercentage":65.0,"lowerbreak":20000,"actualCost":14.9},{"upperbreak":39999,"unit":"CWT","amount":14.9,"discountpercentage":70.0,"lowerbreak":30000,"actualCost":14.9},{"upperbreak":999999999,"unit":"CWT","amount":14.9,"discountpercentage":75.0,"lowerbreak":40000,"actualCost":14.9}],"accessorials":[],"rateId":"60064246245"});

rateObj.evaluateByObj.bind(rateObj);</scriptedRate><scriptedProcessingTime ttype="STRING">(processingTimeObj= {"transitTime":135180});getOceanAirProcessingTime.bind(processingTimeObj);</scriptedProcessingTime><origins ttype="SET"><item ttype="STRING">1073793413__HOLD_REQUIREMENT</item></origins><destinations ttype="SET"><item ttype="STRING">1073793414__HOLD_REQUIREMENT</item></destinations><rateValidityStart ttype="I64">1514808000</rateValidityStart><rateValidityEnd ttype="I64">1544616000</rateValidityEnd><freightClass ttype="STRING">Class 50</freightClass></value></item></steps><operatingTimes ttype="MAP"><item><key ttype="STRING">RECEIVING_1073793415_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073793415_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073792353_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073792353_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073793407_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073793407_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073792351_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073792351_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073793398_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073793398_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073779541_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073779541_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">14:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">13:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">14:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">13:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">14:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">13:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">14:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">13:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">14:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">13:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">14:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">13:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">14:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">13:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073793404_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073793404_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073793412_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073793412_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073793405_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073793405_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073780592_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073780592_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">15:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">14:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073792350_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073792350_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">23:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">22:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073779540_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073779540_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">12:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">11:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">12:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">11:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">12:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">11:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">12:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">11:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">12:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">11:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">12:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">11:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">12:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">11:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073793413_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073793413_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073780590_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073780590_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073793414_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073793414_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073793401_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073793401_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073780591_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073780591_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073793407_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073793407_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">07:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">06:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">SHIPPING_1073793404_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">SHIPPING_1073793404_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073780590_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073780590_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">05:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">04:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073793414_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073793414_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">04:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">03:59:59</endTime></weekDayHours></item></openTimeRange></value></item><item><key ttype="STRING">RECEIVING_1073792349_Operating_hour</key><value struct="OperatingHours" ttype="STRUCT"><id ttype="STRING">RECEIVING_1073792349_Operating_hour</id><openTimeRange ttype="LIST"><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">22:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">21:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">0</item></dayOfWeek><startTime ttype="STRING">22:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">21:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">1</item></dayOfWeek><startTime ttype="STRING">22:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">21:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">2</item></dayOfWeek><startTime ttype="STRING">22:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">21:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">3</item></dayOfWeek><startTime ttype="STRING">22:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">21:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">4</item></dayOfWeek><startTime ttype="STRING">22:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">21:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">5</item></dayOfWeek><startTime ttype="STRING">22:00:00</startTime><endTime ttype="STRING">23:59:59</endTime></weekDayHours></item><item struct="TimeRange" ttype="STRUCT"><weekDayHours struct="WeekDayHours" ttype="STRUCT"><dayOfWeek ttype="LIST"><item ttype="I32">6</item></dayOfWeek><startTime ttype="STRING">00:00:00</startTime><endTime ttype="STRING">21:59:59</endTime></weekDayHours></item></openTimeRange></value></item></operatingTimes><unitDimensions ttype="MAP"><item><key ttype="STRING">LINEARMETER</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">LINEARMETER</id><dimension ttype="I32">10</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/LNM</id><name ttype="STRING">544</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">WEIGHT</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">WEIGHT</id><dimension ttype="I32">5</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">wtInKG</id><name ttype="STRING">33</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">PACKAGE</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">PACKAGE</id><dimension ttype="I32">12</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/package</id><name ttype="STRING">155</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CUSTOM</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CUSTOM</id><dimension ttype="I32">6</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">NumberOfTOS</id><name ttype="STRING">100001</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">VOLUME</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">VOLUME</id><dimension ttype="I32">4</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">volInCBM</id><name ttype="STRING">81</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CURRENCY</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CURRENCY</id><dimension ttype="I32">0</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">Dollar</id><name ttype="STRING">840</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">PALLET</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">PALLET</id><dimension ttype="I32">7</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/pallet</id><name ttype="STRING">169</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">CARTON</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">CARTON</id><dimension ttype="I32">8</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/carton</id><name ttype="STRING">159</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">SQUAREMETER</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">SQUAREMETER</id><dimension ttype="I32">11</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/SQM</id><name ttype="STRING">181</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item><item><key ttype="STRING">UNIT</key><value struct="UnitDimension" ttype="STRUCT"><id ttype="STRING">UNIT</id><dimension ttype="I32">9</dimension><scaledUnits ttype="LIST"><item struct="UnitDefinition" ttype="STRUCT"><id ttype="STRING">/unit</id><name ttype="STRING">152</name><scale ttype="DOUBLE">1.0</scale></item></scaledUnits></value></item></unitDimensions><resources ttype="MAP"><item><key ttype="STRING">_901</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_901</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_901"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">28858_9_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28858_9_S</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28858_9_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1003_901_LT</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_901_LT</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_901_LT"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1003_84_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_84_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_84_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">_9</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_9</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_9"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">28858_10_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28858_10_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28858_10_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">10864_9_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">10864_9_S</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"10864_9_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1010_9_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1010_9_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1010_9_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">10864_9_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">10864_9_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"10864_9_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1010_256_A</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1010_256_A</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1010_256_A"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">10864_10_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">10864_10_S</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"10864_10_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1010_10_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1010_10_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1010_10_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">10864_18_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">10864_18_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"10864_18_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">_10</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_10</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_10"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">_84</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_84</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_84"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1010_9_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1010_9_S</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1010_9_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">28858_10_S</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">28858_10_S</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"28858_10_S"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">1003_9_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">1003_9_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"1003_9_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">10864_10_SC</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">10864_10_SC</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"10864_10_SC"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">_256</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_256</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_256"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item><item><key ttype="STRING">_18</key><value struct="Resource" ttype="STRUCT"><id ttype="STRING">_18</id><capacities ttype="LIST"/><scriptedConstraint ttype="STRING">(resourceObj= {"id":"_18"});evaluateConstraints.bind(resourceObj);</scriptedConstraint></value></item></resources><globalScript ttype="STRING">distanceMatrix = {"1073786606":{"1073788102":3861.214,"1073788103":3630.366,"1073793399":4043.439,"1073793404":3616.58},"1073786607":{"1073788102":3646.807,"1073788103":3415.959,"1073793399":3829.032,"1073793404":3402.173},"1073786604":{"1073788102":3961.318,"1073788103":3730.47,"1073793399":4143.543,"1073793404":3716.684},"1073786648":{"1073793398":2730.537,"1073793400":2664.072,"1073793403":73.464,"1073793407":73.429},"1073786605":{"1073788102":4372.622,"1073788103":4141.775,"1073793399":4554.848,"1073793404":4127.989},"1073786649":{"1073793398":1101.767,"1073793400":1143.522,"1073793403":3819.225,"1073793407":3816.344},"1073786609":{"1073788102":4148.511,"1073788103":3917.663,"1073793399":4330.736,"1073793404":3903.877},"1073780590":{"1073780591":25.0,"1073788102":1390.65,"1073788103":458.79,"1073788104":481.54,"1073793399":1140.52,"1073793404":372.83},"1073786653":{"1073788102":848.748,"1073788103":1794.293,"1073793399":1720.087,"1073793404":1780.507},"1073780591":{"1073788102":1414.12,"1073788103":483.3,"1073788104":509.15,"1073793399":1156.97,"1073793404":398.08},"1073786610":{"1073788102":3815.762,"1073788103":3584.914,"1073793399":3997.987,"1073793404":3571.128},"1073786651":{"1073788102":1695.825,"1073788103":514.697,"1073793399":855.788,"1073793404":532.502},"1073780592":{"1073793406":7.21},"1073778061":{"1073779540":100.0},"1073786652":{"1073788102":857.148,"1073788103":1801.536,"1073793399":1728.487,"1073793404":1787.75},"1073786613":{"1073788102":3463.02,"1073788103":3232.172,"1073793399":3645.245,"1073793404":3218.386},"1073786614":{"1073788102":4079.857,"1073788103":3849.01,"1073793399":4262.082,"1073793404":3835.224},"1073793414":{"1073793415":13.84},"1073786650":{"1073788102":1756.131,"1073788103":540.773,"1073793399":976.277,"1073793404":537.594},"1073786639":{"1073788102":4668.727,"1073788103":4437.879,"1073793399":4850.952,"1073793404":4424.093},"1073793412":{"1073793413":200.0},"1073786637":{"1073788102":21.782,"1073788103":4590.935,"1073793399":5004.007,"1073793404":4577.149},"1073786638":{"1073788102":4427.171,"1073788103":4196.324,"1073793399":4609.397,"1073793404":4182.538},"1073786642":{"1073788102":1743.43,"1073788103":831.568,"1073793399":795.084,"1073793404":849.373},"1073786643":{"1073788102":1825.292,"1073788103":835.511,"1073793399":876.946,"1073793404":853.316},"1073788104":{"1073780590":481.54,"1073780591":509.15,"1073786599":3546.75,"1073786600":2766.36,"1073788104":0.01,"1073788103":137.26,"1073788102":951.43,"1073793399":831.84,"1073793404":148.19},"1073793407":{"1073793403":3.498,"1073786648":72.943,"1073786649":3809.315,"1073793398":2719.025,"1073793400":2652.559},"1073786641":{"1073788102":4788.534,"1073788103":4557.687,"1073793399":4970.759,"1073793404":4543.901},"1073788103":{"1073786598":3705.477,"1073786600":3382.025,"1073786601":3793.261,"1073786602":3870.506,"1073786603":3482.313,"1073786604":3731.124,"1073786605":4142.429,"1073786606":3630.979,"1073786607":3416.603,"1073786609":3918.317,"1073786610":3585.597,"1073786613":3232.822,"1073786614":3849.65,"1073786615":3132.541,"1073786616":3365.445,"1073786617":2649.014,"1073786618":2751.75,"1073786622":4623.611,"1073786623":4625.444,"1073786624":4677.792,"1073786626":4433.347,"1073786627":4635.965,"1073786629":4654.134,"1073786630":4766.653,"1073786631":3475.058,"1073786632":3572.287,"1073786633":3759.152,"1073786634":4395.953,"1073786635":4497.719,"1073786636":4645.824,"1073786637":4591.027,"1073786638":4196.417,"1073786639":4437.972,"1073786641":4557.767,"1073786642":829.541,"1073786643":833.6,"1073786644":1056.639,"1073786645":852.674,"1073786646":1022.184,"1073786647":836.154,"1073786650":540.403,"1073786651":514.008,"1073786652":1801.417,"1073786653":1794.065,"1073793399":503.815,"1073793404":19.781,"1073780590":458.79,"1073780591":483.3,"1073788104":137.26,"1073788102":932.97},"1073793406":{"1073780592":7.21,"1073793406":0.01},"1073786602":{"1073788102":4100.709,"1073788103":3869.861,"1073793399":4282.934,"1073793404":3856.075},"1073786646":{"1073788102":1994.787,"1073788103":1021.544,"1073793399":1046.441,"1073793404":1039.349},"1073786603":{"1073788102":3712.592,"1073788103":3481.744,"1073793399":3894.817,"1073793404":3467.958},"1073786647":{"1073788102":1731.391,"1073788103":838.966,"1073793399":783.045,"1073793404":856.771},"1073793404":{"1073793399":522.031,"1073786598":3691.757,"1073786600":3368.305,"1073786601":3779.541,"1073786602":3856.786,"1073786603":3468.593,"1073786604":3717.404,"1073786605":4128.709,"1073786606":3617.259,"1073786607":3402.883,"1073786609":3904.597,"1073786610":3571.877,"1073786613":3219.102,"1073786614":3835.931,"1073786615":3118.821,"1073786616":3351.725,"1073786617":2635.294,"1073786618":2738.03,"1073786622":4609.891,"1073786623":4611.724,"1073786624":4664.073,"1073786626":4419.627,"1073786627":4622.245,"1073786629":4640.414,"1073786630":4752.933,"1073786631":3461.338,"1073786632":3558.568,"1073786633":3745.433,"1073786634":4382.233,"1073786635":4483.999,"1073786636":4632.104,"1073786637":4577.308,"1073786638":4182.697,"1073786639":4424.252,"1073786641":4544.047,"1073786642":847.349,"1073786643":851.408,"1073786644":1074.447,"1073786645":870.482,"1073786646":1039.992,"1073786647":853.962,"1073786650":537.261,"1073786651":531.816,"1073786652":1787.695,"1073786653":1780.343,"1073788102":1215.761,"1073788103":18.837,"1073793403":100.0,"1073786620":100.0,"1073780590":372.83,"1073780591":398.08,"1073788104":148.19},"1073786600":{"1073788102":3612.143,"1073788103":3381.298,"1073793399":3794.368,"1073793404":3367.512,"1073788104":2766.36},"1073786644":{"1073788102":2284.845,"1073788103":1059.535,"1073793399":1336.5,"1073793404":1077.34},"1073793403":{"1073793398":2721.913,"1073793400":2655.447,"1073786648":73.03,"1073786649":3812.203,"1073793407":3.636},"1073786601":{"1073788102":4023.464,"1073788103":3792.616,"1073793399":4205.689,"1073793404":3778.83},"1073786645":{"1073788102":1720.331,"1073788103":855.057,"1073793399":771.985,"1073793404":872.862},"1073793402":{"1073793401":293.43,"1073793402":0.01},"1073788102":{"1073786598":3934.484,"1073786600":3611.031,"1073786601":4022.268,"1073786602":4099.513,"1073786603":3711.32,"1073786604":3960.131,"1073786605":4371.436,"1073786606":3859.986,"1073786607":3645.61,"1073786609":4147.324,"1073786610":3814.604,"1073786613":3461.829,"1073786614":4078.657,"1073786615":3361.548,"1073786616":3594.451,"1073786617":2708.681,"1073786618":2811.416,"1073786622":4852.618,"1073786623":4854.45,"1073786624":4906.799,"1073786626":4662.354,"1073786627":4864.972,"1073786629":4883.141,"1073786630":4995.66,"1073786631":3704.065,"1073786632":3801.294,"1073786633":3988.159,"1073786634":4624.96,"1073786635":4726.726,"1073786636":4874.831,"1073786637":20.034,"1073786638":4425.424,"1073786639":4666.979,"1073786641":4786.774,"1073786642":1743.486,"1073786643":1826.794,"1073786644":2285.326,"1073786645":1720.947,"1073786646":1994.939,"1073786647":1731.436,"1073786650":1755.665,"1073786651":1694.734,"1073786652":855.579,"1073786653":847.019,"1073793399":949.084,"1073793404":1217.677,"1073780590":1390.65,"1073780591":1414.12,"1073788104":951.43,"1073788103":932.97},"1073793401":{"1073793402":100.0},"1073786629":{"1073788102":4884.889,"1073788103":4654.041,"1073793399":5067.114,"1073793404":4640.255},"1073793400":{"1073793398":71.531,"1073786648":2669.991,"1073786649":1142.076,"1073793403":2660.035,"1073793407":2657.154,"1073793401":100.0},"1073786626":{"1073788102":4664.102,"1073788103":4433.254,"1073793399":4846.327,"1073793404":4419.468},"1073792354":{"1073792353":12.43,"1073792349":892.87,"1073792351":102.1,"1073792352":80.52,"1073792354":0.01},"1073786627":{"1073788102":4866.719,"1073788103":4635.872,"1073793399":5048.945,"1073793404":4622.086},"1073792353":{"1073792354":12.43,"1073792349":886.3,"1073792351":102.6,"1073792352":86.14,"1073792353":0.01},"1073792352":{"1073792351":43.66,"1073792349":849.5,"1073792352":0.01,"1073792353":86.14,"1073792354":80.52},"1073792351":{"1073792352":43.66,"1073792349":807.11,"1073792351":0.01,"1073792353":102.6,"1073792354":102.1},"1073792350":{"1073792348":28.12,"1073792350":0.01},"1073786598":{"1073788102":3935.712,"1073788103":3704.864,"1073793399":4117.937,"1073793404":3691.078},"1073786631":{"1073788102":3705.259,"1073788103":3474.411,"1073793399":3887.484,"1073793404":3460.625},"1073786632":{"1073788102":3802.478,"1073788103":3571.631,"1073793399":3984.703,"1073793404":3557.845},"1073786599":{"1073788104":3546.75},"1073786630":{"1073788102":4997.408,"1073788103":4766.56,"1073793399":5179.633,"1073793404":4752.774},"1073786635":{"1073788102":4728.477,"1073788103":4497.629,"1073793399":4910.702,"1073793404":4483.843},"1073792349":{"1073792348":191.57,"1073792349":0.01,"1073792351":807.11,"1073792352":849.5,"1073792353":886.3,"1073792354":892.87},"1073786636":{"1073788102":4876.579,"1073788103":4645.731,"1073793399":5058.804,"1073793404":4631.945},"1073792348":{"1073792349":191.57,"1073792350":28.12,"1073792348":0.01},"1073786633":{"1073788102":3989.91,"1073788103":3759.063,"1073793399":4172.135,"1073793404":3745.277},"1073786634":{"1073788102":4626.707,"1073788103":4395.86,"1073793399":4808.933,"1073793404":4382.074},"1073786617":{"1073788102":2711.719,"1073788103":2649.063,"1073793399":3062.136,"1073793404":2635.277},"1073786618":{"1073788102":2814.475,"1073788103":2751.82,"1073793399":3164.892,"1073793404":2738.034},"1073779541":{"1073778062":150.0},"1073786615":{"1073788102":3362.755,"1073788103":3131.908,"1073793399":3544.981,"1073793404":3118.122},"1073793399":{"1073786598":4114.01,"1073786600":3790.557,"1073786601":4201.794,"1073786602":4279.039,"1073786603":3890.846,"1073786604":4139.657,"1073786605":4550.962,"1073786606":4039.512,"1073786607":3825.136,"1073786609":4326.85,"1073786610":3994.13,"1073786613":3641.355,"1073786614":4258.183,"1073786615":3541.074,"1073786616":3773.977,"1073786617":3057.547,"1073786618":3160.282,"1073786622":5032.144,"1073786623":5033.976,"1073786624":5086.325,"1073786626":4841.88,"1073786627":5044.498,"1073786629":5062.667,"1073786630":5175.186,"1073786631":3883.591,"1073786632":3980.82,"1073786633":4167.685,"1073786634":4804.486,"1073786635":4906.252,"1073786636":5054.357,"1073786637":4999.56,"1073786638":4604.95,"1073786639":4846.505,"1073786641":4966.3,"1073786642":794.92,"1073786643":878.228,"1073786644":1336.76,"1073786645":772.381,"1073786646":1046.373,"1073786647":782.87,"1073786650":975.987,"1073786651":854.728,"1073786652":1724.822,"1073786653":1716.262,"1073788102":949.078,"1073788103":504.34,"1073793404":523.849,"1073780590":1140.52,"1073780591":1156.97,"1073788104":831.84},"1073786616":{"1073788102":3595.648,"1073788103":3364.801,"1073793399":3777.873,"1073793404":3351.015},"1073793398":{"1073786648":2736.442,"1073786649":1099.28,"1073793400":71.562,"1073793403":2726.487,"1073793407":2723.605,"1073793399":1200.0},"1073786624":{"1073788102":4908.55,"1073788103":4677.703,"1073793399":5090.775,"1073793404":4663.917},"1073786622":{"1073788102":4854.366,"1073788103":4623.518,"1073793399":5036.591,"1073793404":4609.732},"1073786623":{"1073788102":4856.198,"1073788103":4625.351,"1073793399":5038.423,"1073793404":4611.565}}
transitTimeMatrix = {"1073786606":{"1073788102":267180,"1073788103":255720,"1073793399":280860,"1073793404":253680},"1073786607":{"1073788102":252300,"1073788103":239460,"1073793399":264600,"1073793404":238860},"1073786604":{"1073788102":274800,"1073788103":263400,"1073793399":288540,"1073793404":262800},"1073786648":{"1073793398":173220,"1073793400":167640,"1073793403":11100,"1073793407":10980},"1073786605":{"1073788102":321420,"1073788103":310020,"1073793399":335160,"1073793404":307980},"1073786649":{"1073793398":70200,"1073793400":76800,"1073793403":237780,"1073793407":236100},"1073786609":{"1073788102":300180,"1073788103":288720,"1073793399":313860,"1073793404":288180},"1073780590":{"1073780591":3000,"1073788102":100080,"1073788103":33000,"1073788104":34620,"1073793399":82080,"1073793404":26820},"1073786653":{"1073788102":52080,"1073788103":109500,"1073793399":108300,"1073793404":108900},"1073780591":{"1073788102":101760,"1073788103":34740,"1073788104":36600,"1073793399":83280,"1073793404":28620},"1073786610":{"1073788102":259680,"1073788103":246780,"1073793399":271920,"1073793404":246180},"1073786651":{"1073788102":106320,"1073788103":32520,"1073793399":54060,"1073793404":33420},"1073780592":{"1073793406":480},"1073778061":{"1073779540":86400},"1073786652":{"1073788102":52500,"1073788103":109860,"1073793399":108780,"1073793404":109320},"1073786613":{"1073788102":234480,"1073788103":221520,"1073793399":246720,"1073793404":220980},"1073786614":{"1073788102":292680,"1073788103":281220,"1073793399":306420,"1073793404":279240},"1073793414":{"1073793415":960},"1073786650":{"1073788102":109380,"1073788103":33780,"1073793399":59280,"1073793404":34020},"1073786639":{"1073788102":400020,"1073788103":387120,"1073793399":412320,"1073793404":386580},"1073793412":{"1073793413":172800},"1073786637":{"1073788102":422940,"1073788103":411480,"1073793399":436620,"1073793404":410880},"1073786638":{"1073788102":346020,"1073788103":333120,"1073793399":358320,"1073793404":332580},"1073786642":{"1073788102":105180,"1073788103":51480,"1073793399":47940,"1073793404":52440},"1073786643":{"1073788102":109440,"1073788103":54060,"1073793399":52260,"1073793404":54960},"1073788104":{"1073780590":34620,"1073780591":36600,"1073786599":255360,"1073786600":199140,"1073788104":60,"1073788103":9840,"1073788102":68460,"1073793399":59880,"1073793404":10620},"1073793407":{"1073793403":300,"1073786648":10920,"1073786649":237720,"1073793398":166920,"1073793400":162840},"1073786641":{"1073788102":454080,"1073788103":441240,"1073793399":466380,"1073793404":440640},"1073788103":{"1073786598":264660,"1073786600":232320,"1073786601":271320,"1073786602":281820,"1073786603":239580,"1073786604":263460,"1073786605":310080,"1073786606":255840,"1073786607":239520,"1073786609":288840,"1073786610":246840,"1073786613":221640,"1073786614":281280,"1073786615":216180,"1073786616":270420,"1073786617":191040,"1073786618":214380,"1073786622":415500,"1073786623":415560,"1073786624":469560,"1073786626":386880,"1073786627":414960,"1073786629":421260,"1073786630":436020,"1073786631":239520,"1073786632":246240,"1073786633":259980,"1073786634":382440,"1073786635":426840,"1073786636":415380,"1073786637":411540,"1073786638":333240,"1073786639":387240,"1073786641":441300,"1073786642":51240,"1073786643":52500,"1073786644":66480,"1073786645":52020,"1073786646":62700,"1073786647":51420,"1073786650":33780,"1073786651":32460,"1073786652":109800,"1073786653":109560,"1073793399":30900,"1073793404":1560,"1073780590":33000,"1073780591":34740,"1073788104":9840,"1073788102":67140},"1073793406":{"1073780592":480,"1073793406":60},"1073786602":{"1073788102":293160,"1073788103":281700,"1073793399":306840,"1073793404":281160},"1073786646":{"1073788102":119700,"1073788103":62760,"1073793399":62520,"1073793404":65100},"1073786603":{"1073788102":252360,"1073788103":239460,"1073793399":264660,"1073793404":238920},"1073786647":{"1073788102":104580,"1073788103":51660,"1073793399":47400,"1073793404":54060},"1073793404":{"1073793399":33420,"1073786598":263940,"1073786600":231600,"1073786601":270660,"1073786602":281100,"1073786603":238920,"1073786604":261300,"1073786605":307980,"1073786606":253680,"1073786607":238800,"1073786609":288120,"1073786610":246180,"1073786613":220980,"1073786614":279180,"1073786615":214080,"1073786616":268320,"1073786617":188880,"1073786618":213720,"1073786622":414840,"1073786623":414960,"1073786624":468840,"1073786626":386160,"1073786627":414300,"1073786629":419160,"1073786630":433920,"1073786631":238800,"1073786632":245580,"1073786633":259260,"1073786634":381720,"1073786635":426180,"1073786636":414660,"1073786637":410880,"1073786638":332520,"1073786639":386520,"1073786641":440580,"1073786642":52260,"1073786643":54900,"1073786644":68880,"1073786645":54420,"1073786646":65100,"1073786647":52380,"1073786650":33960,"1073786651":33420,"1073786652":109140,"1073786653":108840,"1073788102":79440,"1073788103":1380,"1073793403":86400,"1073786620":86400,"1073780590":26820,"1073780591":28620,"1073788104":10620},"1073786600":{"1073788102":245100,"1073788103":232200,"1073793399":257340,"1073793404":231600,"1073788104":199140},"1073786644":{"1073788102":141000,"1073788103":66840,"1073793399":83820,"1073793404":69180},"1073793403":{"1073793398":167160,"1073793400":163080,"1073786648":11040,"1073786649":238020,"1073793407":480},"1073786601":{"1073788102":282660,"1073788103":271200,"1073793399":296400,"1073793404":270660},"1073786645":{"1073788102":104940,"1073788103":52260,"1073793399":47760,"1073793404":54600},"1073793402":{"1073793401":21120,"1073793402":60},"1073788102":{"1073786598":277320,"1073786600":244980,"1073786601":282540,"1073786602":293040,"1073786603":252240,"1073786604":274680,"1073786605":321360,"1073786606":267060,"1073786607":252180,"1073786609":300060,"1073786610":259500,"1073786613":234300,"1073786614":292560,"1073786615":227400,"1073786616":281640,"1073786617":194760,"1073786618":218100,"1073786622":426720,"1073786623":426840,"1073786624":480780,"1073786626":398100,"1073786627":426180,"1073786629":432480,"1073786630":447240,"1073786631":252180,"1073786632":257460,"1073786633":271200,"1073786634":393660,"1073786635":439500,"1073786636":426600,"1073786637":422760,"1073786638":345900,"1073786639":399900,"1073786641":453960,"1073786642":105120,"1073786643":109500,"1073786644":141000,"1073786645":105000,"1073786646":119640,"1073786647":104520,"1073786650":109380,"1073786651":106260,"1073786652":52320,"1073786653":51960,"1073793399":55860,"1073793404":79860,"1073780590":100080,"1073780591":101760,"1073788104":68460,"1073788103":67140},"1073793401":{"1073793402":7200},"1073786629":{"1073788102":432660,"1073788103":419700,"1073793399":444900,"1073793404":419160},"1073793400":{"1073793398":4620,"1073786648":167700,"1073786649":76680,"1073793403":162960,"1073793407":162720,"1073793401":7200},"1073786626":{"1073788102":399660,"1073788103":386760,"1073793399":411960,"1073793404":386220},"1073792354":{"1073792353":840,"1073792349":64260,"1073792351":7320,"1073792352":5760,"1073792354":60},"1073786627":{"1073788102":426360,"1073788103":414900,"1073793399":440040,"1073793404":414300},"1073792353":{"1073792354":840,"1073792349":63780,"1073792351":7380,"1073792352":6180,"1073792353":60},"1073792352":{"1073792351":3120,"1073792349":61140,"1073792352":60,"1073792353":6180,"1073792354":5760},"1073792351":{"1073792352":3120,"1073792349":58080,"1073792351":60,"1073792353":7380,"1073792354":7320},"1073792350":{"1073792348":1980,"1073792350":60},"1073786598":{"1073788102":277440,"1073788103":264540,"1073793399":289680,"1073793404":264000},"1073786631":{"1073788102":252300,"1073788103":239400,"1073793399":264540,"1073793404":238800},"1073786632":{"1073788102":257640,"1073788103":246120,"1073793399":271320,"1073793404":245580},"1073786599":{"1073788104":255360},"1073786630":{"1073788102":447420,"1073788103":435900,"1073793399":461100,"1073793404":433920},"1073786635":{"1073788102":439680,"1073788103":426780,"1073793399":451920,"1073793404":426180},"1073792349":{"1073792348":13740,"1073792349":60,"1073792351":58080,"1073792352":61140,"1073792353":63780,"1073792354":64260},"1073786636":{"1073788102":426720,"1073788103":415320,"1073793399":440460,"1073793404":414720},"1073792348":{"1073792349":13740,"1073792350":1980,"1073792348":60},"1073786633":{"1073788102":271320,"1073788103":259860,"1073793399":285060,"1073793404":259320},"1073786634":{"1073788102":393780,"1073788103":382380,"1073793399":407520,"1073793404":381780},"1073786617":{"1073788102":194880,"1073788103":190920,"1073793399":216120,"1073793404":188940},"1073786618":{"1073788102":219720,"1073788103":214320,"1073793399":239520,"1073793404":213780},"1073779541":{"1073778062":97800},"1073786615":{"1073788102":227520,"1073788103":216060,"1073793399":241260,"1073793404":214080},"1073793399":{"1073786598":289740,"1073786600":257340,"1073786601":296400,"1073786602":306900,"1073786603":264660,"1073786604":288540,"1073786605":335160,"1073786606":280860,"1073786607":264600,"1073786609":313920,"1073786610":271920,"1073786613":246720,"1073786614":306420,"1073786615":241260,"1073786616":295500,"1073786617":216120,"1073786618":239460,"1073786622":440580,"1073786623":440700,"1073786624":494640,"1073786626":411960,"1073786627":440040,"1073786629":444900,"1073786630":461100,"1073786631":264540,"1073786632":271320,"1073786633":285060,"1073786634":407460,"1073786635":451920,"1073786636":440460,"1073786637":436620,"1073786638":358320,"1073786639":412320,"1073786641":466320,"1073786642":47880,"1073786643":52260,"1073786644":83760,"1073786645":47760,"1073786646":62400,"1073786647":47280,"1073786650":59280,"1073786651":54000,"1073786652":108600,"1073786653":108240,"1073788102":55860,"1073788103":30900,"1073793404":33660,"1073780590":82080,"1073780591":83280,"1073788104":59880},"1073786616":{"1073788102":281760,"1073788103":270300,"1073793399":295500,"1073793404":268320},"1073793398":{"1073786648":173280,"1073786649":70260,"1073793400":4620,"1073793403":167100,"1073793407":166920,"1073793399":90000},"1073786624":{"1073788102":480900,"1073788103":469500,"1073793399":494640,"1073793404":468900},"1073786622":{"1073788102":426900,"1073788103":415440,"1073793399":440580,"1073793404":414840},"1073786623":{"1073788102":428400,"1073788103":415500,"1073793399":440700,"1073793404":414960}}
var rate = function(rateInputObj) {&#13;
&#13;
	this.evaluateByObj = function(dimObj) {&#13;
		result = this.evaluate(dimObj);&#13;
		if (!result || result.total &lt;= 0 || !rateInputObj.baseRate.total&#13;
				|| rateInputObj.baseRate.total &lt;= 0) {&#13;
			// warn(rateInputObj.rateId+':FinalTotalAmt='+result.total);&#13;
			// warn(rateInputObj.rateId+':Dimensions: '+JSON.stringify(dimObj));&#13;
			return 9999999;&#13;
		}&#13;
		return parseFloat(result.total);&#13;
	};&#13;
&#13;
	this.evaluate = function(dimObj) {&#13;
		this.evaluateBaseRate(dimObj);&#13;
		this.evaluateAccessorials(dimObj);&#13;
		this.evaluateStopOff(dimObj.stopOffs);&#13;
		this.getDistanceSplit(dimObj);&#13;
		this.evaluateTransitTime(dimObj);&#13;
		totalAmt = 0;&#13;
		baseRateBasis = rateInputObj.baseRate.basis;&#13;
		supportedBasis = rateInputObj.baseRate.supportedBasis;&#13;
		if (rateInputObj.baseRate.total) {&#13;
			totalAmt = rateInputObj.baseRate.total;&#13;
		}&#13;
		if (rateInputObj.accessorials) {&#13;
			for (i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				if (rateInputObj.accessorials[i]&#13;
						&amp;&amp; rateInputObj.accessorials[i].total&#13;
						&amp;&amp; (baseRateBasis || rateInputObj.accessorials[i].supportedBasis)) {&#13;
					totalAmt = totalAmt + rateInputObj.accessorials[i].total;&#13;
				}&#13;
			}&#13;
		}&#13;
		if (rateInputObj.stopBands &amp;&amp; rateInputObj.stopOffTotal) {&#13;
			totalAmt = totalAmt + rateInputObj.stopOffTotal;&#13;
		}&#13;
		rateInputObj.total = parseFloat(totalAmt);&#13;
		return rateInputObj;&#13;
	};&#13;
	&#13;
	this.evaluateSMCRate = function(dimObj) {&#13;
		lbConvRate = rateInputObj.baseRate.lbConvRate;&#13;
		smcWeight = dimObj.dims.wtInKG * lbConvRate;&#13;
		smcRate = 0.0;&#13;
		smcDiscount = 0.0;&#13;
		smcFinalPrice = 0.0;&#13;
		&#13;
		if (inputObj.isdeficitpricing &amp;&amp; inputObj.isdeficitpricing === 'yes') {&#13;
			if (rateInputObj.rateBands&#13;
					&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
				for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
					if ((smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
							|| (smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; smcWeight &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
						if (rateInputObj.rateBands[i].upperbreak == 999999999) {&#13;
							smcRate = rateInputObj.rateBands[i].amount;&#13;
							smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
						} else {&#13;
							smcNextBandAmt = rateInputObj.rateBands[i + 1].amount;&#13;
							smcNextBandRate = smcNextBandAmt * dimObj.dims.wtInKG * 0.01;&#13;
							smcBandRate = rateInputObj.rateBands[i].amount * dimObj.dims.wtInKG * 0.01;&#13;
									&#13;
							if (smcNextBandRate &gt; smcBandRate) {&#13;
								smcRate = rateInputObj.rateBands[i+1].amount;&#13;
								smcDiscount = rateInputObj.rateBands[i+1].discountpercentage;&#13;
							} else {&#13;
								smcRate = rateInputObj.rateBands[i].amount;&#13;
								smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
							}&#13;
						}&#13;
						break;&#13;
					}&#13;
				}&#13;
			}&#13;
		} else {&#13;
			if (rateInputObj.rateBands &amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
				for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
					if ((smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
						|| (smcWeight &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; smcWeight &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
							smcRate = rateInputObj.rateBands[i].amount;&#13;
							smcDiscount = rateInputObj.rateBands[i].discountpercentage;&#13;
							break;&#13;
					}&#13;
				}&#13;
			}		&#13;
		}		&#13;
		&#13;
		if (smcRate &gt; 0.0) {&#13;
			noOfCwts = dimObj.dims.wtInKG * 0.01;&#13;
			grossCharge = noOfCwts * smcRate;&#13;
			discountedCharge = 0.0;&#13;
			&#13;
			if (smcDiscount &gt; 0.0) {&#13;
				discountCharge = (grossCharge * smcDiscount) / 100;&#13;
				discountedCharge = grossCharge - discountCharge;				&#13;
			} else {&#13;
				discountedCharge = grossCharge;&#13;
			}&#13;
			&#13;
			minimumcharge = rateInputObj.baseRate.minimumcharge;&#13;
			minimumchargediscount = rateInputObj.baseRate.minimumchargediscount;&#13;
			discountedMinimumCharge = 0.0;&#13;
			&#13;
			if (minimumchargediscount &gt; 0.0) {&#13;
				minimumdiscountCharge = (minimumcharge * minimumchargediscount) / 100;&#13;
				discountedMinimumCharge = minimumcharge - minimumdiscountCharge;				&#13;
			} else {&#13;
				discountedMinimumCharge = minimumcharge;&#13;
			}&#13;
			&#13;
			smcTotalPrice = (discountedCharge &gt; discountedMinimumCharge) ? discountedCharge : discountedMinimumCharge;&#13;
			&#13;
			ltlsurchargepercentage = rateInputObj.baseRate.ltlsurchargepercentage;&#13;
			ltlsurchargeamount = (smcTotalPrice * ltlsurchargepercentage) / 100;&#13;
			&#13;
			smcCalculatedPrice = smcTotalPrice + ltlsurchargeamount;&#13;
			&#13;
			minimumfloorcharge = rateInputObj.baseRate.minimumfloorcharge;&#13;
			&#13;
			smcFinalPrice = (minimumfloorcharge &gt; smcCalculatedPrice) ? minimumfloorcharge : smcCalculatedPrice;			&#13;
		} &#13;
		&#13;
		rateInputObj.baseRate.supportedBasis = true;&#13;
		rateInputObj.baseRate.total = parseFloat(smcFinalPrice);&#13;
	};&#13;
&#13;
	this.evaluateBaseRate = function(dimObj) {&#13;
		inputObj = rateInputObj.baseRate;&#13;
		calculateCW = rateInputObj.calculateCW;&#13;
		supportedBasis = false;&#13;
		totalAmt = 0;&#13;
		quantity = 0;&#13;
		&#13;
		if (inputObj.isSMC) {&#13;
			this.evaluateSMCRate(dimObj);&#13;
			return;				&#13;
		}&#13;
		&#13;
		if (inputObj.basis === '/container') {&#13;
			supportedBasis = true;&#13;
			if (inputObj.equipmentType &amp;&amp; dimObj.dims[inputObj.equipmentType]) {&#13;
				totalAmt = inputObj.amount&#13;
						* dimObj.dims[inputObj.equipmentType];&#13;
				quantity = dimObj.dims[inputObj.equipmentType];&#13;
			} else {&#13;
				return;&#13;
			}&#13;
		}&#13;
&#13;
		if (inputObj.basis === '/package' || inputObj.basis === '/pallet'&#13;
				|| inputObj.basis === '/unit' || inputObj.basis === '/carton'&#13;
				|| inputObj.basis === '/LNM' || inputObj.basis === '/SQM'&#13;
				|| inputObj.basis === '/MBF' || inputObj.basis === '/MSF'&#13;
				|| inputObj.basis === '/LDM') {&#13;
			supportedBasis = true;&#13;
&#13;
			if (dimObj.dims.genericQty &amp;&amp; dimObj.dims.genericQtyUnit&#13;
					&amp;&amp; (dimObj.dims.genericQtyUnit === inputObj.basis)) {&#13;
				genericqty = dimObj.dims.genericQty;&#13;
				if (inputObj.minimumqty) {&#13;
					rateInputObj.baseRate.appliedMinQty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty : 0;&#13;
					genericqty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty&#13;
							: dimObj.dims.genericQty;							&#13;
				}&#13;
				totalAmt = inputObj.amount * genericqty;&#13;
				quantity = genericqty;&#13;
			} else if (dimObj.dims[inputObj.basis]) {&#13;
				genericqty = dimObj.dims[inputObj.basis];&#13;
				if (inputObj.minimumqty) {&#13;
					rateInputObj.baseRate.appliedMinQty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty : 0;&#13;
					genericqty = inputObj.minimumqty &gt; dimObj.dims.genericQty ? inputObj.minimumqty&#13;
							: dimObj.dims.genericQty;&#13;
				}&#13;
				totalAmt = inputObj.amount * genericqty;&#13;
				quantity = genericqty;&#13;
			}&#13;
		}&#13;
&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == '/FLAT') {&#13;
			supportedBasis = true;&#13;
			totalAmt = inputObj.amount;&#13;
			quantity = 1;&#13;
		}&#13;
		&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == 'lps') {&#13;
			supportedBasis = true;&#13;
			totalAmt = inputObj.amount;&#13;
			quantity = 1;&#13;
	    }&#13;
	    &#13;
		if (dimObj.dims.wtInKG &amp;&amp; inputObj.wtConvRate) {&#13;
			supportedBasis = true;&#13;
			weight = dimObj.dims.wtInKG;&#13;
&#13;
			// GTN-25018 : Chargeable Weight scenario.&#13;
			volume = dimObj.dims.volInCBM;&#13;
			dimFactor = rateInputObj.dimFactor;&#13;
			dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
			volumetricWeight = 0.0;&#13;
			if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
				if (dimFactorConv === 'cm/kg') {&#13;
					volumetricWeight = (volume * 1000000) / dimFactor;&#13;
				} else if (dimFactorConv === 'in/lb') {&#13;
					volumetricWeight = (volume * 61024) / dimFactor;&#13;
					volumetricWeight = volumetricWeight * 0.45359237;&#13;
			    }&#13;
			}&#13;
			&#13;
			weight = (weight * inputObj.wtConvRate) &gt; (volumetricWeight  * inputObj.wtConvRate) ? weight&#13;
					: volumetricWeight;&#13;
&#13;
			if (inputObj.minWeight) {&#13;
				inputObj.appliedMinWeight = weight &lt; inputObj.minWeight ? inputObj.minWeight : 0;&#13;
				weight = weight &lt; inputObj.minWeight ? inputObj.minWeight&#13;
						: weight;&#13;
				inputObj.wtConvRate = 1;&#13;
			}&#13;
			quantity = weight * inputObj.wtConvRate;&#13;
			totalAmt = this.evaluateRateBands(weight, inputObj.amount,&#13;
					inputObj.wtConvRate);&#13;
		}&#13;
&#13;
		if (inputObj.amount &amp;&amp; inputObj.basis == '/WM') {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			volume = dimObj.dims.volInCBM;&#13;
			wmUnit = 0;&#13;
			supportedBasis = true;&#13;
			if (weight) {&#13;
				wmUnit = weight * inputObj.wtConvRate;&#13;
			}&#13;
			if (volume) {&#13;
				wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
			}&#13;
			if (inputObj.minWeight) {&#13;
				rateInputObj.baseRate.appliedMinWeight = wmUnit &lt; inputObj.minWeight ? inputObj.minWeight : 0;&#13;
				wmUnit = wmUnit &lt; inputObj.minWeight ? inputObj.minWeight&#13;
						: wmUnit;&#13;
				inputObj.wtConvRate = 1;&#13;
			}&#13;
			totalAmt = inputObj.amount * wmUnit;&#13;
			quantity = wmUnit;&#13;
		}&#13;
&#13;
		if (dimObj.dims.volInCBM &amp;&amp; inputObj.volConvRate) {&#13;
			supportedBasis = true;&#13;
			volume = dimObj.dims.volInCBM;&#13;
&#13;
			if (inputObj.minimumqty) {&#13;
				rateInputObj.baseRate.appliedMinQty = volume &lt; inputObj.minimumqty ? inputObj.minimumqty : 0;				&#13;
				volume = volume &lt; inputObj.minimumqty ? inputObj.minimumqty&#13;
						: volume;&#13;
				inputObj.volConvRate = 1;&#13;
			}&#13;
			tempAmt = this.evaluateRateBands(volume, inputObj.amount,&#13;
					inputObj.volConvRate);&#13;
			totalAmt = totalAmt &gt; tempAmt ? totalAmt : tempAmt;						&#13;
			quantity = volume * inputObj.volConvRate;&#13;
			&#13;
		} else if ((dimObj.dims.dstInMile&#13;
				|| (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) || rateInputObj.distance)&#13;
				&amp;&amp; inputObj.dstConvRate) {&#13;
			supportedBasis = true;&#13;
			distance = 0.0;&#13;
			if (dimObj.dims.dstInMile) {&#13;
				distance = dimObj.dims.dstInMile;&#13;
			} else if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {&#13;
				distance = this.getEffectiveDistance(dimObj);&#13;
			} else {&#13;
				distance = rateInputObj.distance;&#13;
			}&#13;
			quantity = distance * inputObj.dstConvRate;&#13;
			totalAmt = this.evaluateRateBands(distance, inputObj.amount,&#13;
					inputObj.dstConvRate);&#13;
		}&#13;
&#13;
		if (inputObj.basis === 'pricingbands') {&#13;
			supportedBasis = true;&#13;
			bandAmt = 0.0;&#13;
			mUnit = 0.0;&#13;
			convRate = 0.0;&#13;
			amount = 0.0;&#13;
			&#13;
			if (inputObj.isdeficitpricing) {&#13;
				if (inputObj.wtConvRate) {&#13;
					mUnit = dimObj.dims.wtInKG;&#13;
					convRate = inputObj.wtConvRate;&#13;
					&#13;
					// GTN-27410 : Chargeable Weight scenario for TL and LTL.&#13;
					volume = dimObj.dims.volInCBM;&#13;
					dimFactor = rateInputObj.dimFactor;&#13;
					dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
					volumetricWeight = 0.0;&#13;
					if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
						if (dimFactorConv === 'cm/kg') {&#13;
							volumetricWeight = (volume * 1000000) / dimFactor;&#13;
						} else if (dimFactorConv === 'in/lb') {&#13;
							volumetricWeight = (volume * 61024) / dimFactor;&#13;
							volumetricWeight = volumetricWeight * 0.45359237;&#13;
						}&#13;
					}&#13;
&#13;
					mUnit = (mUnit * inputObj.wtConvRate) &gt; (volumetricWeight * convRate) ? mUnit&#13;
							: volumetricWeight;&#13;
&#13;
					if (inputObj.minWeight) {&#13;
						mUnit = mUnit &lt; inputObj.minWeight ? inputObj.minWeight&#13;
								: mUnit;&#13;
						inputObj.wtConvRate = 1;&#13;
						convRate = 1;&#13;
					}&#13;
				} else if (inputObj.volConvRate) {&#13;
					mUnit = dimObj.dims.volInCBM;&#13;
					convRate = inputObj.volConvRate;&#13;
				} else if (inputObj.dstConvRate) {&#13;
					mUnit = dimObj.dims.dstInMile;&#13;
					convRate = inputObj.dstConvRate;&#13;
				} else {&#13;
					if (inputObj.weightbreakbasis&#13;
							&amp;&amp; (inputObj.weightbreakbasis === '/package'&#13;
									|| inputObj.weightbreakbasis === '/pallet'&#13;
									|| inputObj.weightbreakbasis === '/unit'&#13;
									|| inputObj.weightbreakbasis === '/carton'&#13;
									|| inputObj.weightbreakbasis === '/LNM'&#13;
									|| inputObj.weightbreakbasis === '/SQM'&#13;
									|| inputObj.weightbreakbasis === '/MBF'&#13;
									|| inputObj.weightbreakbasis === '/MSF' &#13;
									|| inputObj.weightbreakbasis === '/LDM')) {&#13;
						if (dimObj.dims.genericQty&#13;
								&amp;&amp; dimObj.dims.genericQtyUnit&#13;
								&amp;&amp; (dimObj.dims.genericQtyUnit === inputObj.weightbreakbasis)) {&#13;
							mUnit = dimObj.dims.genericQty;&#13;
							convRate = 1;&#13;
						} else if (dimObj.dims[inputObj.weightbreakbasis]) {&#13;
							mUnit = dimObj.dims[inputObj.weightbreakbasis];&#13;
							convRate = 1;&#13;
						}&#13;
					}&#13;
				}&#13;
&#13;
				if (inputObj.isdeficitpricing === 'yes') {&#13;
					if (rateInputObj.rateBands&#13;
							&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
						for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
							if (((mUnit * convRate) &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
									|| ((mUnit * convRate) &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; (mUnit * convRate) &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
								if (rateInputObj.rateBands[i].upperbreak == 999999999) {&#13;
								    if (inputObj.weightbreakbasis == 'lps') {&#13;
										bandAmt = rateInputObj.rateBands[i].amount;&#13;
									} else {&#13;
										bandAmt = rateInputObj.rateBands[i].amount&#13;
											* mUnit * convRate;																&#13;
									}&#13;
									quantity = mUnit * convRate;										&#13;
									amount = rateInputObj.rateBands[i].actualCost;&#13;
								} else {&#13;
									if (inputObj.weightbreakbasis == 'lps') {&#13;
										bandAmt = rateInputObj.rateBands[i + 1].amount;&#13;
									} else {&#13;
										bandAmt = rateInputObj.rateBands[i + 1].amount&#13;
												* rateInputObj.rateBands[i + 1].lowerbreak&#13;
												* convRate;							&#13;
									}&#13;
									actualPrice = 0.0;&#13;
									if (inputObj.weightbreakbasis == 'lps') {&#13;
										actualPrice = rateInputObj.rateBands[i].amount;&#13;
									} else {&#13;
										actualPrice = rateInputObj.rateBands[i].amount&#13;
												* mUnit * convRate;						&#13;
									}&#13;
									&#13;
									if (bandAmt &gt; actualPrice) {&#13;
										bandAmt = actualPrice;&#13;
										amount = rateInputObj.rateBands[i].actualCost;&#13;
									} else {&#13;
										amount = rateInputObj.rateBands[i + 1].actualCost;&#13;
									}&#13;
									quantity = mUnit * convRate;		&#13;
								}&#13;
								break;&#13;
							}&#13;
						}&#13;
					}&#13;
				} else {&#13;
					if (rateInputObj.rateBands&#13;
							&amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
						for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
							if (((mUnit * convRate) &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
									|| ((mUnit * convRate) &gt; rateInputObj.rateBands[i].lowerbreak &amp;&amp; (mUnit * convRate) &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
								if (inputObj.weightbreakbasis == 'lps') {&#13;
									bandAmt = rateInputObj.rateBands[i].amount;&#13;
								} else {&#13;
									bandAmt = rateInputObj.rateBands[i].amount&#13;
										* mUnit * convRate;								&#13;
								}&#13;
								quantity = mUnit * convRate;&#13;
								amount = rateInputObj.rateBands[i].actualCost;&#13;
								break;&#13;
							}&#13;
						}&#13;
					}&#13;
				}&#13;
			}		&#13;
			&#13;
			rateInputObj.baseRate.actualCost = parseFloat(amount);&#13;
			totalAmt = bandAmt;&#13;
		}&#13;
&#13;
		if (!supportedBasis) {&#13;
			switch (inputObj.basis) {&#13;
			case '/container':&#13;
			case '/CBM':&#13;
			case '/WM':&#13;
			case '/kg':&#13;
			case '/lb':&#13;
			case '/ton':&#13;
			case '/MI':&#13;
			case '/KM':&#13;
				rateInputObj.baseRate.supportedBasis = true;&#13;
				supportedBasis = true;&#13;
			}&#13;
		}&#13;
&#13;
		if (!supportedBasis) {&#13;
			totalAmt = inputObj.amount;&#13;
			rateInputObj.baseRate.quantity = 1;&#13;
		}&#13;
		&#13;
		if (quantity) {&#13;
			rateInputObj.baseRate.quantity = quantity;&#13;
		}		&#13;
&#13;
		if (inputObj.minAmount) {&#13;
			rateInputObj.baseRate.appliedMin = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount : 0;&#13;
			totalAmt = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount&#13;
					: totalAmt;&#13;
		}&#13;
		&#13;
		if (inputObj.maxAmount) {&#13;
			rateInputObj.baseRate.appliedMax = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount : 0;&#13;
			totalAmt = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount&#13;
					: totalAmt;&#13;
		}&#13;
	&#13;
		rateInputObj.baseRate.supportedBasis = supportedBasis;&#13;
		rateInputObj.baseRate.total = parseFloat(totalAmt);&#13;
	};&#13;
&#13;
	this.getEffectiveDistance = function(dimObj) {&#13;
		distance = 0.0;&#13;
		var jsonBaseRate = rateInputObj.baseRate;&#13;
		for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
			origStop = dimObj.stopOffs[i].stop;&#13;
			if (origStop.indexOf('__') &gt; 0) {&#13;
				origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
			}&#13;
			destStop = dimObj.stopOffs[i + 1].stop;&#13;
			if (destStop.indexOf('__') &gt; 0) {&#13;
				destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
			}&#13;
			if (origStop == destStop) {&#13;
				distance = distance + 0.01;&#13;
				continue;&#13;
			}&#13;
			if (!distanceMatrix[origStop]&#13;
					|| !distanceMatrix[origStop][destStop]) {&#13;
				if (rateInputObj.distance) {&#13;
					return rateInputObj.distance;&#13;
				} else {&#13;
					return 9999999;&#13;
				}&#13;
			}&#13;
			distval = distanceMatrix[origStop][destStop];&#13;
			distance = distance + distanceMatrix[origStop][destStop];&#13;
		}&#13;
		return distance;&#13;
	};&#13;
&#13;
	this.evaluateRateBands = function(totalDim, rateAmount, ConvRate) {&#13;
		totalBandAmt = 0.0;&#13;
		if (rateInputObj.rateBands &amp;&amp; rateInputObj.rateBands.length &gt; 0) {&#13;
			actualCost = 0.0;&#13;
			for (i = 0; i &lt; rateInputObj.rateBands.length; i++) {&#13;
				if ((totalDim &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; !rateInputObj.rateBands[i].upperbreak)&#13;
						|| (totalDim &gt;= rateInputObj.rateBands[i].lowerbreak &amp;&amp; totalDim &lt;= rateInputObj.rateBands[i].upperbreak)) {&#13;
					totalBandAmt = (rateInputObj.baseRate.basis === '/FLAT') ? rateInputObj.rateBands[i].amount&#13;
							: (rateInputObj.rateBands[i].amount * totalDim * ConvRate);&#13;
					actualCost = rateInputObj.rateBands[i].actualCost;&#13;
					break;&#13;
				}&#13;
			}&#13;
			if (totalBandAmt == 0 &amp;&amp; rateInputObj.baseRate) {&#13;
				totalBandAmt = rateInputObj.baseRate.basis === '/kg' ? (rateInputObj.baseRate.amount&#13;
						* totalDim * ConvRate)&#13;
						: rateInputObj.baseRate.amount;&#13;
				actualCost = rateInputObj.baseRate.amount;&#13;
			}&#13;
			rateInputObj.baseRate.actualCost = actualCost;&#13;
		} else {&#13;
			totalBandAmt = (rateInputObj.baseRate.basis === '/FLAT') ? rateAmount&#13;
					: rateAmount * totalDim * ConvRate;&#13;
		}&#13;
		return parseFloat(totalBandAmt);&#13;
	};&#13;
&#13;
	this.evaluateAccessorials = function(dimObj) {&#13;
		if (rateInputObj.accessorials) {&#13;
			for (var i = 0; i &lt; rateInputObj.accessorials.length; i++) {&#13;
				if (rateInputObj.accessorials[i]) {&#13;
					accObj = rateInputObj.accessorials[i];&#13;
					quantity = 0;&#13;
					totalAmt = 0;&#13;
					if (accObj.basis === '/container') {&#13;
						if (rateInputObj.baseRate.equipmentType&#13;
								&amp;&amp; dimObj.dims[rateInputObj.baseRate.equipmentType]) {&#13;
							totalAmt = accObj.amount&#13;
									* dimObj.dims[rateInputObj.baseRate.equipmentType];&#13;
							quantity =  dimObj.dims[rateInputObj.baseRate.equipmentType];&#13;
						} else {&#13;
							rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
							continue;&#13;
						}&#13;
					}&#13;
&#13;
					if (accObj.basis === '%') {&#13;
						netfreightcostelems = rateInputObj.netfreightcostelems;&#13;
						if (netfreightcostelems&#13;
								&amp;&amp; netfreightcostelems.length &gt; 0) {&#13;
							totalSurchargeAmount = 0;&#13;
							for (var j = 0; j &lt; netfreightcostelems.length; j++) {&#13;
								netFreightSurcharge = netfreightcostelems[j];&#13;
								surchargeAmount = this.getSurchargeAmount(&#13;
										dimObj, netFreightSurcharge);&#13;
								totalSurchargeAmount = totalSurchargeAmount&#13;
										+ surchargeAmount;&#13;
							}&#13;
&#13;
							baseRate = rateInputObj.baseRate.total;&#13;
							totalAmt = ((baseRate + totalSurchargeAmount) * accObj.amount) / 100;&#13;
						} else {&#13;
							baseRate = rateInputObj.baseRate.total;&#13;
							totalAmt = (baseRate * accObj.amount) / 100;&#13;
						}&#13;
					}&#13;
&#13;
					if (accObj.basis === '/delivery'&#13;
							|| accObj.basis === '/entry'&#13;
							|| accObj.basis === '/shipment') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
&#13;
					if (accObj.basis === '/package'&#13;
							|| accObj.basis === '/pallet'&#13;
							|| accObj.basis === '/unit'&#13;
							|| accObj.basis === '/carton'&#13;
							|| accObj.basis === '/LNM'&#13;
							|| accObj.basis === '/SQM'&#13;
							|| accObj.basis === '/MSF'&#13;
							|| accObj.basis === '/MBF'&#13;
							|| accObj.basis === '/LDM') {&#13;
						if (dimObj.dims.genericQty&#13;
								&amp;&amp; dimObj.dims.genericQtyUnit&#13;
								&amp;&amp; (dimObj.dims.genericQtyUnit === accObj.basis)) {&#13;
							totalAmt = accObj.amount * dimObj.dims.genericQty;&#13;
							quantity = dimObj.dims.genericQty;&#13;
						} else if (dimObj.dims[accObj.basis]) {&#13;
							totalAmt = accObj.amount&#13;
									* dimObj.dims[accObj.basis];&#13;
						}&#13;
					}&#13;
&#13;
					if (dimObj.dims.wtInKG &amp;&amp; accObj.wtConvRate) {&#13;
						weight = dimObj.dims.wtInKG;&#13;
&#13;
						// GTN-25018 : Chargeable Weight scenario.&#13;
						if (accObj.calculatedWeightBasis&#13;
								&amp;&amp; accObj.calculatedWeightBasis === 'Chargeable Weight') {&#13;
							dimFactor = rateInputObj.dimFactor;&#13;
							dimFactorConv = rateInputObj.dimFactorConv;&#13;
&#13;
							volumetricWeight = 0.0;&#13;
							if (dimFactor &gt; 0 &amp;&amp; dimFactorConv&#13;
									&amp;&amp; dimObj.dims.volInCBM) {&#13;
								if (dimFactorConv === 'cm/kg') {&#13;
									volumetricWeight = (dimObj.dims.volInCBM * 1000000)&#13;
											/ dimFactor;&#13;
								} else if (dimFactorConv === 'in/lb') {&#13;
									volumetricWeight = (dimObj.dims.volInCBM * 61024)&#13;
											/ dimFactor;&#13;
									volumetricWeight = volumetricWeight * 0.45359237;&#13;
								}&#13;
							}&#13;
							weight = (weight * accObj.wtConvRate) &gt; (volumetricWeight * accObj.wtConvRate) ? weight&#13;
									: volumetricWeight;&#13;
						}&#13;
&#13;
						if (accObj.minWeight) {&#13;
							weight = weight &lt; accObj.minWeight ? accObj.minWeight&#13;
									: weight;&#13;
						}&#13;
						totalAmt = accObj.amount * weight * accObj.wtConvRate;&#13;
						quantity = weight * accObj.wtConvRate;&#13;
					}&#13;
					if (dimObj.dims.volInCBM &amp;&amp; accObj.volConvRate) {&#13;
						volume = dimObj.dims.volInCBM;&#13;
						if (accObj.minVolume) {&#13;
							volume = volume &lt; accObj.minVolume ? accObj.minVolume&#13;
									: volume;&#13;
						}&#13;
						totalAmt = accObj.amount * volume * accObj.volConvRate;&#13;
						quantity = volume * accObj.volConvRate;&#13;
					}&#13;
&#13;
					if ((dimObj.dims.dstInMile || (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1))&#13;
							&amp;&amp; accObj.dstConvRate) {&#13;
						distance = 0.0;&#13;
						if (dimObj.dims.dstInMile) {&#13;
							distance = dimObj.dims.dstInMile;&#13;
						} else {&#13;
							distance = this.getEffectiveDistance(dimObj);&#13;
						}&#13;
						totalAmt = accObj.amount * distance&#13;
								* accObj.dstConvRate;&#13;
						quantity = distance * accObj.dstConvRate;&#13;
					}&#13;
&#13;
					if (accObj.basis == '/FLAT') {&#13;
						totalAmt = accObj.amount;&#13;
						quantity = 1;&#13;
					}&#13;
					if (accObj.amount &amp;&amp; accObj.basis == '/WM') {&#13;
						weight = dimObj.dims.wtInKG;&#13;
						volume = dimObj.dims.volInCBM;&#13;
						wmUnit = 0;&#13;
						if (weight) {&#13;
							wmUnit = weight * accObj.wtConvRate;&#13;
						}&#13;
						if (volume) {&#13;
							wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
						}&#13;
						totalAmt = accObj.amount * wmUnit;&#13;
						quantity = wmUnit;&#13;
					}&#13;
&#13;
					if (rateInputObj.baseRate.basis == accObj.basis&#13;
							&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
						totalAmt = accObj.amount;&#13;
						accObj.supportedBasis = true;&#13;
					} else if (rateInputObj.baseRate.basis != accObj.basis&#13;
							&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
						totalAmt = 0;&#13;
					}&#13;
&#13;
					if (accObj.minAmount) {&#13;
						rateInputObj.accessorials[i].appliedMin = totalAmt &lt; accObj.minAmount ? accObj.minAmount : 0;&#13;
						totalAmt = totalAmt &lt; accObj.minAmount ? accObj.minAmount&#13;
								: totalAmt;&#13;
					}&#13;
					if (accObj.maxAmount) {&#13;
						rateInputObj.accessorials[i].appliedMax = totalAmt &gt; accObj.maxAmount ? accObj.maxAmount : 0;&#13;
						totalAmt = totalAmt &gt; accObj.maxAmount ? accObj.maxAmount&#13;
								: totalAmt;&#13;
					}&#13;
&#13;
					if (!dimObj.dims.isHazMat &amp;&amp; accObj.isHazMat) {&#13;
						totalAmt = 0;&#13;
					}&#13;
&#13;
					rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
					if (accObj.basis == '/stop') {&#13;
						rateInputObj.stopOffTotal = parseFloat(totalAmt);&#13;
						if(totalAmt &amp;&amp; totalAmt &gt;0) {&#13;
							rateInputObj.accessorials[i].quantity = 1;&#13;
						}&#13;
					} else{&#13;
						rateInputObj.accessorials[i].total = parseFloat(totalAmt);&#13;
						if(totalAmt &amp;&amp; totalAmt &gt;0) {&#13;
							rateInputObj.accessorials[i].quantity = quantity;&#13;
						}&#13;
					}&#13;
				}&#13;
			}&#13;
		}&#13;
	};&#13;
&#13;
	this.getSurchargeAmount = function(dimObj, surcharge) {&#13;
		surchargeAmount = 0;&#13;
		inputObj = rateInputObj.baseRate;&#13;
		quantity = 0;&#13;
		if (surcharge.basis === '/container') {&#13;
			if (inputObj.equipmentType &amp;&amp; dimObj.dims[inputObj.equipmentType]) {&#13;
				surchargeAmount = surcharge.amount&#13;
						* dimObj.dims[inputObj.equipmentType];&#13;
				quantity = dimObj.dims[inputObj.equipmentType];&#13;
			} else {&#13;
				quantity = 1;&#13;
				return surchargeAmount;&#13;
			}&#13;
		}&#13;
&#13;
		if (surcharge.basis === '/delivery' || surcharge.basis === '/entry'&#13;
				|| surcharge.basis === '/shipment') {&#13;
			surchargeAmount = surcharge.amount;&#13;
			quantity = 1;&#13;
		}&#13;
&#13;
		if (surcharge.basis === '/package' || surcharge.basis === '/pallet'&#13;
				|| surcharge.basis === '/unit' || surcharge.basis === '/carton'&#13;
				|| surcharge.basis === '/LNM' || surcharge.basis === '/SQM'&#13;
				|| surcharge.basis === '/MSF' || surcharge.basis === '/MBF'&#13;
				|| accObj.basis === '/LDM') {&#13;
			if (dimObj.dims.genericQty &amp;&amp; dimObj.dims.genericQtyUnit&#13;
					&amp;&amp; (dimObj.dims.genericQtyUnit === surcharge.basis)) {&#13;
				surchargeAmount = surcharge.amount * dimObj.dims.genericQty;&#13;
				quantity = dimObj.dims.genericQty;&#13;
			} else if (dimObj.dims[surcharge.basis]) {&#13;
				surchargeAmount = surcharge.amount&#13;
						* dimObj.dims[surcharge.basis];&#13;
				quantity = dimObj.dims[surcharge.basis];&#13;
			}&#13;
		}&#13;
&#13;
		if (surcharge.amount &amp;&amp; surcharge.basis == '/FLAT') {&#13;
			surchargeAmount = surcharge.amount;&#13;
			quantity = 1;&#13;
		}&#13;
&#13;
		if (dimObj.dims.wtInKG &amp;&amp; surcharge.wtConvRate) {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			// GTN-25018 : Chargeable Weight scenario.&#13;
			if (surcharge.calculatedWeightBasis&#13;
					&amp;&amp; surcharge.calculatedWeightBasis === 'Chargeable Weight') {&#13;
				dimFactor = rateInputObj.dimFactor;&#13;
				dimFactorConv = rateInputObj.dimFactorConv;&#13;
				volumetricWeight = 0.0;&#13;
				if (dimFactor &gt; 0 &amp;&amp; dimFactorConv &amp;&amp; dimObj.dims.volInCBM) {&#13;
					if (dimFactorConv === 'cm/kg') {&#13;
						volumetricWeight = (dimObj.dims.volInCBM * 1000000)&#13;
								/ dimFactor;&#13;
					} else if (dimFactorConv === 'in/lb') {&#13;
						volumetricWeight = (dimObj.dims.volInCBM * 61024)&#13;
								/ dimFactor;&#13;
						volumetricWeight = volumetricWeight * 0.45359237;&#13;
					}&#13;
				}&#13;
				weight = (weight * surcharge.wtConvRate) &gt; (volumetricWeight * surcharge.wtConvRate) ? weight&#13;
						: volumetricWeight;&#13;
			}&#13;
			if (surcharge.minWeight) {&#13;
				surcharge.appliedWeight = weight &lt; surcharge.minWeight ? surcharge.minWeight : weight;&#13;
				weight = weight &lt; surcharge.minWeight ? surcharge.minWeight&#13;
						: weight;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * weight * surcharge.wtConvRate;&#13;
			quantity = weight * surcharge.wtConvRate;&#13;
		}&#13;
&#13;
		if (dimObj.dims.volInCBM &amp;&amp; surcharge.volConvRate) {&#13;
			volume = dimObj.dims.volInCBM;&#13;
			if (surcharge.minVolume) {&#13;
				surcharge.appliedVolume = volume &lt; surcharge.minVolume ? surcharge.minVolume : volume;&#13;
				volume = volume &lt; surcharge.minVolume ? surcharge.minVolume&#13;
						: volume;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * volume * surcharge.volConvRate;&#13;
			quantity = volume * surcharge.volConvRate;&#13;
		}&#13;
&#13;
		if (surcharge.amount &amp;&amp; surcharge.basis == '/WM') {&#13;
			weight = dimObj.dims.wtInKG;&#13;
			volume = dimObj.dims.volInCBM;&#13;
			wmUnit = 0;&#13;
			if (weight) {&#13;
				wmUnit = weight * surcharge.wtConvRate;&#13;
			}&#13;
			if (volume) {&#13;
				wmUnit = wmUnit &gt; volume ? wmUnit : volume;&#13;
			}&#13;
			if (surcharge.minWeight) {&#13;
				surcharge.appliedWeight = wmUnit &lt; surcharge.minWeight ? surcharge.minWeight : wmUnit;&#13;
				wmUnit = wmUnit &lt; surcharge.minWeight ? surcharge.minWeight&#13;
						: wmUnit;&#13;
				surcharge.wtConvRate = 1;&#13;
			}&#13;
			surchargeAmount = surcharge.amount * wmUnit;&#13;
			quantity = wmUnit;&#13;
		}&#13;
&#13;
		if ((dimObj.dims.dstInMile || (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1))&#13;
				&amp;&amp; surcharge.dstConvRate) {&#13;
			if (surcharge.basis == '/stop') {&#13;
				surchargeAmount = surcharge.amount * dimObj.stopOffs.length&#13;
					* surcharge.dstConvRate;&#13;
				quantity = dimObj.stopOffs.length * surcharge.dstConvRate;&#13;
			} else {&#13;
				distance = 0.0;&#13;
				if (dimObj.dims.dstInMile) {&#13;
					distance = dimObj.dims.dstInMile;&#13;
				} else {&#13;
					distance = this.getEffectiveDistance(dimObj);&#13;
				}&#13;
				surchargeAmount = surcharge.amount * distance&#13;
						* surcharge.dstConvRate;&#13;
				quantity = distance * surcharge.dstConvRate;&#13;
			}&#13;
		}&#13;
&#13;
		if (rateInputObj.baseRate.basis == inputObj.basis&#13;
				&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
			surchargeAmount = surcharge.amount;&#13;
			surcharge.supportedBasis = true;&#13;
			rateInputObj.accessorials[i].quantity = quantity;&#13;
		} else if (rateInputObj.baseRate.basis != surcharge.basis&#13;
				&amp;&amp; !rateInputObj.baseRate.supportedBasis) {&#13;
			surchargeAmount = 0;&#13;
		}&#13;
&#13;
		if (surcharge.minAmount) {&#13;
			surcharge.appliedMin = totalAmt &lt; inputObj.minAmount ? inputObj.minAmount : 0;			&#13;
			surchargeAmount = surchargeAmount &lt; surcharge.minAmount ? surcharge.minAmount&#13;
					: surchargeAmount;&#13;
		}&#13;
		if (surcharge.maxAmount) {&#13;
			surcharge.appliedMax = totalAmt &gt; inputObj.maxAmount ? inputObj.maxAmount : 0;&#13;
			surchargeAmount = surchargeAmount &gt; surcharge.maxAmount ? surcharge.maxAmount&#13;
					: surchargeAmount;&#13;
		}&#13;
		return surchargeAmount;&#13;
	}&#13;
&#13;
	this.evaluateStopOff = function(stopOffs) {&#13;
		stopOffAmt = 0.0;&#13;
		if (rateInputObj.stopBands &amp;&amp; stopOffs &amp;&amp; stopOffs.length &gt; 2) {&#13;
			numOfStopOffs = stopOffs.length - 2;&#13;
			remainingStopOffs = numOfStopOffs;&#13;
			previousEnd = 0;&#13;
&#13;
			for (i = 0; i &lt; rateInputObj.stopBands.length; i++) {&#13;
				start = rateInputObj.stopBands[i].start;&#13;
				end = rateInputObj.stopBands[i].stop;&#13;
				if (numOfStopOffs &gt; end) {&#13;
					stopOffAmt = stopOffAmt&#13;
							+ (rateInputObj.stopBands[i].costPerStop * (end - previousEnd));&#13;
					remainingStopOffs -= (end - previousEnd);&#13;
					previousEnd = end;&#13;
&#13;
				} else if (numOfStopOffs &gt;= start &amp;&amp; numOfStopOffs &lt;= end) {&#13;
					stopOffAmt = stopOffAmt&#13;
							+ (rateInputObj.stopBands[i].costPerStop * remainingStopOffs);&#13;
					break;&#13;
				}&#13;
			}&#13;
			rateInputObj.stopOffTotal = parseFloat(stopOffAmt);&#13;
		}&#13;
&#13;
	};&#13;
	&#13;
	this.getDistanceSplit = function(dimObj) {&#13;
		distance = 0.0;&#13;
		var distObj = [];&#13;
		var distArr = [];&#13;
		var jsonBaseRate = rateInputObj.baseRate;&#13;
		if(dimObj.stopOffs) {&#13;
			for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
				origStop = dimObj.stopOffs[i].stop;&#13;
				if (origStop.indexOf('__') &gt; 0) {&#13;
					origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
				}&#13;
				destStop = dimObj.stopOffs[i + 1].stop;&#13;
				if (destStop.indexOf('__') &gt; 0) {&#13;
					destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
				}&#13;
				if (origStop == destStop) {&#13;
					distance = distance + 0.01;&#13;
					distObj = {Distance:distance, OrigStop:origStop, DestStop:destStop};&#13;
					distArr.push(distObj);&#13;
					continue;&#13;
				}&#13;
				if (!distanceMatrix[origStop]&#13;
						|| !distanceMatrix[origStop][destStop]) {&#13;
					if (rateInputObj.distance) {&#13;
						return rateInputObj.distance;&#13;
					} else {&#13;
						return 9999999;&#13;
					}&#13;
				}&#13;
				distval = distanceMatrix[origStop][destStop];&#13;
				distObj = {Distance:distval, OrigStop:origStop, DestStop:destStop};&#13;
				distArr.push(distObj);&#13;
				distance = distance + distanceMatrix[origStop][destStop];&#13;
			}&#13;
		}&#13;
			jsonBaseRate["distArr"] = distArr;&#13;
		return jsonBaseRate;&#13;
	};&#13;
	&#13;
	this.evaluateTransitTime = function(dimObj) {&#13;
		transittime = 0.0;&#13;
		if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {		&#13;
			if (dimObj.stopOffs &amp;&amp; dimObj.stopOffs.length &gt; 1) {&#13;
				for (i = 0; i &lt; dimObj.stopOffs.length - 1; i++) {&#13;
					origStop = dimObj.stopOffs[i].stop;&#13;
					if (origStop.indexOf('__') &gt; 0) {&#13;
						origStop = origStop.slice(0, origStop.indexOf('__'));&#13;
					}&#13;
					destStop = dimObj.stopOffs[i + 1].stop;&#13;
					if (destStop.indexOf('__') &gt; 0) {&#13;
						destStop = destStop.slice(0, destStop.indexOf('__'));&#13;
					}&#13;
					if (origStop == destStop) {&#13;
						transittime = transittime + 0.01;&#13;
						continue;&#13;
					}&#13;
					if (!transitTimeMatrix[origStop]&#13;
							|| !transitTimeMatrix[origStop][destStop]) {&#13;
							transittime = parseFloat(9999999);&#13;
							break;&#13;
					}&#13;
					transittime = transittime + transitTimeMatrix[origStop][destStop];&#13;
				}&#13;
			} &#13;
		}	&#13;
		rateInputObj.baseRate.transittime = parseFloat(transittime);		&#13;
	};&#13;
};var constraints = {/*##*/resources:{"9":{"max_weight":28250.0,"max_qty":1.0,"max_cube":28.0},"10":{"max_cube":56.0,"max_weight":28800.0,"max_qty":2.0},"11":{"max_weight":27700.0,"max_cube":75.0,"max_qty":2.532},"12":{"max_cube":90.0,"max_weight":30200.0,"max_qty":2.886},"13":{"max_qty":2.0},"17":{"max_weight":1.0,"max_cube":1.0,"max_qty":1.0},"18":{"max_weight":30200.0,"max_qty":2.25,"max_cube":65.0},"19":{"max_weight":27700.0,"max_cube":75.0,"max_qty":2.532},"20":{"max_weight":30200.0,"max_cube":90.0,"max_qty":2.886},"84":{"max_weight":18100.0,"max_qty":2.886,"max_cube":85.0},"799":{"max_qty":2.0,"max_weight":24000.0}},/*##*/locations:{1073793412:{},1073793415:{},1073780592:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073779541:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073792350:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073779540:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073792353:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073780591:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073793404:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073793401:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073780590:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073793405:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073792349:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073792351:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073793398:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073793407:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073793413:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}},1073793414:{fixed_time:0,max_variable_time:0,LOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}},UNLOADING:{weight_time:{time_factor:0,division_factor:1.0},volume_time:{time_factor:0,division_factor:1.0}}}}}; evaluateConstraints = function evaluateConstraints(dimObj) {
	var resourceData = this.id.split("_");
	var resource = resourceData[1];
	if ((resource in constraints.resources)) {
		if ("max_weight" in constraints.resources[resource]
				&amp;&amp; dimObj.dims.wtInKG &gt; constraints.resources[resource].max_weight)
			return false;
		if ("max_cube" in constraints.resources[resource]
				&amp;&amp; dimObj.dims.volInCBM &gt; constraints.resources[resource].max_cube)
			return false;
	}
	return true;
};


var carrier = function(resourceInputObj){
	this.evaluateCarrierConstraint = function (dimObj){
	resource = resourceInputObj.id;
    if (!(resource in constraints.resources))
		return true;
	
	if ("maxstops" in constraints.resources[resource]
			&amp;&amp; dimObj.stopOffs.length  &gt; constraints.resources[resource].maxstops ){
		return false;
		}
	if ("max_distance" in constraints.resources[resource]
			&amp;&amp; isMaxDistanceCrossed(dimObj, resource)) {
		return false;
	}
	if ("maximum_single_hours" in constraints.resources[resource]
			&amp;&amp; isMaxDriveTimeCrossed(dimObj, resource)) {
		return false;
	}
	if ("maximum_out_of_route_miles" in constraints.resources[resource]
			&amp;&amp; isMaxOutOfRouteMile(dimObj, resource)) {
		return false;
	}
		return true;
	}
};



isMaxOutOfRouteMile = function isMaxOutOfRouteMile(dimObj, resourceid) {
	var totalDistance = 0;
	var maxOutOfRouteMile = 0;
	try {
		totalDistance = distanceMatrix[sliceStopOffData(dimObj.stopOffs[0].stop)][sliceStopOffData(dimObj.stopOffs[dimObj.stopOffs.length - 1].stop)];
	} catch (err) {
		warn('error distanceMatrix  does not exist in  isMaxOutOfRouteMile');
	}
	;

	try {
		maxOutOfRouteMile = constraints.resources[resourceid].maximum_out_of_route_miles;

	} catch (err) {
		warn('maxOutOfRouteMile  does not exist in  for resource' + resourceid);
		maxOutOfRouteMile = 0;
	}
	;

	var totalDriveDistance = getTotalDriveDistance(dimObj);
	
	if (constraints.resources[resourceid].maxoutofroutemilesunit == "%") {
		maxOutOfRouteMile = ((maxOutOfRouteMile / 100) * totalDistance)
				+ totalDistance;
	} else {
		maxOutOfRouteMile = maxOutOfRouteMile + totalDistance;
		
		if (!isNaN(maxOutOfRouteMile)) {
			// warn('maxOutOfRouteMile==' + maxOutOfRouteMile);
			// warn('totalDriveDistance=' + totalDriveDistance+' for
			// resourceid'+ resourceid);

		}
	}
	if (totalDriveDistance &gt; maxOutOfRouteMile) {
		// warn('totalDriveDistance =='+totalDriveDistance
		// +'-'+maxOutOfRouteMile);
		return true;
	}
	// warn('in else totalDriveDistance =='+totalDriveDistance
	// +'-'+maxOutOfRouteMile);
	return false;
};

isMaxDistanceCrossed = function isMaxDistanceCrossed(dimObj, resourceid) {
	var totalDriveDistance = getTotalDriveDistance(dimObj);
	if (totalDriveDistance &gt; constraints.resources[resourceid].max_distance) {
		return true;
	}
	return false;
};

isMaxDriveTimeCrossed = function isMaxDriveTimeCrossed(dimObj, resourceid) {
	var totalDriveTime = getTotalDriveTime(dimObj);
	if (totalDriveTime &gt; constraints.resources[resourceid].maximum_single_hours) {
		return true;
	}
	return false;
};

getTotalDriveDistance = function getTotalDriveDistance(dimObj) {
	var totalDriveDistance = 0;
	try {
		for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);
			var distance = distanceMatrix[stop1][stop2]
			if (!isNaN(distance)) {
				totalDriveDistance = totalDriveDistance + (distance);
			} else {
				warn('can give wrong data,since');
				warn(' no dtm between ' + stop1 + '-' + stop2);
			}
		}
	} catch (err) {
		warn('distanceMatrix  does not exist for ' + stop1 + '-' + stop2);
	}
	;
	return totalDriveDistance;
};

getTotalDriveTime = function getTotalDriveTime(dimObj) {
	var totalDriveTime = 0;
	try {
		for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);
			totalDriveTime = totalDriveTime + (transitTimeMatrix[stop1][stop2]);
		}
	} catch (err) {
		warn('transitTimeMatrix  does not exist for ' + stop1 + '-' + stop2);
	}
	;
	return totalDriveTime;
};

sliceStopOffData = function sliceStopOffData(stopOffData) {
	var stop = stopOffData;
	try {

		if (stopOffData.indexOf('__') &gt; 0) {
			stop = stopOffData.slice(0, stopOffData.indexOf('__'));
		}
	} catch (err) {
		warn('stopOffData incorrect for ' + stopOffData);
	}
	return JSON.parse(stop);
};

getProcessingTime = function getProcessingTime(dimObj) {

	if (typeof dimObj.stopOffs[1] == 'undefined') {
		return 1000000;
	}
	trasitTime = 0;
	// warn(dimObj.stopOffs[0].stop+'__'+dimObj.stopOffs[1].stop);
	if ((dimObj.stopOffs[0].stop.indexOf('TRANSPORT') &gt; -1)
			|| ((dimObj.stopOffs[1] == 'undefined') || (dimObj.stopOffs[1].stop
					.indexOf('TRANSPORT') &gt; -1))) {
		return 99999;
	}
	var finalloadthroughput = 0;
	finalloadthroughput = getFinalLoadThroughput(dimObj);
	if (isNaN(finalloadthroughput)) {
		finalloadthroughput = 0;
	}

	var finalunloadthroughput = 0;
	finalunloadthroughput = getFinalUnLoadThroughput(dimObj);
	if (isNaN(finalunloadthroughput)) {
		finalunloadthroughput = 0;
	}

	try {
		trasitTime = finalloadthroughput + transitTimeMatrix[stop1][stop2]
				+ finalunloadthroughput;
		if (isNaN(trasitTime)) {
			warn('errcause no transittime for ' + stop1 + '-- ' + stop2);
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getOceanAirProcessingTime = function getOceanAirProcessingTime(dimObj) {
	return this.transitTime;
	};

getFinalThroughput = function getFinalThroughput(dimObj) {
	var finalTroughputResult = '';

	for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length); stopIndex++) {
		var stop = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
		if (dimObj.dims.wtInKG != 0) {
			if ((stop in constraints.locations)
					&amp;&amp; ("Throughput" in constraints.locations[stop])) {
				finalTroughputResult = finalTroughputResult + stop + '--'
						+ ((constraints.locations[stop].Throughput)) + '--';
			}
		}
	}
	return finalTroughputResult;
};

getDistanceBetweenStops = function getDistanceBetweenStops(dimObj) {
	var distancebetweenstops = "";
	for (var stopIndex = 0; stopIndex &lt; (dimObj.stopOffs.length - 1); stopIndex++) {
		try {
			var stop1 = sliceStopOffData(dimObj.stopOffs[stopIndex].stop);
			var stop2 = sliceStopOffData(dimObj.stopOffs[stopIndex + 1].stop);

			distancebetweenstops = distancebetweenstops + "#" + stop1 + "_"
					+ stop2;
			distancebetweenstops = distancebetweenstops + "#"
					+ distanceMatrix[stop1][stop2];
		} catch (err) {
			warn('err cause no distancebetweenstops ' + stop1 + ' -- ' + stop2);
		}
	}
	return distancebetweenstops;
};

getFinalLoadThroughput = function getFinalLoadThroughput(dimObj) {
	var varloadthroughput = 0;
	stop1 = sliceStopOffData(dimObj.stopOffs[0].stop);
	try {
		if (stop1 in constraints.locations
				&amp;&amp; ("LOADING" in constraints.locations[stop1])) {

			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop1].LOADING["weight_time"].division_factor)
						* constraints.locations[stop1].LOADING["weight_time"].time_factor;
				varloadthroughput = varweightthrouput;
			}

			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop1].LOADING["volume_time"].division_factor)
						* constraints.locations[stop1].LOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varloadthroughput) {
					varloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop1].max_variable_time != 0) {
			if (constraints.locations[stop1].max_variable_time &lt; varloadthroughput) {
				varloadthroughput = constraints.locations[stop1].max_variable_time;
			}
		}
		return constraints.locations[stop1].fixed_time + varloadthroughput;
	} catch (err) {
		warn('err calculating load throughput for stop ' + stop1 + '-- '
				+ err.message);
		return 0;
	}
};

getFinalUnLoadThroughput = function getFinalUnLoadThroughput(dimObj) {
	var varunloadthroughput = 0;
	stop2 = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
	try {
		if (stop2 in constraints.locations
				&amp;&amp; "UNLOADING" in constraints.locations[stop2]) {
			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop2].UNLOADING["weight_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["weight_time"].time_factor;

				varunloadthroughput = varweightthrouput;
			}
			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop2].UNLOADING["volume_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varunloadthroughput) {
					varunloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop2].max_variable_time != 0) {
			if (constraints.locations[stop2].max_variable_time &lt; varunloadthroughput) {
				varunloadthroughput = constraints.locations[stop2].max_variable_time;
			}
		}
		// warn('Unloading varunloadthroughput ' + varunloadthroughput + ' stop2
		// ' + stop2+' fixed_time ' + constraints.locations[stop2].fixed_time);
		return constraints.locations[stop2].fixed_time + varunloadthroughput;
	} catch (err) {
		warn('err calculating Unload throughput for stop ' + stop2 + '-- '
				+ err.message);
		return 0;
	}
};

getOceanAirLoadingProcessingTime = function getOceanAirLoadingProcessingTime(dimObj) {

	trasitTime = 0;
	var finalloadthroughput = 0;
	finalloadthroughput = getFinalLoadThroughput(dimObj);
	if (isNaN(finalloadthroughput)) {
		finalloadthroughput = 0;
	}

	try {
		trasitTime = finalloadthroughput;
		if (isNaN(trasitTime)) {
			warn('failed');
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getOceanAirProcessingTime = function getOceanAirProcessingTime(dimObj) {
return this.transitTime;
};

getOceanAirUnloadingProcessingTime = function getOceanAirUnloadingProcessingTime(dimObj) {

trasitTime = 0;
	var finalunloadthroughput = 0;
	finalunloadthroughput = getFinalUnLoadThroughput1(dimObj);
	if (isNaN(finalunloadthroughput)) {
		finalunloadthroughput = 0;
	}

	/*
	 * warn('finalloadthroughput ' + finalloadthroughput + '
	 * finalunloadthroughput ' + finalunloadthroughput + ' matrix ' +
	 * transitTimeMatrix[stop1][stop2]);
	 */
	try {
		trasitTime = finalunloadthroughput;
		if (isNaN(trasitTime)) {
			warn('unloading failed');
			return 0;
		}
	} catch (err) {
		warn('err cause-- ' + err.message);
		warn(JSON.stringify(dimObj))
		return 0;
	}
	// warn('trasitTime ' + stop1 + ' -- ' + stop2 + ': ' + trasitTime);
	return (trasitTime);
};

getFinalUnLoadThroughput1 = function getFinalUnLoadThroughput1(dimObj) {
	var varunloadthroughput = 0;
	var stop2;
	//warn(" calculating Unload throughput for stop ' + s");
	try {
	//warn(dimObj.stopOffs);
	stop2 = JSON.parse(sliceStopOffData(dimObj.stopOffs[1].stop));
	if(typeof stop2 == 'undefined')
	  return 0;
	  
		if (stop2 in constraints.locations
				&amp;&amp; "UNLOADING" in constraints.locations[stop2]) {
			if (dimObj.dims.wtInKG != 0) {
				varweightthrouput = (dimObj.dims.wtInKG / constraints.locations[stop2].UNLOADING["weight_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["weight_time"].time_factor;

				varunloadthroughput = varweightthrouput;
			}
			if (dimObj.dims.volInCBM &gt; 0) {
				varvolumethrouput = (dimObj.dims.volInCBM / constraints.locations[stop2].UNLOADING["volume_time"].division_factor)
						* constraints.locations[stop2].UNLOADING["volume_time"].time_factor;
				if (varvolumethrouput &gt; varunloadthroughput) {
					varunloadthroughput = varvolumethrouput;
				}
			}
		}
		if (constraints.locations[stop2].max_variable_time != 0) {
			if (constraints.locations[stop2].max_variable_time &lt; varunloadthroughput) {
				varunloadthroughput = constraints.locations[stop2].max_variable_time;
			}
		}
		// warn('Unloading varunloadthroughput ' + varunloadthroughput + ' stop2
		// ' + stop2+' fixed_time ' + constraints.locations[stop2].fixed_time);
		return constraints.locations[stop2].fixed_time + varunloadthroughput;
	} catch (err) {
		//warn('err calculating Unload throughput for stop ' + stop2 + '-- '
				//+ err.message);
			//	warn("catch");
		return 0;
	}
};</globalScript><applyConsolidationRules ttype="STRING">Yes</applyConsolidationRules><requirementConsolidationLevel ttype="I32">0</requirementConsolidationLevel></supplyChain><requirements ttype="MAP"><item><key ttype="STRING">59947310744</key><value struct="LoadRequirement" ttype="STRUCT"><id ttype="STRING">59947310744</id><name ttype="STRING">59947310744</name><minDivision ttype="LIST"><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">wtInKG</unit><quantityPerDivision ttype="DOUBLE">200.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">volInCBM</unit><quantityPerDivision ttype="DOUBLE">3.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/pallet</unit><quantityPerDivision ttype="DOUBLE">1000.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/carton</unit><quantityPerDivision ttype="DOUBLE">1000.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/package</unit><quantityPerDivision ttype="DOUBLE">1000.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/SQM</unit><quantityPerDivision ttype="DOUBLE">1000.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/LNM</unit><quantityPerDivision ttype="DOUBLE">1000.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">/unit</unit><quantityPerDivision ttype="DOUBLE">1000.0</quantityPerDivision></item><item struct="MinDivision" ttype="STRUCT"><unit ttype="STRING">NumberOfTOS</unit><quantityPerDivision ttype="DOUBLE">1.0</quantityPerDivision></item></minDivision><referenceUnitName ttype="STRING">order</referenceUnitName><quantity ttype="I32">1</quantity><source ttype="STRING">1073793412__START_REQUIREMENT</source><destination ttype="STRING">1073793415__END_REQUIREMENT</destination><earliestDepartTime ttype="I64">1535155200</earliestDepartTime><earliestDeliveryTime ttype="I64">1535155260</earliestDeliveryTime><latestDepartTime ttype="I64">1538179200</latestDepartTime><latestDeliveryTime ttype="I64">1539561600</latestDeliveryTime><compatibilityClass ttype="STRING">20312</compatibilityClass><freightClass ttype="STRING">Class 50</freightClass></value></item></requirements><modelingLanguageVersion ttype="STRING">3.2</modelingLanguageVersion></OptimizationInstance>